var e=Object.defineProperty,t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,r=(t,n,o)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[n]=o,s=(e,s)=>{for(var i in s||(s={}))n.call(s,i)&&r(e,i,s[i]);if(t)for(var i of t(s))o.call(s,i)&&r(e,i,s[i]);return e};import{R as i,L as a,k as d,_ as l,M as c,S as m,E as h,a as p,b as u,i as f,D as g,N as k,r as w,f as y,c as v,I as b,d as x,e as M,g as E,t as N,T as _,C as S,h as C,j as T,l as A,P as L,m as P,n as O,s as I,o as R,p as j,q as D,u as W,v as $,w as H,x as z,y as B,z as V,A as K,B as F,F as q,G as Y,H as U,J as G,K as J,O as X,Q,U as Z,V as ee,W as te,X as ne,Y as oe,Z as re,$ as se,a0 as ie,a1 as ae,a2 as de,a3 as le,a4 as ce,a5 as me,a6 as he,a7 as pe,a8 as ue,a9 as fe,aa as ge,ab as ke,ac as we,ad as ye,ae as ve,af as be,ag as xe,ah as Me,ai as Ee,aj as Ne,ak as _e,al as Se}from"./vendor.d3048977.js";var Ce="_body_oecvv_1",Te="_main_oecvv_10",Ae="_content_oecvv_19",Le="_container_oecvv_29",Pe="_title_oecvv_40",Oe="_desc_oecvv_49",Ie="_logo_oecvv_57",Re="_buttons_oecvv_64",je="_curve_oecvv_99";const De=()=>i.createElement("section",{className:Ce},i.createElement("section",{className:Te},i.createElement("div",{className:Le},i.createElement("div",{className:Ae},i.createElement("h1",{className:Pe},"Milkdown"),i.createElement("p",{className:Oe},"Plugin Based WYSIWYG Markdown Editor"),i.createElement("section",{className:Re},i.createElement(a,{to:"/getting-started"},"Get Started"),i.createElement(a,{to:"/online-demo"},"Online Demo"))),i.createElement("section",{className:Ie},i.createElement("img",{src:"/milkdown/milkdown-homepage.svg"})))),i.createElement("div",{className:je},i.createElement("svg",{viewBox:"0 0 1152 73"},i.createElement("path",{d:"M99.0331 0.252716C59.2655 0.284556 0 25.2197 0 25.2197V0.252716H99.0331C99.0585 0.252696 99.0839 0.252686 99.1093 0.252686C99.1538 0.252686 99.1982 0.252696 99.2427 0.252716H1152V73C1018.73 21.6667 957.818 24.4226 819.692 22.7693C672.54 21.008 573.085 73 427.919 73C308.414 73 218.068 0.307089 99.2427 0.252716H99.0331Z"}))));var We,$e,He,ze,Be;($e=We||(We={}))[$e.Idle=0]="Idle",$e[$e.LoadSchema=1]="LoadSchema",$e[$e.SchemaReady=2]="SchemaReady",$e[$e.LoadPlugin=3]="LoadPlugin",$e[$e.Complete=4]="Complete";class Ve{constructor(e={}){this.options=e}injectContext(e,t){this.context=e,this.updateContext=t}}class Ke extends Ve{constructor(){super(...arguments),this.loadAfter=We.Idle}main(){this.updateContext({marks:this.context.marks.concat(this)})}}class Fe extends Ve{constructor(){super(...arguments),this.loadAfter=We.Idle}main(){this.updateContext({nodes:this.context.nodes.concat(this)})}}class qe extends Ve{constructor(){super(...arguments),this.id="inputRulesLoader",this.loadAfter=We.SchemaReady}main(){const{nodes:e,marks:t,schema:n}=this.context,o=[...e.reduce(((e,t)=>{const o=n.nodes[t.id];return o&&t.inputRules?[...e,...t.inputRules(o,n)]:e}),[]),...t.reduce(((e,t)=>{const o=n.marks[t.id];return o&&t.inputRules?[...e,...t.inputRules(o,n)]:e}),[])];this.updateContext({inputRules:o})}}class Ye extends Ve{constructor(){super(...arguments),this.id="keymapLoader",this.loadAfter=We.SchemaReady}main(){const{nodes:e,marks:t,schema:n}=this.context,o=[...e.map((e=>{var t;const o=n.nodes[e.id];if(!o)throw new Error;return null===(t=e.keymap)||void 0===t?void 0:t.call(e,o,n)})),...t.map((e=>{var t;const o=n.marks[e.id];if(!o)throw new Error;return null===(t=e.keymap)||void 0===t?void 0:t.call(e,o,n)}))].filter((e=>Boolean(e))).map((e=>d(e)));this.updateContext({keymap:o})}}class Ue extends Ve{constructor(){super(...arguments),this.id="nodeViewsLoader",this.loadAfter=We.SchemaReady}main(){const{nodes:e,marks:t,schema:n,editor:o}=this.context,r=e.filter((e=>Boolean(e.view))).reduce(((e,t)=>{const{view:r}=t,s=n.nodes[t.id];return s&&r?Object.assign(Object.assign({},e),{[t.id]:(...e)=>r(o,s,...e)}):e}),{}),s=t.filter((e=>Boolean(e.view))).reduce(((e,t)=>{const{view:r}=t,s=n.marks[t.id];return s&&r?Object.assign(Object.assign({},e),{[t.id]:(...e)=>r(o,s,...e)}):e}),{}),i=Object.assign(Object.assign({},r),s);this.updateContext({nodeViews:i})}}class Ge{constructor(e,t,n){this.stack=e,this.schema=t,this.specMap=n,He.add(this),this.run=(e,t)=>{const n=e.parse(t);return this.next(n),this},this.injectRoot=(e,t,n)=>(this.stack.openNode(t,n),this.next(e.children),this),this.addText=(e="")=>(this.stack.addText((t=>this.schema.text(e,t))),this),this.addNode=(...e)=>(this.stack.addNode(...e),this),this.openNode=(...e)=>(this.stack.openNode(...e),this),this.closeNode=(...e)=>(this.stack.closeNode(...e),this),this.openMark=(...e)=>(this.stack.openMark(...e),this),this.closeMark=(...e)=>(this.stack.closeMark(...e),this),this.toDoc=()=>this.stack.build(),this.next=(e=[])=>(Array.isArray(e)?e.forEach((e=>l(this,He,"m",Be).call(this,e))):l(this,He,"m",Be).call(this,e),this)}}He=new WeakSet,ze=function(e){const t=Object.entries(this.specMap).map((([e,t])=>Object.assign({key:e},t))).find((t=>t.match(e)));if(!t)throw new Error;return t},Be=function(e){const{key:t,runner:n,is:o}=l(this,He,"m",ze).call(this,e);n(this,e,this.schema["node"===o?"nodes":"marks"][t])};const Je=e=>e.isText,Xe=e=>e.elements.length,Qe=e=>e.elements[Xe(e)-1],Ze=e=>(t,n)=>e.elements.push(((e,t,n)=>{const o={type:e,content:t,attrs:n};return Object.assign(Object.assign({},o),{push:(...e)=>((e,t,...n)=>{e.content.push(t,...n)})(o,...e),pop:()=>(e=>e.content.pop())(o)})})(t,[],n)),et=e=>(t,n,o)=>{const r=t.createAndFill(n,o,e.marks);if(!r)throw new Error;return(e=>t=>{var n;return null===(n=Qe(e))||void 0===n?void 0:n.push(t)})(e)(r),r},tt=e=>()=>{e.marks=c.none;const t=e.elements.pop();if(!t)throw new Error;return et(e)(t.type,t.attrs,t.content)},nt=e=>(t,n)=>{const o=t.create(n);e.marks=o.addToSet(e.marks)},ot=e=>t=>{e.marks=t.removeFromSet(e.marks)},rt=e=>t=>{const n=Qe(e);if(!n)throw new Error;const o=n.pop(),r=t(e.marks);if(!o)return void n.push(r);const s=((e,t)=>{if(Je(e)&&Je(t)&&c.sameSet(e.marks,t.marks))return e.withText(e.text+t.text)})(o,r);s?n.push(s):n.push(o,r)},st=e=>()=>{let t=null;do{t=tt(e)()}while(Xe(e));return t};function it(e,t,n){return o=>{const r=new Ge((()=>{const e={marks:[],elements:[]};return{build:st(e),openMark:nt(e),closeMark:ot(e),addText:rt(e),openNode:Ze(e),addNode:et(e),closeNode:tt(e)}})(),e,t);return r.run(n,o),r.toDoc()}}function at(e,t,n={}){return e.reduce(((e,n)=>{const[o,r]=t(n);return Object.assign(Object.assign({},e),{[o]:r})}),n)}class dt extends Ve{constructor(){super(...arguments),this.id="parserLoader",this.loadAfter=We.SchemaReady}main(){const e=at([...this.context.nodes.map((e=>Object.assign(Object.assign({},e),{is:"node"}))),...this.context.marks.map((e=>Object.assign(Object.assign({},e),{is:"mark"})))],(e=>[e.id,Object.assign(Object.assign({},e.parser),{is:e.is})])),t=it(this.context.schema,e,this.context.remark);this.updateContext({parser:t})}}const lt=e=>class extends Ve{constructor(){super(...arguments),this.id=e,this.loadAfter=We.LoadPlugin}main(){this.updateContext({prosemirrorPlugins:this.context.prosemirrorPlugins.concat(...this.options.plugins(this.context))})}},ct=(e,t)=>new(lt(e))({plugins:t}),mt=e=>class extends Ve{constructor(){super(...arguments),this.id=e,this.loadAfter=We.Idle}main(){const e=this.options.plugins(this.context).reduce(((e,t)=>e.use(t)),this.context.remark);this.updateContext({remark:e})}},ht=(e,t)=>new(mt(e))({plugins:t});class pt extends Ve{constructor(){super(...arguments),this.id="schemaLoader",this.loadAfter=We.LoadSchema}main(){const e=at(this.context.nodes,(e=>[e.id,e.schema])),t=at(this.context.marks,(e=>[e.id,e.schema])),n=new m({nodes:Object.assign({},e),marks:t});this.updateContext({schema:n})}}const ut=(e,t,n,o={})=>{const r={type:e,children:t,props:o,value:n};return Object.assign(Object.assign({},r),{push:(...e)=>((e,t,...n)=>{var o;null===(o=e.children)||void 0===o||o.push(t,...n)})(r,...e),pop:()=>(e=>{var t;return null===(t=e.children)||void 0===t?void 0:t.pop()})(r)})},ft=e=>e.elements.length,gt=e=>e.elements[ft(e)-1],kt=e=>(t,n,o)=>e.elements.push(ut(t,[],n,o)),wt=e=>(t,n,o,r)=>{const s=(e=>{const t=Object.assign(Object.assign({},e.props),{type:e.type});return e.children&&(t.children=e.children),e.value&&(t.value=e.value),t})(ut(t,n,o,r));return(e=>t=>{var n;return null===(n=gt(e))||void 0===n?void 0:n.push(t)})(e)(s),s},yt=e=>()=>{const t=e.elements.pop();if(!t)throw new Error;return wt(e)(t.type,t.children,t.value,t.props)},vt=e=>(t,n,o,r)=>{t.isInSet(e.marks)||(e.marks=t.addToSet(e.marks),kt(e)(n,o,r))},bt=e=>t=>(e.marks=t.type.removeFromSet(e.marks),yt(e)()),xt=e=>()=>{let t=null;do{t=yt(e)()}while(ft(e));return t};var Mt,Et,Nt,_t;class St{constructor(e,t,n){this.stack=e,this.schema=t,this.specMap=n,Mt.add(this),this.next=e=>{return t=e,Object.prototype.hasOwnProperty.call(t,"size")?(e.forEach((e=>{l(this,Mt,"m",_t).call(this,e)})),this):(l(this,Mt,"m",_t).call(this,e),this);var t},this.addNode=(...e)=>(this.stack.addNode(...e),this),this.openNode=(...e)=>(this.stack.openNode(...e),this),this.closeNode=(...e)=>(this.stack.closeNode(...e),this),this.toString=e=>e.stringify(this.stack.build()),this.withMark=(...e)=>(this.stack.openMark(...e),this)}run(e){return this.next(e),this}}function Ct(e,t,n){return o=>{const r=new St((()=>{const e={marks:[],elements:[]};return{build:xt(e),openMark:vt(e),closeMark:bt(e),openNode:kt(e),addNode:wt(e),closeNode:yt(e),top:()=>gt(e)}})(),e,t);return r.run(o),r.toString(n)}}Mt=new WeakSet,Et=function(e){const t=Object.entries(this.specMap).map((([e,t])=>Object.assign({key:e},t))).find((t=>t.match(e)));if(!t)throw new Error;return t},Nt=function(e){const{runner:t}=l(this,Mt,"m",Et).call(this,e);t(this,e)},_t=function(e){const{marks:t}=e;t.forEach((e=>l(this,Mt,"m",Nt).call(this,e))),l(this,Mt,"m",Nt).call(this,e),t.forEach((e=>this.stack.closeMark(e)))};class Tt extends Ve{constructor(){super(...arguments),this.id="serializerLoader",this.loadAfter=We.SchemaReady}main(){const e=at([...this.context.nodes.map((e=>Object.assign(Object.assign({},e),{is:"node"}))),...this.context.marks.map((e=>Object.assign(Object.assign({},e),{is:"mark"})))],(e=>[e.id,Object.assign(Object.assign({},e.serializer),{is:e.is})])),t=Ct(this.context.schema,e,this.context.remark);this.updateContext({serializer:t})}}var At,Lt,Pt,Ot,It;class Rt extends Ve{constructor(){super(...arguments),At.add(this),this.id="viewLoader",this.loadAfter=We.Complete}main(){const{nodeViews:e,serializer:t}=this.context,{listener:n,editable:o}=this.options,r=l(this,At,"m",Pt).call(this),s=l(this,At,"m",Ot).call(this),i=new h(s,{state:r,nodeViews:e,editable:o,dispatchTransaction:e=>{var o,r;const s=i.state.apply(e);i.updateState(s),null===(o=n.markdown)||void 0===o||o.forEach((e=>{e((()=>t(i.state.doc)))})),null===(r=n.doc)||void 0===r||r.forEach((e=>{e(i.state.doc)}))}}),a=new Proxy(i,{get:(e,t)=>"destroy"===t?()=>{e.destroy(),s.remove()}:t in e?e[t]:void 0});l(this,At,"m",It).call(this,i.dom),this.updateContext({editorView:a})}}var jt,Dt,Wt,$t,Ht,zt,Bt;At=new WeakSet,Lt=function(){const{parser:e,schema:t}=this.context,{defaultValue:n}=this.options;if("string"==typeof n)return e(n);if("html"===n.type)return g.fromSchema(t).parse(n.dom);if("json"===n.type)return k.fromJSON(t,n.value);throw new Error},Pt=function(){const{schema:e,inputRules:t,keymap:n,prosemirrorPlugins:o}=this.context,r=l(this,At,"m",Lt).call(this);return p.create({schema:e,doc:r,plugins:[...n,...o,d(u),f({rules:t})]})},Ot=function(){const{root:e}=this.options,t=document.createElement("div");return t.className="milkdown",e.appendChild(t),t},It=function(e){e.classList.add("editor"),e.setAttribute("role","textbox")};class Vt{constructor(e){jt.add(this),Dt.set(this,[]),Wt.set(this,{loadState:We.Idle,remark:w(),nodes:[],marks:[],editor:this,prosemirrorPlugins:[]}),$t.set(this,(e=>{Object.assign(l(this,Wt,"f"),e)}));const t=Object.assign({root:document.body,defaultValue:"",listener:{}},e);this.use([new pt,new dt,new Tt,new Ye,new qe,new Ue,new Rt(t)])}use(e){return Array.isArray(e)?(e.forEach((e=>{l(this,jt,"m",Bt).call(this,e)})),this):(l(this,jt,"m",Bt).call(this,e),this)}create(){l(this,jt,"m",Ht).call(this),[We.Idle,We.LoadSchema,We.SchemaReady,We.LoadPlugin,We.Complete].forEach((e=>{l(this,Wt,"f").loadState=e,l(this,jt,"m",zt).call(this,e)}))}get view(){return l(this,Wt,"f").editorView}}Dt=new WeakMap,Wt=new WeakMap,$t=new WeakMap,jt=new WeakSet,Ht=function(){l(this,Dt,"f").forEach((e=>e.injectContext(l(this,Wt,"f"),l(this,$t,"f"))))},zt=function(e){l(this,Dt,"f").filter((t=>t.loadAfter===e)).forEach((e=>{e.main()}))},Bt=function(e){const t=l(this,Dt,"f").findIndex((t=>t.id===e.id));t>=0&&(console.warn(`Atom: ${e.id} is conflicted with previous atom, the previous one will be override.`),l(this,Dt,"f").splice(t,1)),l(this,Dt,"f").push(e)};const Kt=e=>t=>{const{$from:n}=t;for(let o=n.depth;o>0;o--){const t=n.node(o);if(e(t))return{pos:o>0?n.before(o):0,start:n.start(o),depth:o,node:t}}},Ft=e=>(t,n)=>{let o;const{from:r,to:s}=t;return n.nodesBetween(r,s,((t,n)=>{if(o)return!1;e(t)&&(o={node:t,pos:n})})),o},qt=e=>Object.assign(Object.create(e),e).setTime(Date.now()),Yt=e=>Object.entries(e).filter((e=>!!e)),Ut=(e,t,n)=>{var o;return null!==(o=null==n?void 0:n[e])&&void 0!==o?o:t},Gt=(e,t)=>e.flatMap((e=>([t,{defaultKey:n,command:o}])=>[Ut(t,n,e)].flat().map((e=>[e,o])))(t)),Jt=(e,t)=>e&&e?y(e,Yt,v(Gt)(t),Object.fromEntries):()=>({});class Xt extends Ke{constructor(){super(...arguments),this.getClassName=(e,t=this.id)=>{var n,o,r;return null!==(r=null===(o=(n=this.options).className)||void 0===o?void 0:o.call(n,e))&&void 0!==r?r:t},this.keymap=(e,t)=>Jt(this.commands,this.options.keymap)(e,t),this.view=this.options.view}}class Qt extends Fe{constructor(){super(...arguments),this.getClassName=(e,t=this.id)=>{var n,o,r;return null!==(r=null===(o=(n=this.options).className)||void 0===o?void 0:o.call(n,e))&&void 0!==r?r:t},this.keymap=(e,t)=>Jt(this.commands,this.options.keymap)(e,t),this.view=this.options.view}}class Zt extends Array{configure(e,t){const n=this.findIndex((t=>t.constructor===e));return n<0||this.splice(n,1,new e(t)),this}static create(e){return new Zt(...e)}}function en(e,t){return new b(e,((e,n,o,r)=>{const{tr:s}=e,i=n.length;let a=o,d=r;if(n[i-1]){const l=n[0],c=n[i-1],m=n[i-2],h=o+l.indexOf(m),p=h+m.length-1,u=h+m.lastIndexOf(c),f=u+c.length;if(function(e,t,n){let o=[];return n.doc.nodesBetween(e,t,((e,t)=>{o=[...o,...e.marks.map((n=>({start:t,end:t+e.nodeSize,mark:n})))]})),o}(o,r,e).filter((e=>e.mark.type.excludes(t))).filter((e=>e.end>h)).length)return null;f<p&&s.delete(f,p),u>h&&s.delete(h,u),a=h,d=a+c.length}return s.addMark(a,d,t.create()),s.removeStoredMark(t),s}))}const tn=i.createContext({editor:void 0,node:void 0,view:void 0,getPos:void 0,decorations:void 0}),nn=({editor:e,node:t,view:n,getPos:o,decorations:r,children:s})=>i.createElement(tn.Provider,{value:{editor:e,node:t,view:n,getPos:o,decorations:r}},s),on=({dom:e})=>{const t=i.useRef(null);return i.useEffect((()=>{const{current:n}=t;n&&e&&n.appendChild(e)}),[e]),i.createElement("div",{ref:t})};class rn{constructor(e,t,n,o,r,s,i,a){this.component=e,this.addPortal=t,this.removePortalByKey=n,this.editor=o,this.node=r,this.view=s,this.getPos=i,this.decorations=a;const d=document.createElement("div"),l=r.isLeaf?null:document.createElement(r.isInline?"span":"div");l&&d.appendChild(l),this.dom=d,this.contentDOM=l,this.key=[1e7,-1e3,-4e3,-8e3,-1e11].map((e=>e.toString())).join("").replace(/[018]/g,(e=>(Number(e)^crypto.getRandomValues(new Uint8Array(1))[0]&15>>Number(e)/4).toString(16))),this.renderPortal()}renderPortal(){if(!this.dom)return;const e=this.component,t=x.exports.createPortal(i.createElement(nn,{editor:this.editor,node:this.node,view:this.view,getPos:this.getPos,decorations:this.decorations},i.createElement(e,null,i.createElement(on,{dom:this.contentDOM}))),this.dom,this.key);this.addPortal(t)}destroy(){this.dom=void 0,this.contentDOM=void 0,this.removePortalByKey(this.key)}ignoreMutation(e){return!this.contentDOM||!this.contentDOM.contains(e.target)}}const sn=i.createContext((()=>()=>{throw new Error})),an=e=>e.map((e=>e.key)).join(","),dn=i.memo((({portals:e})=>i.createElement(i.Fragment,null,e)),((e,t)=>an(e.portals)===an(t.portals))),ln=({editor:e})=>{const t=(e=>{const t=i.useContext(sn),n=i.useRef(null);return i.useEffect((()=>{if(!n.current)return;const o=e(n.current,t);return o.create(),()=>{o.view.destroy()}}),[e,t]),n})(e);return i.createElement("div",{ref:t})},cn=({editor:e})=>{const[t,n]=i.useState([]),o=i.useCallback((e=>{n((t=>[...t,e]))}),[]),r=i.useCallback((e=>{n((t=>{const n=t.findIndex((t=>t.key===e));return[...t.slice(0,n),...t.slice(n+1)]}))}),[]),s=i.useCallback((e=>((e,t)=>n=>(o,r,s,i,a,d)=>new rn(n,e,t,o,s,i,a,d))(o,r)(e)),[o,r]);return i.createElement(sn.Provider,{value:s},i.createElement(dn,{portals:t}),i.createElement(ln,{editor:e}))},mn=e=>Kt((e=>"table"===e.type.spec.tableRole))(e),hn=(e,t=3,n=3)=>{const{cell:o,header_cell:r,row:s,table:i}=N(e),a=Array(n).fill(0).map((()=>o.createAndFill(null))),d=Array(n).fill(0).map((()=>r.createAndFill(null))),l=Array(t).fill(0).map(((e,t)=>s.create(null,0===t?d:a)));return i.create(null,l)},pn=e=>t=>n=>{const o=mn(n.selection),r="row"===e;if(o){const e=_.get(o.node);if(t>=0&&t<(r?e.height:e.width)){const s=e.positionAt(r?t:e.height-1,r?e.width-1:t,o.node),i=n.doc.resolve(o.start+s),a=r?S.rowSelection:S.colSelection,d=e.positionAt(r?t:0,r?0:t,o.node),l=n.doc.resolve(o.start+d);return qt(n.setSelection(a(i,l)))}}return n},un=e=>{const t=(e=>{const t=mn(e);if(!t)return;const n=_.get(t.node);return n.cellsInRect({left:0,right:n.width,top:0,bottom:n.height}).map((e=>{const n=t.node.nodeAt(e),o=e+t.start;return{pos:o,start:o+1,node:n}}))})(e.selection);if(t){const n=e.doc.resolve(t[0].pos),o=e.doc.resolve(t[t.length-1].pos);return qt(e.setSelection(new S(o,n)))}return e};function fn(e,{map:t,tableStart:n,table:o},r){const s=Array(r).fill(0).reduce(((e,t,n)=>e+o.child(n).nodeSize),n),{cell:i,row:a}=N(o.type.schema),d=Array(t.width).fill(0).map(((e,n)=>{const r=o.nodeAt(t.map[n]);return i.createAndFill({alignment:null==r?void 0:r.attrs.alignment})}));return e.insert(s,a.create(null,d)),e}const gn=C({tableGroup:"block",cellContent:"paragraph",cellAttributes:{alignment:{default:"left",getFromDOM:e=>e.style.textAlign||"left",setDOMAttr:(e,t)=>{t.style=`text-align: ${e||"left"}`}}}}),kn={NextCell:"NextCell",PrevCell:"PrevCell",ExitTable:"ExitTable"};const wn=Zt.create([new class extends Qt{constructor(){super(...arguments),this.id="table",this.schema=gn.table,this.parser={match:e=>"table"===e.type,runner:(e,t,n)=>{const o=t.align,r=t.children.map(((e,t)=>Object.assign(Object.assign({},e),{align:o,isHeader:0===t})));e.openNode(n),e.next(r),e.closeNode()}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{var n;const o=null===(n=t.content.firstChild)||void 0===n?void 0:n.content;if(!o)return;const r=[];o.forEach((e=>{r.push(e.attrs.alignment)})),e.openNode("table",void 0,{align:r}),e.next(t.content),e.closeNode()}},this.inputRules=(e,t)=>[new b(/^\|\|\s$/,((n,o,r,s)=>{const i=n.doc.resolve(r);if(!i.node(-1).canReplaceWith(i.index(-1),i.indexAfter(-1),e))return null;const a=hn(t),d=n.tr.replaceRangeWith(r,s,a).scrollIntoView();return d.setSelection(T.create(d.doc,r+3))}))],this.commands=(e,t)=>{return{[kn.NextCell]:{defaultKey:"Mod-]",command:A(1)},[kn.PrevCell]:{defaultKey:"Mod-[",command:A(-1)},[kn.ExitTable]:{defaultKey:"Mod-Enter",command:(n=t.nodes.paragraph,(e,t)=>{if(!M(e))return!1;const{$head:o}=e.selection,r=o.after(),s=e.tr.replaceWith(r,r,n.createAndFill());return s.setSelection(E.near(s.doc.resolve(r),1)),null==t||t(s.scrollIntoView()),!0})}};var n}}},new class extends Fe{constructor(){super(...arguments),this.id="table_row",this.schema=gn.table_row,this.parser={match:e=>"tableRow"===e.type,runner:(e,t,n)=>{const o=t.align,r=t.children.map(((e,n)=>Object.assign(Object.assign({},e),{align:o[n],isHeader:t.isHeader})));e.openNode(n),e.next(r),e.closeNode()}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{e.openNode("tableRow"),e.next(t.content),e.closeNode()}}}},new class extends Fe{constructor(){super(...arguments),this.id="table_cell",this.schema=gn.table_cell,this.parser={match:e=>"tableCell"===e.type&&!e.isHeader,runner:(e,t,n)=>{const o=t.align;e.openNode(n,{alignment:o}).openNode(e.schema.nodes.paragraph).next(t.children).closeNode().closeNode()}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{e.openNode("tableCell").next(t.content).closeNode()}}}},new class extends Fe{constructor(){super(...arguments),this.id="table_header",this.schema=gn.table_header,this.parser={match:e=>"tableCell"===e.type&&!!e.isHeader,runner:(e,t,n)=>{const o=t.align;e.openNode(n,{alignment:o}),e.openNode(e.schema.nodes.paragraph),e.next(t.children),e.closeNode(),e.closeNode()}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{e.openNode("tableCell"),e.next(t.content),e.closeNode()}}}}]);var yn,vn,bn,xn,Mn,En,Nn,_n;function Sn(e){const t=document.createElement("span");return t.textContent=e,t.className="icon material-icons material-icons-outlined",t}(En=Mn||(Mn={})).Left="Left",En.Top="Top",En.Point="Point",(_n=Nn||(Nn={}))[_n.AddColLeft=0]="AddColLeft",_n[_n.AddColRight=1]="AddColRight",_n[_n.AddRowTop=2]="AddRowTop",_n[_n.AddRowBottom=3]="AddRowBottom",_n[_n.AlignLeft=4]="AlignLeft",_n[_n.AlignCenter=5]="AlignCenter",_n[_n.AlignRight=6]="AlignRight",_n[_n.Delete=7]="Delete";const Cn=e=>e.state.selection;class Tn{constructor(){yn.set(this,[]),vn.set(this,void 0),bn.set(this,void 0),xn.set(this,{[Nn.AddColLeft]:{$:Sn("chevron_left"),command:()=>P,disable:e=>!Cn(e).isColSelection()},[Nn.AddColRight]:{$:Sn("chevron_right"),command:()=>O,disable:e=>!Cn(e).isColSelection()},[Nn.AddRowTop]:{$:Sn("expand_less"),command:()=>(e,t)=>{if(!M(e))return!1;if(t){const n=I(e);t(fn(e.tr,n,n.top))}return!0},disable:e=>!Cn(e).isRowSelection()||"table_header"===Cn(e).$head.parent.type.name},[Nn.AddRowBottom]:{$:Sn("expand_more"),command:()=>(e,t)=>{if(!M(e))return!1;if(t){const n=I(e);t(fn(e.tr,n,n.bottom))}return!0},disable:e=>!Cn(e).isRowSelection()},[Nn.AlignLeft]:{$:Sn("format_align_left"),command:()=>R("alignment","left"),disable:e=>!Cn(e).isColSelection()},[Nn.AlignCenter]:{$:Sn("format_align_center"),command:()=>R("alignment","center"),disable:e=>!Cn(e).isColSelection()},[Nn.AlignRight]:{$:Sn("format_align_right"),command:()=>R("alignment","right"),disable:e=>!Cn(e).isColSelection()},[Nn.Delete]:{$:Sn("delete"),command:(e,t)=>{const n=Cn(t),o=n.isColSelection(),r=n.isRowSelection();return o&&r?j:o?D:W},disable:e=>{const t=Cn(e);return!!t.isRowSelection()&&(!t.isColSelection()&&(e=>{const t=_.get(e.$anchorCell.node(-1)),n=e.$anchorCell.start(-1),o=t.cellsInRect({left:0,right:t.width,top:0,bottom:1}),r=t.cellsInRect(t.rectBetween(e.$anchorCell.pos-n,e.$headCell.pos-n));for(let s=0,i=o.length;s<i;s++)if(-1===r.indexOf(o[s]))return!1;return!0})(t))}}}),this.key=new $("TABLE_OP"),this.decorations=e=>{const t=(n=0,e=>{const t=mn(e);if(!t)return;const o=_.get(t.node);return n<0||n>=o.width?void 0:o.cellsInRect({left:n,right:n+1,top:0,bottom:o.height}).map((e=>{const n=t.node.nodeAt(e);if(!n)throw new Error;const o=e+t.start;return{pos:o,start:o+1,node:n}}))})(e.selection);var n;if(!t)return null;const o=(r=0,e=>{const t=mn(e);if(!t)return;const n=_.get(t.node);return r<0||r>=n.height?void 0:n.cellsInRect({left:0,right:n.width,top:r,bottom:r+1}).map((e=>{const n=t.node.nodeAt(e);if(!n)throw new Error;const o=e+t.start;return{pos:o,start:o+1,node:n}}))})(e.selection);var r;if(!o)return null;const[s]=t;return this.createWidget(s,Mn.Point),t.forEach(((e,t)=>{this.createWidget(e,Mn.Left,t)})),o.forEach(((e,t)=>{this.createWidget(e,Mn.Top,t)})),H.create(e.doc,l(this,yn,"f"))},this.update=(e,t)=>{const n=e.state;if((null==t?void 0:t.doc.eq(n.doc))&&t.selection.eq(n.selection))return;n.selection instanceof S&&e.editable?(this.calculateItem(e),Object.values(l(this,xn,"f")).every((({$:e})=>e.classList.contains("hide")))?this.hide():(l(this,vn,"f").classList.remove("hide"),this.calculatePosition(e))):this.hide()},this.props={decorations:this.decorations},this.view=e=>{var t;return z(this,bn,e,"f"),Object.values(l(this,xn,"f")).forEach((({$:e})=>l(this,vn,"f").appendChild(e))),null===(t=e.dom.parentNode)||void 0===t||t.appendChild(l(this,vn,"f")),this.update(e),l(this,vn,"f").addEventListener("mousedown",this.listener),{update:this.update,destroy:()=>{l(this,vn,"f").removeEventListener("mousedown",this.listener),l(this,vn,"f").remove()}}},this.listener=e=>{const t=l(this,bn,"f");t&&(e.stopPropagation(),e.preventDefault(),Object.values(l(this,xn,"f")).forEach((({$:n,command:o})=>{n.contains(e.target)&&o(e,t)(t.state,t.dispatch)})))},z(this,vn,document.createElement("div"),"f"),l(this,vn,"f").classList.add("table-tooltip")}createWidget(e,t,n=0){const o=B.widget(e.pos+1,(()=>{const e=document.createElement("div");return e.classList.add(this.calculateClassName(t)),e.addEventListener("mousedown",(e=>{if(l(this,bn,"f"))switch(e.preventDefault(),t){case Mn.Point:return void l(this,bn,"f").dispatch(un(l(this,bn,"f").state.tr));case Mn.Left:return void l(this,bn,"f").dispatch(pn("row")(n)(l(this,bn,"f").state.tr));case Mn.Top:return void l(this,bn,"f").dispatch(pn("col")(n)(l(this,bn,"f").state.tr))}})),e}));l(this,yn,"f").push(o)}calculateClassName(e){switch(e){case Mn.Left:return"milkdown-cell-left";case Mn.Top:return"milkdown-cell-top";case Mn.Point:return"milkdown-cell-point";default:throw new Error}}calculatePosition(e){const t=e.state.selection,n=t.isColSelection(),o=t.isRowSelection(),{from:r}=t,s=l(this,vn,"f").getBoundingClientRect(),i=e.domAtPos(r).node.getBoundingClientRect();let a=o?i.left-s.width/2-8:i.left+(i.width-s.width)/2,d=i.top-s.height-(n?18:4);a<0&&(a=0),d<s.height&&(d=i.top),l(this,vn,"f").style.left=a+"px",l(this,vn,"f").style.top=d+"px"}calculateItem(e){Object.values(l(this,xn,"f")).forEach((t=>{var n;(null===(n=t.disable)||void 0===n?void 0:n.call(t,e))?t.$.classList.add("hide"):t.$.classList.remove("hide")}))}hide(){l(this,vn,"f").classList.add("hide")}}yn=new WeakMap,vn=new WeakMap,bn=new WeakMap,xn=new WeakMap;const An=[ht("remark-table-markdown",(()=>[V])),ct("prosemirror-table-edit",(()=>[K({}),new L(new Tn),F()]))],Ln={HardBreak:"HardBreak",Blockquote:"Blockquote",BulletList:"BulletList",OrderedList:"OrderedList",CodeFence:"CodeFence",H1:"H1",H2:"H2",H3:"H3",H4:"H4",H5:"H5",H6:"H6",Text:"Text",CodeInline:"CodeInline",Em:"Em",Bold:"Bold",NextListItem:"NextListItem",SinkListItem:"SinkListItem",LiftListItem:"LiftListItem"};function Pn(e,t){return new b(e,((e,n,o,r)=>{const{tr:s}=e,i=n.length;let a=o,d=r;if(n[i-1]){const l=n[0],c=n[i-1],m=n[i-2],h=o+l.indexOf(m),p=h+m.length-1,u=h+m.lastIndexOf(c),f=u+c.length;if(function(e,t,n){let o=[];return n.doc.nodesBetween(e,t,((e,t)=>{o=[...o,...e.marks.map((n=>({start:t,end:t+e.nodeSize,mark:n})))]})),o}(o,r,e).filter((e=>e.mark.type.excludes(t))).filter((e=>e.end>h)).length)return null;f<p&&s.delete(f,p),u>h&&s.delete(h,u),a=h,d=a+c.length}return s.addMark(a,d,t.create()),s.removeStoredMark(t),s}))}const On=[new class extends Xt{constructor(){super(...arguments),this.id="link",this.schema={attrs:{href:{},title:{default:null}},inclusive:!1,parseDOM:[{tag:"a[href]",getAttrs:e=>{if(!(e instanceof HTMLElement))throw new Error;return{href:e.getAttribute("href"),title:e.getAttribute("title")}}}],toDOM:e=>["a",Object.assign(Object.assign({},e.attrs),{class:this.getClassName(e.attrs)})]},this.parser={match:e=>"link"===e.type,runner:(e,t,n)=>{const o=t.url,r=t.title;e.openMark(n,{href:o,title:r}),e.next(t.children),e.closeMark(n)}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{e.withMark(t,"link",void 0,{title:t.attrs.title,url:t.attrs.href})}},this.inputRules=(e,t)=>[new b(/\[(?<text>.+?)]\((?<href>.*?)(?=“|\))"?(?<title>[^"]+)?"?\)/,((n,o,r,s)=>{const[i,a="",d,l]=o,{tr:c}=n;return i&&c.replaceWith(r,s,t.text(a)).addMark(r,a.length+r,e.create({title:l,href:d})),c}))]}},new class extends Xt{constructor(){super(...arguments),this.id="strong",this.schema={parseDOM:[{tag:"b"},{tag:"strong"},{style:"font-style",getAttrs:e=>"bold"===e}],toDOM:e=>["strong",{class:this.getClassName(e.attrs)}]},this.parser={match:e=>"strong"===e.type,runner:(e,t,n)=>{e.openMark(n),e.next(t.children),e.closeMark(n)}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{e.withMark(t,"strong")}},this.inputRules=e=>[Pn(/(?:__)([^_]+)(?:__)$/,e),Pn(/(?:\*\*)([^*]+)(?:\*\*)$/,e)],this.commands=e=>({[Ln.Bold]:{defaultKey:"Mod-b",command:q(e)}})}},new class extends Xt{constructor(){super(...arguments),this.id="code_inline",this.schema={excludes:"_",parseDOM:[{tag:"code"}],toDOM:e=>["code",{class:this.getClassName(e.attrs,"code-inline")}]},this.parser={match:e=>"inlineCode"===e.type,runner:(e,t,n)=>{e.openMark(n),e.addText(t.value),e.closeMark(n)}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{e.withMark(t,"emphasis")}},this.inputRules=e=>[Pn(/(?:^|[^`])(`([^`]+)`)$/,e)],this.commands=e=>({[Ln.CodeInline]:{defaultKey:"Mod-e",command:q(e)}})}},new class extends Xt{constructor(){super(...arguments),this.id="em",this.schema={parseDOM:[{tag:"i"},{tag:"em"},{style:"font-style",getAttrs:e=>"italic"===e}],toDOM:e=>["em",{class:this.getClassName(e.attrs)}]},this.parser={match:e=>"emphasis"===e.type,runner:(e,t,n)=>{e.openMark(n),e.next(t.children),e.closeMark(n)}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{e.withMark(t,"emphasis")}},this.inputRules=e=>[Pn(/(?:^|[^_])(_([^_]+)_)$/,e),Pn(/(?:^|[^*])(\*([^*]+)\*)$/,e)],this.commands=e=>({[Ln.Em]:{defaultKey:"Mod-i",command:q(e)}})}}];const In=Array(5).fill(0).map(((e,t)=>t+1));var Rn,jn,Dn;const Wn=["","javascript","typescript","bash","sql","json","html","css","c","cpp","java","ruby","python","go","rust","markdown"];Rn=new WeakSet,jn=function(e,t,n){const{editorView:o}=this.context,r=o.posAtCoords({top:e,left:t});if(!r)return;const s=o.state.tr.setNodeMarkup(r.inside,void 0,{language:n});o.dispatch(s)},Dn=function(e){const t=document.createElement("select");return t.className="code-fence_select",t.addEventListener("mousedown",(e=>{const{editorView:t}=this.context;t.editable||e.preventDefault()})),t.addEventListener("change",(e=>{if(this.context.loadState!==We.Complete)throw new Error("Should not trigger event before milkdown ready.");const t=e.target;if(!t)return;const{top:n,left:o}=t.getBoundingClientRect();l(this,Rn,"m",jn).call(this,n,o,t.value)})),Wn.concat(this.options.languageList||[]).forEach((n=>{const o=document.createElement("option");o.className="code-fence_select-option",o.value=n,o.innerText=n||"--",o.selected=e===n,t.appendChild(o)})),t};const $n=[new class extends Qt{constructor(){super(...arguments),this.id="doc",this.schema={content:"block+"},this.parser={match:({type:e})=>"root"===e,runner:(e,t,n)=>{e.injectRoot(t,n)}},this.serializer={match:e=>"doc"===e.type.name,runner:(e,t)=>{e.openNode("root"),e.next(t.content)}}}},new class extends Qt{constructor(){super(...arguments),this.id="paragraph",this.schema={content:"inline*",group:"block",parseDOM:[{tag:"p"}],toDOM:e=>["p",{class:this.getClassName(e.attrs)},0]},this.parser={match:e=>e.type===this.id,runner:(e,t,n)=>{e.openNode(n),t.children?e.next(t.children):e.addText(t.value),e.closeNode()}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{e.openNode("paragraph"),e.next(t.content),e.closeNode()}},this.commands=e=>({[Ln.Text]:{defaultKey:"Mod-Alt-0",command:Y(e)}})}},new class extends Qt{constructor(){super(...arguments),this.id="hardbreak",this.schema={inline:!0,group:"inline",selectable:!1,parseDOM:[{tag:"br"}],toDOM:e=>["br",{class:this.getClassName(e.attrs)}]},this.parser={match:({type:e})=>"break"===e,runner:(e,t,n)=>{e.addNode(n)}},this.serializer={match:e=>e.type.name===this.id,runner:e=>{e.addNode("break")}},this.commands=e=>({[Ln.HardBreak]:{defaultKey:"Shift-Enter",command:(t,n)=>(null==n||n(t.tr.replaceSelectionWith(e.create()).scrollIntoView()),!0)}})}},new class extends Qt{constructor(){super(...arguments),this.id="blockquote",this.schema={content:"block+",group:"block",defining:!0,parseDOM:[{tag:"blockquote"}],toDOM:e=>["blockquote",{class:this.getClassName(e.attrs)},0]},this.parser={match:({type:e})=>e===this.id,runner:(e,t,n)=>{e.openNode(n).next(t.children).closeNode()}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{e.openNode("blockquote").next(t.content).closeNode()}},this.inputRules=e=>[U(/^\s*>\s$/,e)],this.commands=e=>({[Ln.Blockquote]:{defaultKey:"Mod-Shift-b",command:G(e)}})}},new class extends Qt{constructor(){super(...arguments),Rn.add(this),this.id="fence",this.schema={content:"text*",group:"block",marks:"",defining:!0,code:!0,attrs:{language:{default:""}},parseDOM:[{tag:"pre",preserveWhitespace:"full",getAttrs:e=>{if(!(e instanceof HTMLElement))throw new Error;return{language:e.dataset.language}}}],toDOM:e=>{const t=l(this,Rn,"m",Dn).call(this,e.attrs.language);return["div",{"data-language":"",class:this.getClassName(e.attrs,"code-fence")},["div",{contentEditable:"false"},t],["pre",["code",{spellCheck:"false"},0]]]}},this.parser={match:({type:e})=>"code"===e,runner:(e,t,n)=>{const o=t.lang,r=t.value;e.openNode(n,{language:o}),e.addText(r),e.closeNode()}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{var n;e.addNode("code",void 0,(null===(n=t.content.firstChild)||void 0===n?void 0:n.text)||"",{lang:t.attrs.language})}},this.inputRules=e=>[J(/^```$/,e)],this.commands=e=>({[Ln.CodeFence]:{defaultKey:"Mod-Alt-c",command:Y(e)}})}},new class extends Qt{constructor(){super(...arguments),this.id="bullet_list",this.schema={content:"listItem+",group:"block",parseDOM:[{tag:"ul"}],toDOM:e=>["ul",{class:this.getClassName(e.attrs,"bullet-list")},0]},this.parser={match:({type:e,ordered:t})=>"list"===e&&!t,runner:(e,t,n)=>{e.openNode(n).next(t.children).closeNode()}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{e.openNode("list",void 0,{ordered:!1}).next(t.content).closeNode()}},this.inputRules=e=>[U(/^\s*([-+*])\s$/,e)],this.commands=e=>({[Ln.BulletList]:{defaultKey:"Mod-Shift-8",command:G(e)}})}},new class extends Qt{constructor(){super(...arguments),this.id="ordered_list",this.schema={content:"listItem+",group:"block",attrs:{order:{default:1}},parseDOM:[{tag:"ol",getAttrs:e=>{if(!(e instanceof HTMLElement))throw new Error;return{order:e.hasAttribute("start")?Number(e.getAttribute("start")):1}}}],toDOM:e=>["ol",Object.assign(Object.assign({},1===e.attrs.order?{}:e.attrs.order),{class:this.getClassName(e.attrs,"ordered-list")}),0]},this.parser={match:({type:e,ordered:t})=>"list"===e&&!!t,runner:(e,t,n)=>{e.openNode(n),e.next(t.children),e.closeNode()}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{e.openNode("list",void 0,{ordered:!0,start:1}),e.next(t.content),e.closeNode()}},this.inputRules=e=>[U(/^(\d+)\.\s$/,e,(e=>({order:Number(e[1])})),((e,t)=>t.childCount+t.attrs.order===Number(e[1])))],this.commands=e=>({[Ln.OrderedList]:{defaultKey:"Mod-Shift-7",command:G(e)}})}},new class extends Qt{constructor(){super(...arguments),this.id="list_item",this.schema={group:"listItem",content:"paragraph block*",defining:!0,parseDOM:[{tag:"li"}],toDOM:e=>["li",{class:this.getClassName(e.attrs,"list-item")},0]},this.parser={match:({type:e,checked:t})=>"listItem"===e&&null===t,runner:(e,t,n)=>{e.openNode(n),e.next(t.children),e.closeNode()}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{e.openNode("listItem"),e.next(t.content),e.closeNode()}},this.commands=e=>({[Ln.NextListItem]:{defaultKey:"Enter",command:X(e)},[Ln.SinkListItem]:{defaultKey:"Mod-]",command:Q(e)},[Ln.LiftListItem]:{defaultKey:"Mod-[",command:Z(e)}})}},new class extends Qt{constructor(){super(...arguments),this.id="heading",this.schema={content:"text*",group:"block",attrs:{level:{default:1}},parseDOM:In.map((e=>({tag:`h${e}`,attrs:{level:e}}))),toDOM:e=>[`h${e.attrs.level}`,{class:this.getClassName(e.attrs,`heading h${e.attrs.level}`)},0]},this.parser={match:({type:e})=>e===this.id,runner:(e,t,n)=>{const o=t.depth;e.openNode(n,{level:o}),e.next(t.children),e.closeNode()}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{e.openNode("heading",void 0,{depth:t.attrs.level}),e.next(t.content),e.closeNode()}},this.inputRules=e=>In.map((t=>J(new RegExp(`^(#{1,${t}})\\s$`),e,(()=>({level:t}))))),this.commands=e=>({[Ln.H1]:{defaultKey:"Mod-Alt-1",command:Y(e,{level:1})},[Ln.H2]:{defaultKey:"Mod-Alt-2",command:Y(e,{level:2})},[Ln.H3]:{defaultKey:"Mod-Alt-3",command:Y(e,{level:3})},[Ln.H4]:{defaultKey:"Mod-Alt-4",command:Y(e,{level:4})},[Ln.H5]:{defaultKey:"Mod-Alt-5",command:Y(e,{level:5})},[Ln.H6]:{defaultKey:"Mod-Alt-6",command:Y(e,{level:6})}})}},new class extends Qt{constructor(){super(...arguments),this.id="hr",this.schema={group:"block",parseDOM:[{tag:"hr"}],toDOM:e=>["hr",{class:this.getClassName(e.attrs)}]},this.parser={match:({type:e})=>"thematicBreak"===e,runner:(e,t,n)=>{e.addNode(n)}},this.serializer={match:e=>e.type.name===this.id,runner:e=>{e.addNode("thematicBreak")}},this.inputRules=e=>[new b(/^(?:---|___\s|\*\*\*\s)$/,((t,n,o,r)=>{const{tr:s}=t;return n[0]&&s.replaceWith(o,r,e.create({})),s}))]}},new class extends Qt{constructor(){super(...arguments),this.id="image",this.schema={inline:!0,attrs:{src:{default:""},alt:{default:null},title:{default:null}},group:"inline",draggable:!0,marks:"",parseDOM:[{tag:"img[src]",getAttrs:e=>{if(!(e instanceof HTMLElement))throw new Error;return{src:e.getAttribute("src")||"",alt:e.getAttribute("alt"),title:e.getAttribute("title")}}}],toDOM:e=>{var t;return(null===(t=e.attrs.src)||void 0===t?void 0:t.length)>0?["img",Object.assign(Object.assign({},e.attrs),{class:this.getClassName(e.attrs)})]:["div",Object.assign(Object.assign({},e.attrs),{class:this.getClassName(e.attrs,"image empty")}),["span",{contentEditable:"false",class:"icon"}],["span",{contentEditable:"false",class:"placeholder"}]]}},this.parser={match:({type:e})=>e===this.id,runner:(e,t,n)=>{const o=t.url,r=t.alt,s=t.title;e.openNode(n,{src:o,alt:r,title:s}),e.next(t.children),e.closeNode()}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{e.addNode("image",void 0,void 0,{title:t.attrs.title,url:t.attrs.src,alt:t.attrs.alt})}},this.inputRules=e=>[new b(/!\[(?<alt>.*?)]\((?<filename>.*?)(?=“|\))"?(?<title>[^"]+)?"?\)/,((t,n,o,r)=>{const[s,i,a="",d]=n,{tr:l}=t;return s&&l.replaceWith(o,r,e.create({src:a,alt:i,title:d})),l}))]}},new class extends Qt{constructor(){super(...arguments),this.id="text",this.schema={group:"inline"},this.parser={match:({type:e})=>"text"===e,runner:(e,t)=>{e.addText(t.value)}},this.serializer={match:e=>"text"===e.type.name,runner:(e,t)=>{e.addNode("text",void 0,t.text)}}}}],Hn=Zt.create([...$n,...On]);var zn;zn=new WeakMap;const Bn=Object.assign(Object.assign(Object.assign({},Ln),kn),{StrikeThrough:"StrikeThrough",TaskList:"TaskList"}),Vn=[...Zt.create([...Hn,...wn,new class extends Xt{constructor(){super(...arguments),this.id="strike_through",this.schema={parseDOM:[{tag:"del"},{style:"text-decoration",getAttrs:e=>"line-through"===e}],toDOM:e=>["del",{class:this.getClassName(e.attrs,"strike-through")}]},this.parser={match:e=>"delete"===e.type,runner:(e,t,n)=>{e.openMark(n),e.next(t.children),e.closeMark(n)}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{e.withMark(t,"delete")}},this.inputRules=e=>[en(/(?:~~)([^~]+)(?:~~)$/,e),en(/(?:^|[^~])(~([^~]+)~)$/,e)],this.commands=e=>({[Bn.StrikeThrough]:{defaultKey:"Mod-Alt-x",command:q(e)}})}},new class extends Qt{constructor(){super(...arguments),this.id="task_list_item",this.schema={group:"listItem",content:"paragraph block*",defining:!0,attrs:{checked:{default:!1}},parseDOM:[{tag:'li[data-type="task-list-item"]',getAttrs:e=>{if(!(e instanceof HTMLElement))throw new Error;return{checked:"true"===e.dataset.checked}}}],toDOM:e=>["li",{"data-type":"task-item","data-checked":e.attrs.checked?"true":"false",class:this.getClassName(e.attrs,"task-list-item")},0]},this.parser={match:({type:e,checked:t})=>"listItem"===e&&null!==t,runner:(e,t,n)=>{e.openNode(n,{checked:t.checked}),e.next(t.children),e.closeNode()}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{e.openNode("listItem",void 0,{checked:t.attrs.checked}),e.next(t.content),e.closeNode()}},this.inputRules=e=>[U(/^\s*(\[([ |x])\])\s$/,e,(e=>({checked:"x"===e[e.length-1]})))],this.commands=e=>({[Bn.NextListItem]:{defaultKey:"Enter",command:X(e)},[Bn.SinkListItem]:{defaultKey:"Mod-]",command:Q(e)},[Bn.LiftListItem]:{defaultKey:"Mod-[",command:Z(e)},[Bn.TaskList]:{defaultKey:"Mod-Shift-9",command:G(e)}}),zn.set(this,((e,t,n,o,r)=>{const s=document.createElement("li"),i=document.createElement("label"),a=document.createElement("span"),d=document.createElement("input"),l=document.createElement("div");i.contentEditable="false",d.type="checkbox";const c=e=>{const t=e.target;if(!(t instanceof HTMLInputElement))return;if(!o.editable)return void(d.checked=!d.checked);const{tr:n}=o.state;o.dispatch(n.setNodeMarkup(r(),void 0,{checked:t.checked}))};d.addEventListener("change",c),s.dataset.checked=n.attrs.checked,n.attrs.checked&&d.setAttribute("checked","checked"),i.append(d,a),s.append(i,l);const m={"data-type":"task-item","data-checked":n.attrs.checked?"true":"false",class:this.getClassName(n.attrs,"task-list-item")};return Object.entries(m).forEach((([e,t])=>{s.setAttribute(e,t)})),{dom:s,contentDOM:l,update:e=>e.type.name===this.id&&(s.dataset.checked=e.attrs.checked,e.attrs.checked?d.setAttribute("checked","checked"):d.removeAttribute("checked"),!0),destroy:()=>{d.removeEventListener("change",c)}}})),this.view=this.options.view||ee(this,zn,"f")}}]),...[...An]],Kn=ct("milkdown-plugin-history",(()=>[te(),d({"Mod-z":ne,"Mod-y":oe,"Shift-Mod-z":oe})])),Fn=(qn=e=>e.isBlock,(e,t)=>((e,t=!0)=>{const n=[];return e.descendants(((e,o)=>{if(n.push({node:e,pos:o}),!t)return!1})),n})(e,t).filter((e=>qn(e.node))));var qn;const Yn={};const Un="MILKDOWN_PLUGIN_PRISM";function Gn(e){let t=!1;return new L({key:new $(Un),state:{init:(e,{doc:t})=>H.create(t,[]),apply:(n,o,r,s)=>{const i=s.selection.$head.parent.type.name===e,a=r.selection.$head.parent.type.name===e,d=n.docChanged&&(i||a);return!t||d?(t=!0,function(e,t){const n=[],o=Fn(e).filter((e=>e.node.type.name===t));return o.forEach((e=>{var t;let o=e.pos+1;const r=e.node.attrs.language;if(r){if(!(null===(t=Yn[e.pos])||void 0===t?void 0:t.node.eq(e.node))){const t=re.highlight(e.node.textContent,r),n=(e,t=[])=>e.flatMap((e=>"element"===e.type?n(e.children,[...t,...e.properties.className||[]]):[{text:e.value,className:t}])),s=n(t).map((({text:e,className:t})=>{const n=o,r=n+e.length;return o=r,B.inline(n,r,{class:t.join(" ")})}));Yn[e.pos]={node:e.node,dec:s}}Yn[e.pos].dec.forEach((e=>{n.push(e)}))}})),Object.keys(Yn).filter((e=>!o.find((t=>t.pos===Number(e))))).forEach((e=>{delete Yn[Number(e)]})),H.create(e,n)}(n.doc,e)):o.map(n.mapping,n.doc)}},view:e=>(window.requestAnimationFrame((()=>{e.dispatch(e.state.tr.setMeta(Un,{loaded:!0}))})),{}),props:{decorations(e){return this.getState(e)}}})}const Jn=ct("prism",(()=>[Gn("fence")])),Xn=(e,t)=>e.tagName===t.toUpperCase(),Qn=e=>{const t=document.createElement("span");return t.textContent=e,t.className="icon material-icons",t},Zn=(e,t)=>{const{from:n,to:o}=e.selection;return e.doc.rangeHasMark(n,o,t)},eo=(e,t)=>{var n;return null===(n=Ft((e=>Boolean(t.isInSet(e.marks))))(e.selection,e.doc))||void 0===n?void 0:n.node},to=(e,t)=>!(e=>e.selection instanceof T)(e)||(e=>Boolean(Kt((e=>"fence"===e.type.name))(e.selection)))(e)||Zn(e,t),no=(e,t,n)=>(o,r)=>{if(!r)return!1;const{start:s,end:i}=((e,t)=>{let n={start:-1,end:-1};const o=Ft((e=>Boolean(t.isInSet(e.marks))))(e.selection,e.doc);return o&&(n={start:o.pos,end:o.pos+Math.max(o.node.textContent.length,1)}),n})(o,e),{tr:a}=o,d=t.create(Object.assign(Object.assign({},e.attrs),{href:n}));return a.removeMark(s,i).addMark(s,i,d).setSelection(new T(a.selection.$anchor)),r(a.scrollIntoView()),!0},oo=(e,t)=>(n,o)=>{const{target:r}=n,{nodes:s}=e,{image:i}=s;if(!(r instanceof HTMLElement))return()=>!0;if(Xn(r,"input"))return r.focus(),()=>!1;const a=ro(o.state.selection,i);if(!a)return()=>!1;const d=r.parentNode;if(!d)return()=>!1;const l=Array.from(d.children).find((e=>"INPUT"===e.tagName));return l instanceof HTMLInputElement?(e,n)=>{if(!n)return!1;const{tr:o}=e;return o.setNodeMarkup(a.pos,void 0,Object.assign(Object.assign({},a.node.attrs),{[t]:l.value})),n(o.scrollIntoView()),!0}:()=>!1},ro=(e,t)=>{if(!(e instanceof se))return;const{node:n,$from:o}=e;return((e,t)=>Array.isArray(e)&&e.indexOf(t.type)>-1||t.type===e)(t,n)?{node:n,pos:o.pos,depth:o.depth}:void 0},so=(e,t,n,o)=>({$:Qn(e),command:()=>q(t,o),active:e=>Zn(e.state,t),disable:e=>to(e.state,n),enable:e=>!!e.state.schema.marks[t.name]});var io,ao,lo,co;(ao=io||(io={}))[ao.ToggleBold=0]="ToggleBold",ao[ao.ToggleItalic=1]="ToggleItalic",ao[ao.ToggleStrike=2]="ToggleStrike",ao[ao.ToggleCode=3]="ToggleCode",ao[ao.ToggleLink=4]="ToggleLink",(co=lo||(lo={}))[co.ModifyLink=0]="ModifyLink",co[co.ModifyImage=1]="ModifyImage";var mo,ho,po,uo,fo,go,ko,wo;class yo{constructor(e,t){this.view=t,mo.set(this,void 0),ho.set(this,void 0),po.set(this,(e=>{const{view:t}=this;if(!t)return;const n=Object.values(l(this,ho,"f")).find((({$:t})=>e.target instanceof Element&&t.contains(e.target)));n&&(e.stopPropagation(),e.preventDefault(),n.command(e,t)(t.state,t.dispatch))})),z(this,ho,e,"f"),z(this,mo,this.createTooltip(),"f"),l(this,mo,"f").addEventListener("mousedown",l(this,po,"f"))}destroy(){l(this,mo,"f").removeEventListener("mousedown",l(this,po,"f")),l(this,mo,"f").remove()}hide(){l(this,mo,"f").classList.add("hide")}update(e){this.filterButton(e)?this.hide():this.calcPos(e)}get noActive(){return Object.values(l(this,ho,"f")).every((({$:e})=>e.classList.contains("hide")))}filterButton(e){return Object.values(l(this,ho,"f")).forEach((t=>{var n;if(null===(n=t.disable)||void 0===n?void 0:n.call(t,e))return void t.$.classList.add("hide");t.$.classList.remove("hide");t.active(e)?t.$.classList.add("active"):t.$.classList.remove("active")})),this.noActive}calcPos(e){var t;l(this,mo,"f").classList.remove("hide");const n=e.state,{from:o,to:r}=n.selection,s=e.coordsAtPos(o),i=e.coordsAtPos(r),a=Math.max((s.left+i.left)/2,s.left+3),d=null===(t=l(this,mo,"f").offsetParent)||void 0===t?void 0:t.getBoundingClientRect();d&&(l(this,mo,"f").style.left=a-d.left+"px",l(this,mo,"f").style.bottom=d.bottom-s.top+"px")}createTooltip(){var e;const t=document.createElement("div");return t.className="tooltip",Object.values(l(this,ho,"f")).filter((e=>e.enable(this.view))).forEach((({$:e})=>t.appendChild(e))),null===(e=this.view.dom.parentNode)||void 0===e||e.appendChild(t),t}}mo=new WeakMap,ho=new WeakMap,po=new WeakMap;class vo{constructor(e,t){this.view=t,uo.set(this,void 0),fo.set(this,void 0),go.set(this,void 0),this.listener=e=>{const{view:t}=this,n=l(this,go,"f");t&&n&&(e.stopPropagation(),n(e,t)(t.state,t.dispatch))},z(this,fo,e,"f"),z(this,uo,this.createInput(),"f"),l(this,uo,"f").addEventListener("mousedown",this.listener)}destroy(){l(this,uo,"f").removeEventListener("mousedown",this.listener),l(this,uo,"f").remove()}hide(){l(this,uo,"f").classList.add("hide"),z(this,go,void 0,"f")}update(e){this.filterInput(e)&&this.calcPos(e)}calcPos(e){var t;const n=e.state,{from:o,to:r}=n.selection,s=e.coordsAtPos(o),i=e.coordsAtPos(r),a=Math.max((s.left+i.left)/2,s.left+3),d=l(this,uo,"f").getBoundingClientRect(),c=null===(t=l(this,uo,"f").offsetParent)||void 0===t?void 0:t.getBoundingClientRect();if(!c)return;const m=a-c.left-d.width/2,h=m+d.width;l(this,uo,"f").style.left=(h>c.width?m-(h-c.width):m<0?a-c.left:m)+"px",l(this,uo,"f").style.bottom=c.bottom-s.bottom-d.height-10+"px"}createInput(){var e;const t=document.createElement("div");t.className="tooltip-input";const n=document.createElement("input");t.appendChild(n);const o=document.createElement("button");return o.textContent="APPLY",t.appendChild(o),null===(e=this.view.dom.parentNode)||void 0===e||e.appendChild(t),t}filterInput(e){var t;const n=Object.values(l(this,fo,"f")).find((t=>t.display(e)));return n?(l(this,uo,"f").classList.remove("hide"),z(this,go,n.command,"f"),null===(t=l(this,uo,"f").firstElementChild)||void 0===t||t.setAttribute("placeholder",n.placeholder),n.update(e,l(this,uo,"f")),!0):(l(this,uo,"f").classList.add("hide"),!1)}}uo=new WeakMap,fo=new WeakMap,go=new WeakMap;class bo{constructor(e,t,n){ko.set(this,void 0),wo.set(this,void 0),z(this,ko,new yo(e,n),"f"),z(this,wo,new vo(t,n),"f"),this.update(n)}update(e,t){if(!e.editable)return void this.hide();const n=e.state;if(n.selection.empty)return void this.hide();(null==t?void 0:t.doc.eq(n.doc))&&t.selection.eq(n.selection)||(l(this,ko,"f").update(e),l(this,wo,"f").update(e))}destroy(){l(this,ko,"f").destroy(),l(this,wo,"f").destroy()}hide(){l(this,ko,"f").hide(),l(this,wo,"f").hide()}}ko=new WeakMap,wo=new WeakMap;const xo=e=>new L({key:new $("MILKDOWN_PLUGIN_TOOLTIP"),view:t=>new bo((e=>{const{marks:t}=e.schema;return{[io.ToggleBold]:so("format_bold",t.strong,t.code_inline),[io.ToggleItalic]:so("format_italic",t.em,t.code_inline),[io.ToggleStrike]:so("strikethrough_s",t.strike_through,t.code_inline),[io.ToggleCode]:so("code",t.code_inline,t.link),[io.ToggleLink]:so("link",t.link,t.code_inline,{href:""})}})(e),(e=>{const{marks:t,nodes:n}=e.schema;return{[lo.ModifyLink]:{display:e=>Zn(e.state,t.link),command:(o=e.schema,(e,t)=>{var n;const{target:r}=e,{marks:s}=o,{link:i}=s;if(!(r instanceof HTMLElement))return()=>!0;if(Xn(r,"input"))return r.focus(),()=>!1;const a=eo(t.state,i);if(!a)return()=>!1;const d=a.marks.find((({type:e})=>e===i));if(!d)return()=>!1;const l=null===(n=r.parentNode)||void 0===n?void 0:n.firstChild;return l instanceof HTMLInputElement?no(d,s.link,l.value):()=>!1}),placeholder:"Input Web Link",update:(e,n)=>{const{firstChild:o}=n;if(!(o instanceof HTMLInputElement))return;const r=eo(e.state,t.link);if(!r)return;const s=r.marks.find((e=>e.type===t.link));s&&(o.value=s.attrs.href)}},[lo.ModifyImage]:{display:e=>Boolean(ro(e.state.selection,n.image)),command:oo(e.schema,"src"),placeholder:"Input Image Link",update:(e,t)=>{const{firstChild:o}=t;if(!(o instanceof HTMLInputElement))return;const r=ro(e.state.selection,n.image);r&&(o.value=r.node.attrs.src)}}};var o})(e),t)}),Mo=ct("tooltip",(e=>[xo(e)]));const Eo=[new class extends Fe{constructor(){super(...arguments),this.id="math_inline",this.schema={group:"inline math",content:"text*",inline:!0,atom:!0,parseDOM:[{tag:"math-inline"}],toDOM:()=>["math-inline",{class:"math-node"},0]},this.parser={match:e=>"inlineMath"===e.type,runner:(e,t,n)=>{e.openNode(n),e.addText(t.value),e.closeNode()}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{let n="";t.forEach((e=>{n+=e.text})),e.addNode("inlineMath",void 0,n)}},this.inputRules=e=>[ie(de,e)]}},new class extends Fe{constructor(){super(...arguments),this.id="math_display",this.schema={group:"block math",content:"text*",atom:!0,code:!0,parseDOM:[{tag:"math-display"}],toDOM:()=>["math-display",{class:"math-node"},0]},this.parser={match:e=>"math"===e.type,runner:(e,t,n)=>{e.openNode(n),e.addText(t.value),e.closeNode()}},this.serializer={match:e=>e.type.name===this.id,runner:(e,t)=>{let n="";t.forEach((e=>{n+=e.text})),e.addNode("math",void 0,n)}},this.inputRules=e=>[ae(le,e)]}}],No=d({Backspace:ce(pe,ue,fe,ge)}),_o=[...Eo,ct("mathProsemirrorPlugin",(()=>[me,No])),ht("mathRemarkPlugin",(()=>[he]))],So=(e,t)=>{const n=document.createElement("div");n.setAttribute("role","option"),n.classList.add("slash-dropdown-item");const o=document.createElement("span");o.textContent=t,o.className="icon material-icons material-icons-outlined";const r=document.createElement("span");return r.textContent=e,r.className="text",n.appendChild(o),n.appendChild(r),n};var Co,To;(To=Co||(Co={}))[To.Divider=0]="Divider",To[To.H1=1]="H1",To[To.H2=2]="H2",To[To.H3=3]="H3",To[To.BulletList=4]="BulletList",To[To.OrderedList=5]="OrderedList",To[To.TaskList=6]="TaskList",To[To.Quote=7]="Quote",To[To.CodeFence=8]="CodeFence",To[To.Table=9]="Table",To[To.DivideLine=10]="DivideLine",To[To.Image=11]="Image";const Ao=(e,t=1)=>n=>(o,r)=>{if(!r)return!1;const{selection:s}=o,{$head:i}=s,a=i.pos-1-i.parent.content.size,d=o.tr.replaceWith(a,i.pos,e(n)),l=a+t,c=T.create(d.doc,l);return r(d.setSelection(c)),!0},Lo=e=>t=>Boolean(t.schema.nodes[e]),Po=[{type:Co.H1,$:So("Large Heading","looks_one"),command:Ao((e=>e.schema.nodes.heading.create({level:1}))),keyword:["h1","large heading"],enable:Lo("heading")},{type:Co.H2,$:So("Medium Heading","looks_two"),command:Ao((e=>e.schema.nodes.heading.create({level:2}))),keyword:["h2","medium heading"],enable:Lo("heading")},{type:Co.H3,$:So("Small Heading","looks_3"),command:Ao((e=>e.schema.nodes.heading.create({level:3}))),keyword:["h3","small heading"],enable:Lo("heading")},{type:Co.BulletList,$:So("Bullet List","format_list_bulleted"),command:Ao((e=>e.schema.nodes.bullet_list.createAndFill(null)),3),keyword:["bullet list","ul"],enable:Lo("bullet_list")},{type:Co.OrderedList,$:So("Ordered List","format_list_numbered"),command:Ao((e=>e.schema.nodes.ordered_list.createAndFill(null)),3),keyword:["ordered list","ol"],enable:Lo("ordered_list")},{type:Co.TaskList,$:So("Task List","checklist"),command:Ao((e=>e.schema.nodes.task_list_item.createAndFill(null)),3),keyword:["task list","task"],enable:Lo("task_list_item")},{type:Co.Image,$:So("Image","image"),command:Ao((e=>e.schema.nodes.image.createAndFill({src:""})),3),keyword:["image"],enable:Lo("image")},{type:Co.Quote,$:So("Quote","format_quote"),command:Ao((e=>e.schema.nodes.blockquote.createAndFill(null)),2),keyword:["quote","blockquote"],enable:Lo("blockquote")},{type:Co.Table,$:So("Table","table_chart"),command:Ao((e=>hn(e.schema)),4),keyword:["table"],enable:Lo("table")},{type:Co.CodeFence,$:So("Code Fence","code"),command:Ao((e=>e.schema.nodes.fence.createAndFill(null))),keyword:["code"],enable:Lo("fence")},{type:Co.DivideLine,$:So("Divide Line","horizontal_rule"),command:Ao((e=>e.schema.nodes.hr.create())),keyword:["divider","hr"],enable:Lo("hr")}];var Oo,Io,Ro,jo,Do,Wo,$o,Ho,zo,Bo,Vo,Ko,Fo;const qo=ct("slash",(e=>[Yo(e)])),Yo=e=>new L(new Jo(e));var Uo,Go;(Go=Uo||(Uo={}))[Go.Empty=0]="Empty",Go[Go.Slash=1]="Slash";class Jo{constructor(e){this.ctx=e,this.key=new $("milkdown-prosemirror-slash-plugin"),this.status=new Xo,this.props=new Qo(this.status),this.view=e=>new Zo(this.status,e,this.ctx)}}class Xo{constructor(){Oo.set(this,Uo.Empty),Io.set(this,""),this.activeActions=Po}clearStatus(){z(this,Oo,Uo.Empty,"f"),z(this,Io,"","f")}setSlash(e=""){z(this,Oo,Uo.Slash,"f"),z(this,Io,e,"f")}get cursorStatus(){return l(this,Oo,"f")}get filter(){return l(this,Io,"f")}}Oo=new WeakMap,Io=new WeakMap;class Qo{constructor(e){this.status=e,this.handleKeyDown=(e,t)=>{const{cursorStatus:n,activeActions:o}=this.status;return n===Uo.Slash&&0!==o.length&&(t instanceof KeyboardEvent&&!!["ArrowUp","ArrowDown","Enter"].includes(t.key))},this.decorations=e=>{const{status:t}=this,n=Kt((({type:e})=>"paragraph"===e.name))(e.selection),o=1===e.selection.$from.depth;if(!n||!o)return void t.clearStatus();const r=n.pos,s=0===n.node.content.size,i="/"===n.node.textContent,a=n.node.textContent.startsWith("/");if(s){t.clearStatus();const o="Type / to use the slash commands...";return H.create(e.doc,[B.node(r,r+n.node.nodeSize,{class:"empty-node","data-text":o})])}if(i){t.setSlash();const o="Type to filter...";return H.create(e.doc,[B.node(r,r+n.node.nodeSize,{class:"empty-node is-slash","data-text":o})])}return a?(t.setSlash(n.node.textContent.slice(1)),null):(t.clearStatus(),null)}}}class Zo{constructor(e,t,n){Ro.set(this,void 0),jo.set(this,void 0),Do.set(this,void 0),Wo.set(this,void 0),$o.set(this,void 0),Ho.set(this,void 0),zo.set(this,(e=>{const{target:t}=e;if(!(t instanceof HTMLElement))return;const n=l(this,$o,"f");if(!n)return;const o=Object.values(Po).find((({$:e})=>e.contains(t)));o&&(e.stopPropagation(),e.preventDefault(),o.command(l(this,Do,"f"))(n.state,n.dispatch))})),Bo.set(this,(e=>{l(this,Ho,"f")||z(this,Ho,!0,"f");const{key:t}=e;if(l(this,Wo,"f").cursorStatus!==Uo.Slash)return;if(!["ArrowDown","ArrowUp","Enter"].includes(t))return;let n=l(this,Wo,"f").activeActions.findIndex((e=>e.$.classList.contains("active")));if(n<0&&(n=0),"ArrowDown"===t){const e=n===l(this,Wo,"f").activeActions.length-1?0:n+1;return l(this,Wo,"f").activeActions[n].$.classList.remove("active"),l(this,Wo,"f").activeActions[e].$.classList.add("active"),void ke(l(this,Wo,"f").activeActions[e].$,{scrollMode:"if-needed",block:"nearest",inline:"nearest"})}if("ArrowUp"===t){const e=0===n?l(this,Wo,"f").activeActions.length-1:n-1;return l(this,Wo,"f").activeActions[n].$.classList.remove("active"),l(this,Wo,"f").activeActions[e].$.classList.add("active"),void ke(l(this,Wo,"f").activeActions[e].$,{scrollMode:"if-needed",block:"nearest",inline:"nearest"})}l(this,Wo,"f").activeActions[n].command(l(this,Do,"f"))(l(this,$o,"f").state,l(this,$o,"f").dispatch),l(this,Wo,"f").activeActions[n].$.classList.remove("active")})),Vo.set(this,(e=>{if(l(this,Ho,"f"))return;const t=l(this,Wo,"f").activeActions.findIndex((e=>e.$.classList.contains("active")));t>=0&&l(this,Wo,"f").activeActions[t].$.classList.remove("active");const{target:n}=e;n instanceof HTMLElement&&n.classList.add("active")})),Ko.set(this,(e=>{const{target:t}=e;t instanceof HTMLElement&&t.classList.remove("active")})),Fo.set(this,(()=>{l(this,Ho,"f")&&z(this,Ho,!1,"f")})),z(this,Wo,e,"f"),z(this,Ro,(()=>{const e=document.createElement("div");return e.setAttribute("role","listbox"),e.setAttribute("tabindex","-1"),e.classList.add("slash-dropdown"),e})(),"f"),z(this,Do,n,"f"),z(this,$o,t,"f"),z(this,Ho,!1,"f");const{parentNode:o}=t.dom;if(!o)throw new Error;z(this,jo,o,"f"),o.appendChild(l(this,Ro,"f")),l(this,jo,"f").addEventListener("mousemove",l(this,Fo,"f")),Po.filter((e=>e.enable(l(this,Do,"f")))).forEach((({$:e})=>{e.addEventListener("mouseenter",l(this,Vo,"f")),e.addEventListener("mouseleave",l(this,Ko,"f")),l(this,Ro,"f").appendChild(e)})),l(this,jo,"f").addEventListener("mousedown",l(this,zo,"f")),l(this,jo,"f").addEventListener("keydown",l(this,Bo,"f"))}update(e){this.renderDropdown()&&this.calculatePosition(e)}destroy(){l(this,jo,"f").removeEventListener("mousedown",l(this,zo,"f")),l(this,jo,"f").removeEventListener("keydown",l(this,Bo,"f")),l(this,Ro,"f").remove()}renderDropdown(){const{cursorStatus:e,filter:t}=l(this,Wo,"f");if(e!==Uo.Slash)return l(this,Ro,"f").classList.add("hide"),!1;const n=Po.filter((e=>{e.$.classList.remove("active");return!!e.keyword.some((e=>e.includes(t.toLocaleLowerCase())))||(e.$.classList.add("hide"),!1)})).map((e=>(e.$.classList.remove("hide"),e)));return l(this,Wo,"f").activeActions=n,0===n.length?(l(this,Ro,"f").classList.add("hide"),!1):(n[0].$.classList.add("active"),l(this,Ro,"f").classList.remove("hide"),!0)}calculatePosition(e){const t=e.state,{from:n}=t.selection,o=e.domAtPos(n).node.getBoundingClientRect(),r=l(this,Ro,"f").getBoundingClientRect(),s=document.body.getBoundingClientRect();let i=o.left,a=o.top+o.height;i<0&&(i=0),s.height-o.bottom<r.height&&(a=o.top-r.height),l(this,Ro,"f").style.left=i+"px",l(this,Ro,"f").style.top=a+"px"}}Ro=new WeakMap,jo=new WeakMap,Do=new WeakMap,Wo=new WeakMap,$o=new WeakMap,Ho=new WeakMap,zo=new WeakMap,Bo=new WeakMap,Vo=new WeakMap,Ko=new WeakMap,Fo=new WeakMap;const er=[qo];var tr="_editor_1uhk0_1";const nr=({content:e,readOnly:t,onChange:n})=>{const o=((e,t=[])=>i.useCallback(((...t)=>e(...t)),t))((o=>{const r=new Vt({root:o,defaultValue:e,editable:()=>!t,listener:{markdown:n?[n]:[]}}).use(Vn).use(Kn).use(Jn).use(Mo).use(_o);return t||r.use(er),r}),[t,e]);return i.createElement("div",{className:tr},i.createElement(cn,{editor:o}))},or="https://unpkg.com/prism-themes/themes/prism-material-light.css",rr="https://unpkg.com/prism-themes/themes/prism-nord.css",sr=(e,t)=>{we.exports.useEffect((()=>{var e;const n=Boolean(null==(e=window.matchMedia)?void 0:e.call(window,"(prefers-color-scheme: dark)").matches);t(n)}),[t]),we.exports.useEffect((()=>{document.documentElement.setAttribute("data-theme",e?"dark":"light");(()=>{const e=document.querySelector("#prism-theme");if(e)return e;const t=document.createElement("link");return t.id="prism-theme",t.setAttribute("rel","stylesheet"),document.head.appendChild(t),t})().setAttribute("href",e?rr:or)}),[e])};var ir,ar;(ar=ir||(ir={}))[ar.Home=0]="Home",ar[ar.Demo=1]="Demo",ar[ar.Page=2]="Page";const dr=e=>"/"===e.pathname?0:"/online-demo"===e.pathname?1:2;function lr(){const e=ye();return[dr(e),e]}var cr,mr,hr={container:"_container_6poa6_1",code:"_code_6poa6_8",milk:"_milk_6poa6_36",twoSide:"_twoSide_6poa6_42"};(mr=cr||(cr={}))[mr.Default=0]="Default",mr[mr.TwoSide=1]="TwoSide";const pr=({value:e,onChange:t,lock:n,dark:o})=>{const r=i.useRef(null);return i.useEffect((()=>{if(!r.current)return;const s=function(e,t,n,o,r){return new ve({state:be.create({doc:r,extensions:[xe,Me(),ve.updateListener.of((e=>{e.focusChanged&&(n.current=e.view.hasFocus),e.docChanged&&t((()=>e.state.doc.toString()))})),ve.theme({"&.cm-focused":{outline:"none"}},{dark:o})]}),parent:e})}(r.current,t,n,o,e);return()=>{s.destroy()}}),[t,e,n,o]),i.createElement("div",{className:hr.code},i.createElement("div",{ref:r}))},ur=({content:e,mode:t,isDarkMode:n})=>{const o=i.useRef(e),r=i.useRef(e),[s,a]=i.useState(0),[d,l]=i.useState(0),c=i.useCallback((()=>a((e=>e+1))),[]),m=i.useCallback((()=>l((e=>e+1))),[]),h=i.useRef(!1),p=i.useCallback((e=>{if(h.current)return;const t=e();t!==o.current&&(o.current=t,m())}),[m]),u=i.useCallback((e=>{const t=e();t!==r.current&&(r.current=t,c())}),[c]),f=[hr.container,1===t?hr.twoSide:""].join(" ");return i.createElement("div",{className:f},i.createElement("div",{className:hr.milk},i.createElement(nr,{key:"milkdown"+s.toString(),content:r.current,onChange:p})),i.createElement(pr,{key:"code"+d.toString(),value:o.current,onChange:u,dark:n,lock:h}))};var fr={container:"_container_1k181_1",header:"_header_1k181_11",homepage:"_homepage_1k181_31",part:"_part_1k181_35",icon:"_icon_1k181_39",logo:"_logo_1k181_52",mode:"_mode_1k181_86"};const gr=`${fr.icon} material-icons-outlined`,kr=({onToggle:e,scrolled:t,editorMode:n,onEditorModeToggle:o,isDarkMode:r,setIsDarkMode:s})=>{const[d,l]=i.useState(!0),[c,m]=i.useState(!1),[h]=lr();i.useEffect((()=>{h!==ir.Page?(l(!1),h!==ir.Demo?m(!1):m(!0)):l(!0)}),[h]),sr(r,s);const p=[fr.container,h!==ir.Home&&t?"":fr.homepage].join(" ");return i.createElement("div",{className:p},i.createElement("header",{className:fr.header},i.createElement("div",{className:fr.part},d&&i.createElement("span",{className:gr,onClick:()=>null==e?void 0:e()},"menu"),i.createElement(a,{to:"/",className:fr.logo},i.createElement("img",{src:"/milkdown/milkdown-mini.svg"}),i.createElement("span",{style:{opacity:t?0:1,transition:"all 0.2s ease-in"}},"Milkdown"))),i.createElement("div",{className:fr.part},c&&i.createElement("span",{onClick:()=>o(),className:[gr,fr.mode].join(" ")},n===cr.Default?"chrome_reader_mode":"wysiwyg"),i.createElement("span",{onClick:()=>s(!r),className:gr},r?"light_mode":"dark_mode"),i.createElement("a",{href:"https://github.com/Saul-Mirone/milkdown",target:"_blank",className:fr.github},i.createElement("span",{className:gr},"open_in_new")))))};var wr={sidebar:"_sidebar_ji0cs_1",fold:"_fold_ji0cs_13",hr:"_hr_ji0cs_30",sectionTitle:"_sectionTitle_ji0cs_37",link:"_link_ji0cs_46",active:"_active_ji0cs_58"};const yr=({title:e,link:t})=>i.createElement(Ee,{className:wr.link,activeClassName:wr.active,to:t},e),vr=({title:e,items:t})=>i.createElement("section",{className:wr.section},i.createElement("section",{className:wr.sectionTitle},e),t.map(((e,t)=>i.createElement(yr,s({key:t.toString()},e))))),br=({sections:e,setDisplay:t,display:n})=>{const[o,r]=lr();i.useEffect((()=>{o===ir.Page?document.documentElement.clientWidth<1080?t(!1):t(!0):t(!1)}),[o,t,r]);const a=i.useMemo((()=>`${wr.sidebar} ${n?"":wr.fold}`),[n]);return i.createElement("nav",{className:a},e.map(((t,n)=>i.createElement("section",{key:n.toString()},i.createElement(vr,s({key:n.toString()},t)),n<e.length-1&&i.createElement("hr",{className:wr.hr})))))};const xr=[{title:"Guide",items:[{title:"Why Milkdown",link:"/why-milkdown",content:"# Why Milkdown\n\nThere are kinds of different markdown editors, such as [Typora](https://typora.io/), [tui](https://github.com/nhn/tui.editor) and [Bear](https://bear.app/).\nThey work pretty well for writing notes in markdown on different platforms. So why bother making Milkdown?\n\nMilkdown aims to provide a **open source solution** for developers to make their editors more powerful, attractive, and can be used everywhere.\n\n---\n\n## Open Source & Easy to Integration\n\nDifferent from industry apps such as [Notion](https://notion.so) and [Typora](https://typora.io/),\nMilkdown is open source and fully free. You can integrate it everywhere legally.\n\n> If you like milkdown, please consider to fund me to help the maintenance.\n\n## Plugin Driven\n\nMilkdown treats every features as plugins.\nWith this pattern, developers can choose what they need in an editor instead of bundle all features even they won't need.\nDevelopers can extends the plugin to satisfy their habit such as define a vim keymap plugin.\n\n## Reliable\n\nMilkdown is powered by [Prosemirror](https://prosemirror.net/) and [Remark](https://github.com/remarkjs/remark), which has large community and stands the test of industry.\nWhat's more, plugins in prosemirror and remark community can be easily reused to build a Milkdown plugin.\n\n## Themable & Hackable\n\nThemes and plugins for Milkdown can be shared and installed using npm packages.\n"},{title:"Getting Started",link:"/getting-started",content:"# Getting Started\n\n## Overview\n\nMilkdown is a lightweight but powerful WYSIWYG markdown editor. It's made up by two parts:\n\n-   A tiny core which provide markdown parser, serializer and kinds of plugin loader.\n-   Lots of plugins provide syntax, commands and components.\n\nWith this pattern you can enable or disable any custom syntax you like, such as table, latex and slash commands.\nYou can even create your own plugin to support your awesome idea.\n\n---\n\n## Features\n\n-   📝 **WYSIWYG Markdown** - Write markdown in an elegant way\n-   🎨 **Themable** - Theme can be shared and used with npm packages\n-   🎮 **Hackable** - Support your awesome idea by plugin\n-   🦾 **Reliable** - Built on top of [prosemirror](https://prosemirror.net/) and [remark](https://github.com/remarkjs/remark)\n-   ⚡️ **Slash & Tooltip** - Write fast for everyone, driven by plugin\n-   🧮 **Math** - LaTeX math equations support, driven by plugin\n-   📊 **Table** - Table support with fluent ui, driven by plugin\n\n## Tech Stack\n\nMilkdown is built on top of these tools:\n\n-   [Prosemirror](https://prosemirror.net/) and it's community - A toolkit for building rich-text editors on the web\n-   [Remark](https://github.com/remarkjs/remark) and it's community - Markdown parser done right\n-   [Postcss](https://postcss.org/) - Powerful css tool to build theme\n-   [TypeScript](https://www.typescriptlang.org/) - Developed by typescript\n-   [Prism](https://prismjs.com/) - Code snippets support\n-   [Katex](https://katex.org/) - LaTex math rendering\n\n---\n\n## First editor\n\nWe have some pieces for you to create a very minimal editor:\n\n> **We use [material icon](https://fonts.google.com/icons) and [Roboto Font](https://fonts.google.com/specimen/Roboto) in our theme**.\n> Make sure to include them for having the best experience.\n\n```typescript\nimport { Editor } from '@milkdown/core';\nimport { commonmark } from '@milkdown/preset-commonmark';\n\n// import theme and plugin style\nimport '@milkdown/theme-nord/lib/theme.css';\nimport '@milkdown/preset-commonmark/lib/style.css';\n\nconst root = document.body;\nnew Editor({ root }).use(commonmark).create();\n```\n\n## Taste the plugin\n\nNow let's add an **undo & redo** support for our editor:\n\n```typescript\nimport { Editor } from '@milkdown/core';\nimport { commonmark } from '@milkdown/preset-commonmark';\nimport { history } from '@milkdown/plugin-history';\n\n// import theme and plugin style\nimport '@milkdown/theme-nord/lib/theme.css';\nimport '@milkdown/preset-commonmark/lib/style.css';\n\nconst root = document.body;\nnew Editor({ root }).use(commonmark).use(history).create();\n```\n\n> `Mod` is `Cmd` for mac and `Ctrl` for other platforms.\n\nNow we can undo a editor by using `Mod-z` and redo it by using `Mod-y` or `Shift-Mod-Z`.\n"},{title:"Interacting with Editor",link:"/interacting-with-editor",content:"# Interacting with Editor\n\n## Setting Default Value\n\n### Markdown\n\nYou can set a markdown string as the default value of the editor.\n\n```typescript\nnew Editor({\n    ...\n    defaultValue: '# Hello milkdown',\n});\n```\n\nAnd then the editor will be rendered with default value.\n\n### Dom\n\nYou can also use HTML as default value.\n\nLet's assume that we have following html snippets:\n\n```html\n<div id=\"pre\">\n    <h1>Hello milkdown!</h1>\n</div>\n```\n\nThen we can use it as defaultValue with a `type` specification:\n\n```typescript\nnew Editor({\n    ...\n    defaultValue: {\n        type: 'html',\n        dom: document.querySelector('#pre'),\n    }\n});\n```\n\n### JSON\n\nWe can also use JSON object as default value.\n\nThis JSON object can be get by listener, for example:\n\n```typescript\nlet jsonOutput;\nnew Editor({\n    ...\n    listener: {\n        docs: [\n            (node) => {\n                jsonOutput = node.toJSON();\n            },\n        ]\n\n    },\n});\n```\n\nThen we can use this `jsonOutput` as default Value:\n\n```typescript\nnew Editor({\n    ...\n    defaultValue: {\n        type: 'json',\n        value: jsonOutput,\n    }\n});\n```\n\n---\n\n## Adding Listener\n\nYou can add listener to the editor, get values when needed.\n\n### Markdown Listener\n\nYou can add markdown listener to get the markdown string output when needed.\n\nYou can add as many listeners as you want, all the listener will be triggered in one change.\n\n```typescript\nlet output = '';\n\nnew Editor({\n    ...\n    listener: {\n        markdown: [\n            (getMarkdown) => {\n                if (needGetOutput) {\n                    output = getMarkdown();\n                }\n            },\n            (getMarkdown) => {\n                if (needLog) {\n                    console.log(getMarkdown())\n                }\n            }\n        ]\n    }\n})\n```\n\n### Doc Listener\n\nYou can also listen to the [raw prosemirror document node](https://prosemirror.net/docs/ref/#model.Node), and do things you want.\n\n```typescript\nlet jsonOutput;\n\nnew Editor({\n    ...\n    listener: {\n        docs: [\n            (node) => {\n                jsonOutput = node.toJSON();\n            },\n        ]\n    }\n})\n```\n\n---\n\n## Readonly mode\n\nYou can set the editor to readonly mode by set the `editable` property.\n\n```typescript\nlet readonly = false;\nnew Editor({\n    ...\n    editable: () => !readonly,\n})\n\n// set to readonly after 5 secs.\nsetTimeout(() => {\n    readonly = true;\n}, 5000)\n```\n"},{title:"Styling",link:"/styling",content:"# Styling\n\nMilkdown is headless, there is no style is provided by default.\nThat means you can import themes or even create your own themes to control the style of your editor.\n\n## Option 1: Style the plain HTML\n\nThe whole editor is rendered inside of a container with the class `.milkdown`.\nAnd the editable part is wrapped in the container with the class `editor`.\nYou can use that to scope your styling to the editor content:\n\n```css\n.milkdown .editor p {\n    margin: 1rem 0;\n}\n```\n\nFor every node/mark, milkdown provides a default className,\nfor example, `paragraph` for every p node:\n\n```css\n.milkdown .editor .paragraph {\n    margin: 1rem 0;\n}\n```\n\n## Option 2: Add custom class name\n\nYou can also use `configure` method to add class to node/mark.\nIn this way, you can use css tools like `tailwind` css.\n\n```typescript\nimport { commonmark, Paragraph, Heading } from '@milkdown/commonmark';\n\nconst nodes = commonmark\n    .configure(Paragraph, {\n        className: () =>\n            'my-custom-paragraph'\n    })\n    .configure(Heading, {\n        className: (attrs) =>\n            `my-custom-heading my-h${attrs.level}`\n    })\n\nnew Editor({ ...  }).use(nodes);\n```\n"},{title:"Keyboard Shortcuts",link:"/keyboard-shortcuts",content:"# Keyboard Shortcuts\n\nKeyboard shortcuts are provided by default from both presets and plugins.\nDepending on your behavior, you might want to change them to what you like.\n\n---\n\n## Default Shortcuts Table\n\n> `Mod` is `Cmd` on macOS and `Ctrl` for windows/linux.\n\n### Essentials\n\n| Action    | Key       |\n| --------- | --------- |\n| Copy      | Mod-c     |\n| Cut       | Mod-x     |\n| Paste     | Mod-v     |\n| New Line  | Enter     |\n| Exit Code | Mod-Enter |\n\n### History\n\n| Action | Key         |\n| ------ | ----------- |\n| Undo   | Mod-z       |\n| Redo   | Mod-Shift-z |\n\n### Mark\n\n| Action      | Key   |\n| ----------- | ----- |\n| Bold        | Mod-b |\n| Italic      | Mod-i |\n| Inline Code | Mod-e |\n\n### Paragraph\n\n| Action      | Key         |\n| ----------- | ----------- |\n| Normal Text | Mod-Alt-0   |\n| H1          | Mod-Alt-1   |\n| H2          | Mod-Alt-2   |\n| H3          | Mod-Alt-3   |\n| H4          | Mod-Alt-4   |\n| H5          | Mod-Alt-5   |\n| H6          | Mod-Alt-6   |\n| Code Fence  | Mod-Alt-c   |\n| Line Break  | Shift-Enter |\n\n### List\n\n| Action         | Key       |\n| -------------- | --------- |\n| Ordered List   | Mod-Alt-7 |\n| Bullet List    | Mod-Alt-8 |\n| Sink List Item | Mod-]     |\n| Lift List Item | Mod-[     |\n\n### Table\n\n| Action               | Key       |\n| -------------------- | --------- |\n| Next Cell            | Mod-]     |\n| Prev Cell            | Mod-[     |\n| Exit Table and Break | Mod-Enter |\n\n---\n\n## Configure Shortcuts\n\nYou can configure shortcuts just like configure their styles:\n\n```typescript\nimport { commonmark, Blockquote, SupportedKeys } from '@milkdown/preset-commonmark';\n\nconst nodes = commonmark\n    .configure(Blockquote, {\n        keymap: {\n            [SupportedKeys.Blockquote]: 'Mod-Shift-b',\n            // or you may want to bind multiple keys:\n            [SupportedKeys.Blockquote]: ['Mod-Shift-b', 'Mod-b'],\n        },\n    });\n\nnew Editor({ ... }).use(nodes);\n```\n\nYou can inspect the `SupportedKeys` enum to find out the supported commands that can be configured.\n\nIf there is no supported commands for the behavior you expect, you can write a [prosemirror keymap plugin](https://github.com/ProseMirror/prosemirror-keymap) to do this.\nYou can read the [building plugins](/#/building-plugins) section to get further information.\n"}]},{title:"Integrations",items:[{title:"React",link:"/react",content:"# React\n\nWe provide react support out of box.\n\n## Install the Dependencies\n\nExcept the `@milkdown/core`, preset and theme.\nWe need to install the `@milkdown/react`,\nwhich provide lots of abilities for react in milkdown.\n\n```bash\n# install with npm\nnpm install @milkdown/react @milkdown/core\n\n# optional\nnpm install @milkdown/preset-commonmark @milkdown/theme-nord\n```\n\n## Create a Component\n\nCreate a component is pretty easy.\n\n```typescript\nimport React from 'react';\nimport { Editor } from '@milkdown/core';\nimport { ReactEditor, useEditor } from '@milkdown/react';\nimport { commonmark } from '@milkdown/preset-commonmark';\n\nimport '@milkdown/theme-nord/lib/theme.css';\nimport '@milkdown/preset-commonmark/lib/style.css';\n\nexport const MilkdownEditor: React.FC = () => {\n    const editor = useEditor((root) => new Editor({ root }).use(commonmark));\n\n    return <ReactEditor editor={editor} />;\n};\n```\n\n## Custom Component for Node\n\nWe provide custom node support out of box.\n\n```typescript\nimport React from 'react';\nimport { Editor } from '@milkdown/core';\nimport { ReactEditor, useEditor, useNodeCtx } from '@milkdown/react';\nimport { commonmark, Paragraph, Image } from '@milkdown/preset-commonmark';\n\nconst CustomParagraph: React.FC = ({ children }) => <div className=\"react-paragraph\">{children}</div>;\n\nconst CustomImage: React.FC = ({ children }) => {\n    const { node } = useNodeCtx();\n\n    return (\n        <img\n            className=\"react-image\"\n            src={node.attrs.src}\n            alt={node.attrs.alt}\n            title={node.attrs.tittle}\n        />;\n    )\n};\n\nexport const MilkdownEditor: React.FC = () => {\n    const editor = useEditor((root, renderReact) => {\n        const nodes = commonmark\n            .configure(Paragraph, { view: renderReact(CustomParagraph) })\n            .configure(Image, { view: renderReact(CustomImage) });\n\n        return new Editor({ root }).use(nodes);\n    });\n\n    return <ReactEditor editor={editor} />;\n};\n```\n\nValues can be get by `useNodeCtx`:\n\n-   _editor_:\n\n    Instance of current milkdown editor.\n\n-   _node_:\n\n    Current prosemirror node need to be rendered.\n    Equal to [node parameter in nodeViews](https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews).\n\n-   _view_:\n\n    Current prosemirror editor view.\n    Equal to [view parameter in nodeViews](https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews).\n\n-   _getPos_:\n\n    Method to get position of current prosemirror node.\n    Equal to [getPos parameter in nodeViews](https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews).\n\n-   _decorations_:\n\n    Decorations of current prosemirror node.\n    Equal to [decorations parameter in nodeViews](https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews).\n"},{title:"Vue",link:"/vue",content:"# Vue\n\nWe provide vue support out of box.\n\n> Vue version should be 3.x\n\n## Install the Dependencies\n\nExcept the `@milkdown/core`, preset and theme.\nWe need to install the `@milkdown/vue`,\nwhich provide lots of abilities for vue in milkdown.\n\n```bash\n# install with npm\nnpm install @milkdown/vue @milkdown/core\n\n# optional\nnpm install @milkdown/preset-commonmark @milkdown/theme-nord\n```\n\n## Create a Component\n\nCreate a component is pretty easy.\n\n```typescript\nimport { defineComponent } from 'vue';\nimport { Editor } from '@milkdown/core';\nimport { VueEditor, useEditor } from '@milkdown/vue';\nimport { commonmark } from '@milkdown/preset-commonmark';\n\nimport '@milkdown/theme-nord/lib/theme.css';\nimport '@milkdown/preset-commonmark/lib/style.css';\n\nexport const MilkdownEditor = defineComponent(() => {\n    const editor = useEditor((root) => new Editor({ root }).use(commonmark));\n\n    return () => <VueEditor editor={editor} />;\n});\n```\n\n## Custom Component for Node\n\nWe provide custom node support out of box.\n\n```typescript\nimport { inject, defineComponent, DefineComponent } from 'vue';\nimport { Editor } from '@milkdown/core';\nimport { VueEditor, useEditor } from '@milkdown/vue';\nimport { commonmark, Paragraph, Image } from '@milkdown/preset-commonmark';\nimport { Node } from 'prosemirror-model';\n\nconst CustomParagraph: DefineComponent = defineComponent({\n    name: 'my-paragraph',\n    setup(_, { slots }) {\n        return () => <div class=\"vue-paragraph\">{slots.default?.()}</div>;\n    },\n});\n\nconst CustomImage: DefineComponent = defineComponent({\n    name: 'my-image',\n    setup() {\n        const node: Node = inject('node', {} as Node);\n\n        return () => <img class=\"vue-image\" src={node.attrs.src} alt={node.attrs.alt} />;\n    },\n});\n\nexport const MyEditor = defineComponent(() => {\n    const editor = useEditor((root, renderVue) => {\n        const nodes = commonmark\n            .configure(Paragraph, {\n                view: renderVue(CustomParagraph),\n            })\n            .configure(Image, {\n                view: renderVue(CustomImage),\n            });\n        return new Editor({ root }).use(nodes);\n    });\n\n    return () => <VueEditor editor={editor} />;\n});\n```\n\nValues can be inject in custom component:\n\n-   _editor_:\n\n    Instance of current milkdown editor.\n\n-   _node_:\n\n    Current prosemirror node need to be rendered.\n    Equal to [node parameter in nodeViews](https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews).\n\n-   _view_:\n\n    Current prosemirror editor view.\n    Equal to [view parameter in nodeViews](https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews).\n\n-   _getPos_:\n\n    Method to get position of current prosemirror node.\n    Equal to [getPos parameter in nodeViews](https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews).\n\n-   _decorations_:\n\n    Decorations of current prosemirror node.\n    Equal to [decorations parameter in nodeViews](https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews).\n"}]},{title:"Plugins",items:[{title:"Using Plugins",link:"/using-plugins",content:"# Using Plugins\n\n## Tasting a Plugin\n\nIn fact, all features in milkdown are supported by plugin.\nThe `commonmark` we use is a plugin. Now we can try more plugins:\n\n```typescript\nimport { Editor } from '@milkdown/core';\n\nimport '@milkdown/theme-nord/lib/theme.css';\n\nimport { commonmark } from '@milkdown/preset-commonmark';\nimport '@milkdown/preset-commonmark/lib/style.css';\n\nimport { tooltip } from '@milkdown/plugin-tooltip';\nimport '@milkdown/plugin-tooltip/lib/style.css';\n\nconst root = document.body;\nnew Editor({ root }).use(commonmark).use(tooltip).create();\n```\n\n---\n\n## Finding Plugins\n\n### Official Plugins\n\nMilkdown provides the following official plugins:\n\n-   [@milkdown/plugin-history](https://www.npmjs.com/package/@milkdown/plugin-history)\n\n    Add undo & redo support.\n\n-   [@milkdown/plugin-table](https://www.npmjs.com/package/@milkdown/plugin-table)\n\n    Add table syntax support.\n\n-   [@milkdown/plugin-prism](https://www.npmjs.com/package/@milkdown/plugin-prism)\n\n    Add [prism](https://prismjs.com/) support for code block highlight.\n\n-   [@milkdown/plugin-math](https://www.npmjs.com/package/@milkdown/plugin-math)\n\n    Add [LaTeX](https://en.wikipedia.org/wiki/LaTeX) support for math.\n\n-   [@milkdown/plugin-tooltip](https://www.npmjs.com/package/@milkdown/plugin-tooltip)\n\n    Add selected tooltip for text.\n\n-   [@milkdown/plugin-slash](https://www.npmjs.com/package/@milkdown/plugin-slash)\n\n    Add slash commands support.\n\n### Community plugins\n\nCheck out [awesome-milkdown](https://github.com/Saul-Mirone/awesome-milkdown) to find community plugins - you can also submit a PR to list your plugins there.\n"},{title:"Building Plugins",link:"/building-plugins",content:"# Building Plugins\n\nWe provide some methods for users to build different types of plugins.\n\n---\n\n## Remark Plugin\n\nUsed to enable remark plugin.\n\n```typescript\nimport { createRemarkPlugin } from '@milkdown/core';\n\n// equal to\n// remark.use(someRemarkPlugin);\nconst remarkPlugin = createRemarkPlugin('milkdown-some-remark-plugin', () => [someMarkdownItPlugin]);\n\n// use\nmilkdown.use(remarkPlugin);\n```\n\n---\n\n## Prosemirror Plugin\n\nUsed to enable prosemirror plugin.\n\n```typescript\nimport { createProsemirrorPlugin } from '@milkdown/core';\n\n// equal to\n// markdownIt.use(markdownItTablePlugin);\nconst prosemirrorPlugin = createProsemirrorPlugin('my-plugin', () => [someProsemirrorPlugin]);\n\n// use\nmilkdown.use(prosemirrorPlugin);\n```\n"},{title:"Node & Mark",link:"/node-and-mark",content:"# Node & Mark\n\nNode and Mark are two special atoms that used to define prosemirror [Node](https://prosemirror.net/docs/ref/#model.Node) and [Mark](https://prosemirror.net/docs/ref/#model.Mark).\n\n## Overview\n\nUsers can easily define a node by the following code:\n\n```typescript\nimport { NodeParserSpec, NodeSerializerSpec, Node } from '@milkdown/core';\n\nexport class Paragraph extends Node {\n    id = 'paragraph';\n    schema = {\n        content: 'inline*',\n        group: 'block',\n        parseDOM: [{ tag: 'p' }],\n        toDOM: () => ['p', { class: 'paragraph' }, 0] as const,\n    };\n    override readonly parser: NodeParserSpec = {\n        match: (node) => node.type === this.id,\n        runner: (state, node, type) => {\n            state.openNode(type).next(node.children).closeNode();\n        },\n    };\n    override readonly serializer: NodeSerializerSpec = {\n        match: (node) => node.type.name === this.id,\n        runner: (state, node) => {\n            state.openNode('paragraph').next(node.content).closeNode();\n        },\n    };\n}\n```\n\n> You can also add `readonly override` for every properties to have a safer code.\n>\n> Such as `readonly override id: 'paragraph'`.\n\n---\n\n## Properties\n\n**Required.** There are 4 required properties and 3 optional properties need to be implemented by every node/mark.\n\n### id\n\n**Required.** The identifier of the node/mark, will be used as key of prosemirror schema.\n\n### schema\n\n**Required.** The prosemirror [schema](https://prosemirror.net/docs/ref/#model.Schema) specification of this node/mark.\n\n### parser\n\n**Required.** The parser specification, used to register the node/mark in parser.\n\n### serializer\n\n**Required.** The serializer specification, used to serialize the node/mark into string in serializer.\n\n### inputRules?\n\n**Optional.** The prosemirror [input rules](https://prosemirror.net/docs/ref/#inputrules.InputRule) this node/mark creates.\n\n### keymap?\n\n**Optional.** The prosemirror [key map](https://prosemirror.net/docs/ref/#keymap) this node/mark creates.\n\n### view?\n\n**Optional.** The prosemirror [node view](https://prosemirror.net/docs/ref/#view.NodeView) of this node/mark.\n\n---\n\n> You can find more examples in the official repositories like [preset-commonmark](https://github.com/Saul-Mirone/milkdown/tree/main/packages/preset-commonmark) and [plugin-table](https://github.com/Saul-Mirone/milkdown/tree/main/packages/plugin-table).\n"},{title:"Parser",link:"/parser",content:"# Parser\n\nParser is used to transform from markdown string to UI elements.\n\n## Transform Steps\n\nThe transformation will have following steps:\n\n1. The markdown string will be given to [remark-parse](https://github.com/remarkjs/remark/tree/main/packages/remark-parse) to compile into AST.\n2. The remark AST will be traversed by milkdown parser. The milkdown parser is generated by the parser property of nodes and marks and generate a prosemirror node tree as the result.\n3. The prosemirror node will rendered by prosemirror and generate the UI elements.\n\n## Example\n\nFor every node, there will be a parser specification which has the following structure:\n\n```typescript\nimport { NodeParserSpec, Node } from '@milkdown/core';\n\nclass MyNode extends Node {\n    // other props...\n    parser: NodeParserSpec = {\n        match: (node) => node.type === 'my-node',\n        runner: (state, node, type) => {\n            state.openNode(type).next(node.children).closeNode();\n        },\n    };\n}\n```\n\n## Parser Specification\n\nThe parser specification has 2 props:\n\n-   _match_: match the target remark node that need to be handled by this runner.\n\n-   _runner_: the function that transform the remark into prosemirror node, it has 3 parameters:\n\n    -   _state_: tools used to generate the prosemirror node.\n    -   _node_: the remark node that need to be handled.\n    -   _type_: the prosemirror _[nodeType](https://prosemirror.net/docs/ref/#model.NodeType)_ of current node,\n        defined by `schema` property of current node.\n\n## Parser State\n\nThe parser state is used to generate the prosemirror node,\nit provides several useful methods to make the transformation pretty simple.\n\nFirst of all, we should keep in mind that the tree we need to handle has following structure:\n\n```typescript\ninterface NodeTree {\n    type: string;\n    children: NodeTree[];\n    [x: string]: unknown;\n}\n```\n\nThen, it's easy to understand our state API.\n\n### openNode & closeNode\n\n`openNode` method will open a node, and all nodes created after this method will be set as the children of the node until a `closeNode` been called.\n\nYou can imagine `openNode` as the left half of parenthesis and `closeNode` as the right half. For nodes have children, your runner should just take care of the node itself and let other runners to handle the children.\n\nYou can pass the node's attributes as the second parameter for `openNode`.\n\n### addNode\n\n`addNode` means just add a node without open or close it. It's useful for nodes which don't have children.\n\nYou can pass the node's attributes as the second parameter.\n\n### next\n\n`next` give the node or node list back to the state and the state will find a proper runner (by `match` method) to handle it.\n\n### openMark & closeMark\n\nThese two APIs are pretty like `openNode` and `closeNode`, but just for marks.\n\nYou can pass the marks's attributes as the second parameter for `openMark`.\n"},{title:"Serializer",link:"/serializer",content:"# Serializer\n\nSerializer is used to transform from UI elements to markdown string.\n\n## Transform Steps\n\nThe transformation steps are almost opposite to the steps in parser.\n\n1. For the current UI status, there will be a prosemirror node tree to represent it.\n2. The prosemirror node tree will be traversed by milkdown serializer. The milkdown serializer is generated by the serializer property of nodes and marks and generate a remark AST as the result.\n3. The remark AST will by transformed into markdown string through [remark-stringify](https://github.com/remarkjs/remark/tree/main/packages/remark-stringify).\n\n## Example\n\nFor every node, there will be a serializer specification which has the following structure:\n\n```typescript\nimport { NodeSerializerSpec, Node } from '@milkdown/core';\n\nclass MyNode extends Node {\n    // other props...\n    serializer: NodeSerializerSpec = {\n        match: (node) => node.type.name === 'my-node',\n        runner: (state, node) => {\n            state.openNode('my-node').next(node.content).closeNode();\n        },\n    };\n}\n```\n\n## Serializer Specification\n\nThe serializer specification has 2 props:\n\n-   _match_: match the target prosemirror node that need to be handled by this runner.\n\n-   _runner_: the function that transform the prosemirror node into remark AST, it has 2 parameters:\n\n    -   _state_: tools used to generate the remark AST.\n    -   _node_: the prosemirror node that need to be handled.\n\n## Serializer State\n\nThe serializer state is used to generate the remark AST,\nit provides several useful methods to make the transformation pretty simple.\n\n### openNode & closeNode\n\n`openNode` method will open a node, and all nodes created after this method will be set as the children of the node until a `closeNode` been called.\n\nYou can imagine `openNode` as the left half of parenthesis and `closeNode` as the right half. For nodes have children, your runner should just take care of the node itself and let other runners to handle the children.\n\nParameters:\n\n-   _type_: the type of the AST.\n-   _value_: the value of the remark AST.\n-   _props_: the properties of the AST.\n\nThe props will be spread, for example:\n\n```typescript\nopenNode('my-node', undefined, { foo: true, bar: 0 });\n// will generate:\nconst generatedCode = {\n    type: 'my-node',\n    foo: true,\n    bar: 0,\n    children: [\n        /* some children */\n    ],\n};\n```\n\n### addNode\n\n`addNode` means just add a node without open or close it. It's useful for nodes which don't have content.\n\nParameters:\n\n-   _type_: the type of the AST.\n-   _children_: a markdown node list as the children of the AST.\n-   _value_: the value of the remark AST.\n-   _props_: the properties of the AST.\n\n### next\n\n`next` give the node or node list back to the state and the state will find a proper runner (by `match` method) to handle it.\n\n### withMark\n\n`withMark` is used when current node has marks, the serializer will auto combine marks nearby.\n\nParameters:\n\n-   _mark_: the mark of current node.\n-   _type_: the type of the AST.\n-   _value_: the value of the remark AST.\n-   _props_: the properties of the AST.\n"},{title:"Example: Custom Syntax",link:"/example-custom-syntax",content:"# Example: Custom Syntax\n\nGenerally, if we want to add a custom syntax, there are 5 things need to be done:\n\n1. Add a remark plugin to make sure the syntax can be parsed and serialized correctly.\n2. Define the prosemirror schema for your custom node.\n3. Write a parser specification to transform the remark AST into prosemirror node.\n4. Write a serializer specification to transform the prosemirror node into remark AST.\n5. Write prosemirror input rules to make sure user input can be handled correctly.\n\n---\n\nIn this section, we will add a **custom iframe syntax** to insert iframe as node in milkdown.\n\n## Remark Plugin\n\nFirst, we need a remark plugin to support our custom syntax.\nLuckily, remark provides a powerful [remark directive plugin](https://github.com/remarkjs/remark-directive) to support custom syntax. With this plugin, we can easily define a iframe using following text:\n\n```markdown\n# My Iframe\n\n:iframe{src=\"https://saul-mirone.github.io\"}\n```\n\nSo, what we needs to do is just install it and transform it into a milkdown plugin:\n\n```typescript\nimport { createRemarkPlugin } from '@milkdown/core';\nimport directive from 'remark-directive';\n\nconst directiveRemarkPlugin = createRemarkPlugin('iframe-remark-plugin', () => [directive]);\n```\n\n## Define Schema\n\nNext, we need to define the schema of an iframe node,\nour iframe should be an inline node because it doesn't have and children,\nand have a `src` attribute to connect to the source.\n\n```typescript\nimport type { NodeSpec, NodeType } from 'prosemirror-model';\nimport { Node } from '@milkdown/core';\n\nclass Iframe extends Node {\n    override readonly id = 'iframe';\n    override readonly schema: NodeSpec = {\n        inline: true,\n        attrs: {\n            src: { default: null },\n        },\n        group: 'inline',\n        marks: '',\n        parseDOM: [\n            {\n                tag: 'iframe',\n                getAttrs: (dom) => {\n                    if (!(dom instanceof HTMLElement)) {\n                        throw new Error();\n                    }\n                    return {\n                        src: dom.getAttribute('src'),\n                    };\n                },\n            },\n        ],\n        toDOM: (node) => ['iframe', { ...node.attrs, class: 'iframe' }, 0],\n    };\n}\n```\n\n## Parser\n\nThen, we need to add a parser specification to transform remark AST to prosemirror node.\nYou can use some inspect tools to find out the remark AST structure,\nwe noticed that the iframe node have following structure:\n\n```typescript\nconst AST = {\n    name: 'iframe',\n    attributes: { src: 'https://saul-mirone.github.io' },\n    type: 'textDirective',\n};\n```\n\nSo we can easily write our parser specification for it:\n\n```typescript\nimport { Node, NodeParserSpec } from '@milkdown/core';\n\nclass Iframe extends Node {\n    // ...\n    override readonly parser: NodeParserSpec = {\n        match: (node) => node.type === 'textDirective' && node.name === 'iframe',\n        runner: (state, node, type) => {\n            state.addNode(type, { src: (node.attributes as { src: string }).src });\n        },\n    };\n}\n```\n\nNow, text in `defaultValue` can be parsed to iframe elements correctly.\n\n## Serializer\n\nThen, we need to add a serializer specification to transform prosemirror node to remark AST:\n\n```typescript\nimport { Node, NodeSerializerSpec } from '@milkdown/core';\n\nclass Iframe extends Node {\n    // ...\n    override readonly serializer: NodeSerializerSpec = {\n        match: (node) => node.type.name === this.id,\n        runner: (state, node) => {\n            state.addNode('textDirective', undefined, undefined, {\n                name: 'iframe',\n                attributes: {\n                    src: node.attrs.src,\n                },\n            });\n        },\n    };\n}\n```\n\nNow, iframe elements can be serialized into string correctly.\n\n## Input Rule\n\nFor user input texts that should be transformed into iframe, we also should make it work.\nWe can use `inputRules` to define [prosemirror input rules](https://prosemirror.net/docs/ref/#inputrules) to implement this:\n\n```typescript\nimport { Node } from '@milkdown/core';\nimport { InputRule } from 'prosemirror-inputrules';\n\nclass Iframe extends Node {\n    // ...\n    override readonly inputRules = (nodeType: NodeType) => [\n        new InputRule(/:iframe\\{src\\=\"(?<src>[^\"]+)?\"?\\}/, (state, match, start, end) => {\n            const [okay, src = ''] = match;\n            const { tr } = state;\n            if (okay) {\n                tr.replaceWith(start, end, nodeType.create({ src }));\n            }\n\n            return tr;\n        }),\n    ];\n}\n```\n\n## Use Plugins\n\nThen, we can just `use` the plugins we write:\n\n```typescript\nimport { Editor } from '@milkdown/core';\nimport { commonmark } from '@milkdown/preset-commonmark';\n\nnew Editor({\n    defaultValue: '',\n    root: document.body,\n    listener: {\n        markdown: [(x) => console.log(x())],\n    },\n})\n    .use([directiveRemarkPlugin, new Iframe()])\n    .use(commonmark)\n    .create();\n```\n\n---\n\n## Full Code\n\n```typescript\nimport { NodeSpec, NodeType } from 'prosemirror-model';\nimport { createRemarkPlugin, Editor, Node, NodeParserSpec, NodeSerializerSpec } from '@milkdown/core';\nimport { commonmark } from '@milkdown/preset-commonmark';\nimport { InputRule } from 'prosemirror-inputrules';\n\nimport directive from 'remark-directive';\n\nconst directiveRemarkPlugin = createRemarkPlugin('iframe-remark-plugin', () => [directive]);\n\nclass Iframe extends Node {\n    override readonly id = 'iframe';\n    override readonly schema: NodeSpec = {\n        inline: true,\n        attrs: {\n            src: { default: null },\n        },\n        group: 'inline',\n        marks: '',\n        atom: true,\n        parseDOM: [\n            {\n                tag: 'iframe',\n                getAttrs: (dom) => {\n                    if (!(dom instanceof HTMLElement)) {\n                        throw new Error();\n                    }\n                    return {\n                        src: dom.getAttribute('src'),\n                    };\n                },\n            },\n        ],\n        toDOM: (node) => ['iframe', { ...node.attrs, class: 'iframe' }, 0],\n    };\n    override readonly parser: NodeParserSpec = {\n        match: (node) => {\n            return node.type === 'textDirective' && node.name === 'iframe';\n        },\n        runner: (state, node, type) => {\n            console.log(node);\n            state.addNode(type, { src: (node.attributes as { src: string }).src });\n        },\n    };\n    override readonly serializer: NodeSerializerSpec = {\n        match: (node) => node.type.name === this.id,\n        runner: (state, node) => {\n            state.addNode('textDirective', undefined, undefined, {\n                name: 'iframe',\n                attributes: {\n                    src: node.attrs.src,\n                },\n            });\n        },\n    };\n    override readonly inputRules = (nodeType: NodeType) => [\n        new InputRule(/:iframe\\{src\\=\"(?<src>[^\"]+)?\"?\\}/, (state, match, start, end) => {\n            const [okay, src = ''] = match;\n            const { tr } = state;\n            if (okay) {\n                tr.replaceWith(start, end, nodeType.create({ src }));\n            }\n\n            return tr;\n        }),\n    ];\n}\n\nconst defaultValue = `\n# Custom Syntax\n\n:iframe{src=\"https://saul-mirone.github.io/milkdown/\"}\n`;\n\nnew Editor({\n    defaultValue,\n    root: document.getElementById('app')!,\n    listener: {\n        markdown: [(x) => console.log(x())],\n    },\n})\n    .use([directiveRemarkPlugin, new Iframe()])\n    .use(commonmark)\n    .create();\n```\n"}]},{title:"Architecture",items:[{title:"Core",link:"/core",content:"# Core\n\nMilkdown core is composed mainly by three parts:\n\n-   Markdown Parser\n-   Markdown Serializer\n-   Prosemirror\n\n---\n\n## Markdown Parser\n\n> The parser can **transform a markdown string into a prosemirror node tree**.\n\nIt is mainly used by transforming the default value, and can be used in features like paste markdown strings.\n\nThe parser will parse the markdown strings into ast by [remark](https://github.com/remarkjs/remark),\nand transform the ast into the prosemirror node.\n\n## Markdown Serializer\n\n> The serializer can **transform a prosemirror node into a markdown string**.\n\nIt is mainly used by listeners, and can be used in features like export to file.\nThe serializer will parse the prosemirror node tree and transform it into markdown ast,\nthen the ast can be serialized into markdown string.\n\n## Prosemirror\n\n> Prosemirror is **used for render editor**.\n\nWhen users interact with the editor, they actually interact with the [prosemirror view instance](https://prosemirror.net/docs/guide/#view).\n\n---\n\nSo basically,\na milkdown editor works following these steps:\n\n1. Default value is parsed by parser, generates a node.\n2. Node generated by step 1 will be used to create a prosemirror instance.\n3. When changes are triggered, the listeners will be called and developers can use serializer to get markdown string.\n"},{title:"Atom",link:"/atom",content:"# Atom\n\nIn the world of milkdown, everything are `Atom`s.\nThe only thing the core part of milkdown do is execute these atoms one by one.\n\nAtom has the shape of the following structure:\n\n```typescript\nclass Atom {\n    id: string;\n    loadAfter: LoadState;\n    main() {\n        const currentCtx = this.context;\n        const myCtx = myHandler(currentCtx);\n        this.updateContext(myCtx);\n    }\n}\n```\n\nEvery atom should implement 2 props and 1 method:\n\n## id\n\nThe identifier of current atom. It must have no conflict with other atoms.\n\n## loadAfter\n\nThe timing that current atom need to be loaded.\n\n## main\n\nA method that will be executed when current atom is loaded, in this method, you can use 2 props on `this`:\n\n-   this.context: readonly property, get the current context of the editor.\n-   this.updateContext: used to update the context of the editor.\n"},{title:"Ordering",link:"/ordering",content:"# Ordering\n\nAs we mentioned before, milkdown core will load atoms one by one.\nThe order of the atoms loaded matters.\n\nWe have defined a `LoadState` enum so Atoms can be loaded **after the pointed loadState**.\nYou can access certain properties in context during the given load state.\n\n**Generally speaking, there is no need for you to set the load state of an atom,\nwe have provide some utilities for users to create certain types of atoms.**\n\n---\n\n## LoadState\n\nThe `LoadState` enum has following values:\n\n### 1. Idle:\n\nThis state means the editor is preparing, nothing has been loaded.\n\nProperty in context that available at this moment:\n\n-   _loadState_: Current load status.\n-   _remark_: The remark parser instance.\n-   _nodes_: The nodes has been loaded at this moment.\n-   _marks_: The marks has been loaded at this moment.\n\n### 2. LoadSchema:\n\nThis state means the editor is ready to generate the schema.\n\nProperty in context that available at this moment:\n\n-   All properties available in Idle.\n\n### 3. SchemaReady:\n\nThis state means the editor has generated the schema.\n\nProperty in context that available at this moment:\n\n-   All properties available in LoadSchema.\n-   _schema_: The generated schema.\n-   _parser_: The markdown parser generated by schema.\n-   _serializer_: The markdown serializer generated by schema.\n-   _keymap_: The keymap generated by schema.\n-   _inputRules_: The inputRules generated by schema.\n-   _nodeViews_: The nodeViews generated by schema.\n\n### 4. LoadPlugin:\n\nThis state means the editor is ready to load prosemirror plugin.\n\nProperty in context that available at this moment:\n\n-   All properties available in SchemaReady.\n-   _prosemirrorPlugins_: The prosemirror plugins to be loaded.\n\n### 5. Complete:\n\nThis state means the editor has fully loaded.\n\nProperty in context that available at this moment:\n\n-   All properties available in LoadPlugin.\n-   _editorView_: The view instance of prosemirror.\n"}]}];var Mr={body:"_body_oicfp_1",right:"_right_oicfp_6",main:"_main_oicfp_11",container:"_container_oicfp_17",homepage:"_homepage_oicfp_43"};var Er={footer:"_footer_7hn2r_1",homepage:"_homepage_7hn2r_11"};const Nr=()=>{const[e]=lr(),t=[Er.footer,e===ir.Home?Er.homepage:""].join(" ");return i.createElement("footer",{className:t},"MIT Licensed | Copyright © 2021-present Mirone ♡ Meo")},_r=xr.flatMap((e=>e.items)),Sr=({setScrolled:e,isDarkMode:t,editorMode:n})=>{const o=i.useRef(null),[r]=lr(),s=[Mr.container,r===ir.Home?Mr.homepage:""].join(" ");return i.useEffect((()=>{if(!o.current)return;const{current:t}=o,n=t=>{const{target:n}=t;if(!(n instanceof HTMLDivElement))return;const{scrollTop:o}=n;e(o>0)};return t.addEventListener("scroll",n),()=>{t.removeEventListener("scroll",n)}}),[e]),i.createElement("div",{ref:o,className:s},i.createElement("article",null,i.createElement(_e,null,i.createElement(Se,{exact:!0,path:"/"},i.createElement(De,null)),i.createElement(Se,{exact:!0,path:"/online-demo"},i.createElement(ur,{mode:n,content:"# Milkdown\n\n![logo](https://preview.redd.it/us7w1x2zx8461.jpg?auto=webp&s=077a73d5c08aec0bc0fb48c5e5be40c928467bb6)\n\n> Milkdown is a WYSIWYG markdown editor.\n>\n> Here is the [repo](https://github.com/Saul-Mirone/milkdown) (_right click to open link_).\n> We ~~only support commonmark~~. GFM is also supported!.\n\nYou can check the output markdown text in **developer tool**.\n\n-   Features\n    -   [x] 📝 **WYSIWYG Markdown** - Write markdown in an elegant way\n    -   [x] 🎨 **Themable** - Theme can be shared and used with npm packages\n    -   [x] 🎮 **Hackable** - Support your awesome idea by plugin\n    -   [x] 🦾 **Reliable** - Built on top of [prosemirror](https://prosemirror.net/) and [remark](https://github.com/remarkjs/remark)\n    -   [x] ⚡️ **Slash & Tooltip** - Write fast for everyone, driven by plugin\n    -   [x] 🧮 **Math** - LaTeX math equations support, driven by plugin\n    -   [x] 📊 **Table** - Table support with fluent ui, driven by plugin\n-   Made by\n    -   Programmer: [Mirone](https://github.com/Saul-Mirone)\n    -   Designer: [Meo](https://github.com/Saul-Meo)\n\n---\n\nYou can add `inline code` and code block:\n\n```javascript\nfunction main() {\n    console.log('Hello milkdown!');\n}\n```\n\n---\n\nYou can type `||` and a `space` to create a table:\n\n| First Header   |   Second Header    |\n| -------------- | :----------------: |\n| Content Cell 1 |  `Content` Cell 1  |\n| Content Cell 2 | **Content** Cell 2 |\n\n---\n\nMath is supported by [TeX expression](https://en.wikipedia.org/wiki/TeX).\n\nNow we have some inline math: $V \\times W \\stackrel{\\otimes}{\\rightarrow} V \\otimes W$. You can click to edit it.\n\nMath block is also supported.\n\n$$\n\\begin{aligned}\nT( (v_1 + v_2) \\otimes w) &= T(v_1 \\otimes w) + T(v_2 \\otimes w) \\\\\nT( v \\otimes (w_1 + w_2)) &= T(v \\otimes w_1) + T(v \\otimes w_2) \\\\\nT( (\\alpha v) \\otimes w ) &= T( \\alpha ( v \\otimes w) ) \\\\\nT( v \\otimes (\\alpha w) ) &= T( \\alpha ( v \\otimes w) ) \\\\\n\\end{aligned}\n$$\n\nYou can type `$$` and a `space` to create a math block.\n\n---\n\nHave fun!\n",isDarkMode:t})),_r.map(((e,t)=>i.createElement(Se,{key:t.toString(),path:e.link},i.createElement(nr,{content:e.content,readOnly:!0})))))),i.createElement(Nr,null))},Cr=()=>{const[e,t]=i.useState(!1),[n,o]=i.useState(!1),[r,s]=i.useState(cr.Default),[a,d]=i.useState(!1);return i.createElement(Ne,null,i.createElement("div",{className:Mr.body},i.createElement(br,{display:e,setDisplay:t,sections:xr}),i.createElement("div",{className:Mr.right},i.createElement(kr,{isDarkMode:a,setIsDarkMode:d,onEditorModeToggle:()=>s(r===cr.Default?cr.TwoSide:cr.Default),onToggle:()=>t(!e),scrolled:n,editorMode:r}),i.createElement("main",{className:Mr.main,onClick:()=>{document.documentElement.clientWidth<1080&&t(!1)}},i.createElement(Sr,{isDarkMode:a,setScrolled:o,editorMode:r})))))};const Tr=document.getElementById("app");x.exports.render(i.createElement(Cr,null),Tr);

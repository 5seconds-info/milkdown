var e=Object.defineProperty,t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,r=(t,n,o)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[n]=o,i=(e,i)=>{for(var a in i||(i={}))n.call(i,a)&&r(e,a,i[a]);if(t)for(var a of t(i))o.call(i,a)&&r(e,a,i[a]);return e};import{R as a,L as s,c as l,_ as d,r as c,f as m,S as u,a as p,M as h,k as f,E as g,b as w,i as k,D as v,N as y,d as b,e as x,g as M,I as E,h as C,j as _,P as N,l as T,m as S,t as A,T as P,C as L,n as O,o as R,p as j,q as D,s as I,u as W,v as z,w as $,x as H,y as V,z as F,A as B,B as K,F as q,G as Y,H as U,J as G,K as J,O as X,Q as Z,U as Q,V as ee,W as te,X as ne,Y as oe,Z as re,$ as ie,a0 as ae,a1 as se,a2 as le,a3 as de,a4 as ce,a5 as me,a6 as ue,a7 as pe,a8 as he,a9 as fe,aa as ge,ab as we,ac as ke,ad as ve,ae as ye,af as be,ag as xe,ah as Me,ai as Ee,aj as Ce,ak as _e,al as Ne,am as Te,an as Se,ao as Ae,ap as Pe,aq as Le}from"./vendor.6bed6f56.js";var Oe="_body_1x6mg_1",Re="_main_1x6mg_10",je="_content_1x6mg_19",De="_container_1x6mg_29",Ie="_title_1x6mg_40",We="_desc_1x6mg_49",ze="_logo_1x6mg_57",$e="_buttons_1x6mg_64",He="_curve_1x6mg_99";const Ve=()=>a.createElement("section",{className:Oe},a.createElement("section",{className:Re},a.createElement("div",{className:De},a.createElement("div",{className:je},a.createElement("h1",{className:Ie},"Milkdown"),a.createElement("p",{className:We},"Plugin Based WYSIWYG Markdown Editor"),a.createElement("section",{className:$e},a.createElement(s,{to:"/getting-started"},"Get Started"),a.createElement(s,{to:"/online-demo"},"Online Demo"))),a.createElement("section",{className:ze},a.createElement("img",{src:"/milkdown/milkdown-homepage.svg"})))),a.createElement("div",{className:He},a.createElement("svg",{viewBox:"0 0 1152 73"},a.createElement("path",{d:"M99.0331 0.252716C59.2655 0.284556 0 25.2197 0 25.2197V0.252716H99.0331C99.0585 0.252696 99.0839 0.252686 99.1093 0.252686C99.1538 0.252686 99.1982 0.252696 99.2427 0.252716H1152V73C1018.73 21.6667 957.818 24.4226 819.692 22.7693C672.54 21.008 573.085 73 427.919 73C308.414 73 218.068 0.307089 99.2427 0.252716H99.0331Z"})))),Fe=e=>{const t=Symbol("Context"),n=(n,o=l(e))=>{let r=o;const i={id:t,set:e=>{r=e},get:()=>r,update:e=>{r=e(r)}};return n.set(t,i),i};return n.id=t,n._typeInfo=()=>{throw new Error("Should not call a context.")},n},Be=(e,t=3e3)=>{const n=Symbol("Timer"),o=o=>{const r=Symbol(e),i=()=>new Promise(((n,o)=>{setTimeout((()=>{o(`Timing ${e} timeout.`)}),t),addEventListener(e,(e=>{e instanceof CustomEvent&&e.detail.id===r&&n(void 0)}))}));return i.done=()=>{const t=new CustomEvent(e,{detail:{id:r}});dispatchEvent(t)},o.set(n,i),i};return o.id=n,o},Ke=Be("Config"),qe=Fe([]),Ye=e=>()=>t=>{t.update(qe,(t=>t.concat([e].flat())))},Ue=Fe([]),Ge=e=>()=>t=>{t.update(Ue,(t=>t.concat([e].flat())))},Je=Be("Initialize"),Xe=Fe([]),Ze=Fe({}),Qe=Fe(c()),et=Be("schemaReady"),tt=Fe({}),nt=Fe([]),ot=Fe([]),rt=Fe([]),it=e=>(e.inject(tt).inject(nt).inject(ot).inject(rt,[Je]).record(et),e=>d(void 0,void 0,void 0,(function*(){yield e.waitTimers(rt);const t=e=>m(e.map((({id:e,schema:t})=>[e,t]))),n=t(e.get(nt)),o=t(e.get(ot));e.set(tt,new u({nodes:n,marks:o})),e.done(et)})));var at,st,lt;class dt{constructor(e,t,n){this.stack=e,this.schema=t,this.specMap=n,at.add(this),this.run=(e,t)=>{const n=e.parse(t);return this.next(n),this},this.injectRoot=(e,t,n)=>(this.stack.openNode(t,n),this.next(e.children),this),this.addText=(e="")=>(this.stack.addText((t=>this.schema.text(e,t))),this),this.addNode=(...e)=>(this.stack.addNode(...e),this),this.openNode=(...e)=>(this.stack.openNode(...e),this),this.closeNode=(...e)=>(this.stack.closeNode(...e),this),this.openMark=(...e)=>(this.stack.openMark(...e),this),this.closeMark=(...e)=>(this.stack.closeMark(...e),this),this.toDoc=()=>this.stack.build(),this.next=(e=[])=>([e].flat().forEach((e=>p(this,at,"m",lt).call(this,e))),this)}}at=new WeakSet,st=function(e){const t=Object.values(this.specMap).find((t=>t.match(e)));if(!t)throw new Error;return t},lt=function(e){const{key:t,runner:n,is:o}=p(this,at,"m",st).call(this,e);n(this,e,this.schema["node"===o?"nodes":"marks"][t])};const ct=e=>e.isText,mt=(e,t,n)=>t[n?"nodes":"marks"][e],ut=()=>{const e=e=>e.elements.length,t=t=>t.elements[e(t)-1];return{size:e,top:t,push:e=>n=>{var o;return null===(o=t(e))||void 0===o?void 0:o.push(n)},open:e=>t=>e.elements.push(t),close:e=>{const t=e.elements.pop();if(!t)throw new Error;return t}}},{size:pt,push:ht,top:ft,open:gt,close:wt}=ut(),kt=e=>(t,n)=>gt(e)(((e,t,n)=>{const o={type:e,content:t,attrs:n,push:(...e)=>((e,t,...n)=>{e.content.push(t,...n)})(o,...e),pop:()=>(e=>e.content.pop())(o)};return o})(t,[],n)),vt=e=>(t,n,o)=>{const r=t.createAndFill(n,o,e.marks);if(!r)throw new Error;return ht(e)(r),r},yt=e=>()=>{e.marks=h.none;const t=wt(e);return vt(e)(t.type,t.attrs,t.content)},bt=e=>(t,n)=>{const o=t.create(n);e.marks=o.addToSet(e.marks)},xt=e=>t=>{e.marks=t.removeFromSet(e.marks)},Mt=e=>t=>{const n=ft(e);if(!n)throw new Error;const o=n.pop(),r=t(e.marks);if(!o)return void n.push(r);const i=((e,t)=>{if(ct(e)&&ct(t)&&h.sameSet(e.marks,t.marks))return e.withText(e.text+t.text)})(o,r);i?n.push(i):n.push(o,r)},Et=e=>()=>{let t=null;do{t=yt(e)()}while(pt(e));return t};function Ct(e,t,n){return o=>{const r=new dt((()=>{const e={marks:[],elements:[]};return{build:Et(e),openMark:bt(e),closeMark:xt(e),addText:Mt(e),openNode:kt(e),addNode:vt(e),closeNode:yt(e)}})(),e,t);return r.run(n,o),r.toDoc()}}const _t=Fe((()=>null)),Nt=Fe([]),Tt=Be("ParserReady"),St=e=>(e.inject(_t).inject(Nt,[et]).record(Tt),e=>d(void 0,void 0,void 0,(function*(){yield e.waitTimers(Nt);const t=e.get(nt),n=e.get(ot),o=e.get(Qe),r=e.get(tt),i=[...t.map((e=>Object.assign(Object.assign({},e),{is:"node"}))),...n.map((e=>Object.assign(Object.assign({},e),{is:"mark"})))],a=m(i.map((({id:e,parser:t,is:n})=>[e,Object.assign(Object.assign({},t),{is:n,key:e})])));e.set(_t,Ct(r,a,o)),e.done(Tt)}))),At=(e,t,n,o={})=>{const r={type:e,children:t,props:o,value:n,push:(...e)=>((e,t,...n)=>{e.children||(e.children=[]),e.children.push(t,...n)})(r,...e),pop:()=>(e=>{var t;return null===(t=e.children)||void 0===t?void 0:t.pop()})(r)};return r},{size:Pt,push:Lt,top:Ot,open:Rt,close:jt}=ut(),Dt=e=>(t,n,o)=>Rt(e)(At(t,[],n,o)),It=e=>(t,n,o,r)=>{const i=(e=>{const t=Object.assign(Object.assign({},e.props),{type:e.type});return e.children&&(t.children=e.children),e.value&&(t.value=e.value),t})(At(t,n,o,r));return Lt(e)(i),i},Wt=e=>()=>{const t=jt(e);return It(e)(t.type,t.children,t.value,t.props)},zt=e=>(t,n,o,r)=>{t.isInSet(e.marks)||(e.marks=t.addToSet(e.marks),Dt(e)(n,o,r))},$t=e=>t=>t.isInSet(e.marks)?(e.marks=t.type.removeFromSet(e.marks),Wt(e)()):null,Ht=e=>()=>{let t=null;do{t=Wt(e)()}while(Pt(e));return t};var Vt,Ft,Bt,Kt,qt;class Yt{constructor(e,t,n){this.stack=e,this.schema=t,this.specMap=n,Vt.add(this),this.next=e=>{return t=e,Object.prototype.hasOwnProperty.call(t,"size")?(e.forEach((e=>{p(this,Vt,"m",qt).call(this,e)})),this):(p(this,Vt,"m",qt).call(this,e),this);var t},this.addNode=(...e)=>(this.stack.addNode(...e),this),this.openNode=(...e)=>(this.stack.openNode(...e),this),this.closeNode=(...e)=>(this.stack.closeNode(...e),this),this.toString=e=>e.stringify(this.stack.build()),this.withMark=(...e)=>(this.stack.openMark(...e),this)}run(e){return this.next(e),this}}function Ut(e,t,n){return o=>{const r=new Yt((()=>{const e={marks:[],elements:[]};return{build:Ht(e),openMark:zt(e),closeMark:$t(e),openNode:Dt(e),addNode:It(e),closeNode:Wt(e),top:()=>Ot(e)}})(),e,t);return r.run(o),r.toString(n)}}Vt=new WeakSet,Ft=function(e){const t=Object.entries(this.specMap).map((([e,t])=>Object.assign({key:e},t))).find((t=>t.match(e)));if(!t)throw new Error;return t},Bt=function(e){const{runner:t}=p(this,Vt,"m",Ft).call(this,e);t(this,e)},Kt=function(e,t){const{runner:n}=p(this,Vt,"m",Ft).call(this,e);return n(this,e,t)},qt=function(e){const{marks:t}=e;t.every((t=>!p(this,Vt,"m",Kt).call(this,t,e)))&&p(this,Vt,"m",Bt).call(this,e),t.forEach((e=>this.stack.closeMark(e)))};const Gt=Fe((()=>"")),Jt=Fe([]),Xt=Be("SerializerReady"),Zt=e=>(e.inject(Gt).inject(Jt,[et]).record(Xt),e=>d(void 0,void 0,void 0,(function*(){yield e.waitTimers(Jt);const t=e.get(nt),n=e.get(ot),o=e.get(Qe),r=e.get(tt),i=[...t,...n],a=m(i.map((e=>[e.id,e.serializer])));e.set(Gt,Ut(r,a,o)),e.done(Xt)}))),Qt=Fe([]),en=Fe([]),tn=Be("KeymapReady"),nn=e=>(e.inject(Qt).inject(en,[et]).record(tn),e=>d(void 0,void 0,void 0,(function*(){yield e.waitTimers(en);const t=e.get(nt),n=e.get(ot),o=e.get(tt),r=(e,t)=>e.map((e=>[mt(e.id,o,t),e.keymap])).map((([e,t])=>e&&(null==t?void 0:t(e,o)))).filter((e=>!!e)).map(f),i=[...r(t,!0),...r(n,!1)];e.set(Qt,i),e.done(tn)}))),on=Fe([]),rn=Fe([]),an=Be("InputRulesReady"),sn=e=>(e.inject(on).inject(rn,[et]).record(an),e=>d(void 0,void 0,void 0,(function*(){yield e.waitTimers(rn);const t=e.get(nt),n=e.get(ot),o=e.get(tt),r=(e,t)=>e.map((e=>[mt(e.id,o,t),e.inputRules])).flatMap((([e,t])=>e&&(null==t?void 0:t(e,o)))).filter((e=>!!e)),i=[...r(t,!0),...r(n,!1)];e.set(on,i),e.done(an)}))),ln=Fe({}),dn=Fe([]),cn=Be("NodeViewReady"),mn=e=>(e.inject(ln).inject(dn,[et]).record(cn),e=>d(void 0,void 0,void 0,(function*(){yield e.waitTimers(dn);const t=e.get(nt),n=e.get(ot),o=e.get(tt),r=e.get(Ze),i=(e,t)=>e.map((({id:e,view:n})=>[mt(e,o,t),{view:n,id:e}])).map((([e,{id:t,view:n}])=>e&&n?[t,(...t)=>n(r,e,...t)]:void 0)).filter((e=>!!e)),a=i(t,!0),s=i(n,!1),l=m([...a,...s]);e.set(ln,l),e.done(cn)}))),un=Fe(""),pn=Fe({}),hn=Fe({}),fn=Fe([]),gn=Be("EditorStateReady"),wn=(e,t,n)=>{if("string"==typeof e)return t(e);if("html"===e.type)return v.fromSchema(n).parse(e.dom);if("json"===e.type)return y.fromJSON(n,e.value);throw new Error},kn=e=>(e.inject(un).inject(pn).inject(hn).inject(fn,[tn,an,Tt,Xt]).record(gn),e=>d(void 0,void 0,void 0,(function*(){yield e.waitTimers(fn);const t=e.get(tt),n=e.get(_t),o=e.get(on),r=e.get(Qt),i=e.get(hn),a=e.get(qe),s=e.get(un),l=g.create(Object.assign({schema:t,doc:wn(s,n,t),plugins:[...r,...a,f(w),k({rules:o})]},i));e.set(pn,l),e.done(gn)}))),vn=Fe({}),yn=Fe({}),bn=Fe(document.body),xn=Fe([]),Mn=Be("complete"),En=e=>(e.inject(bn,document.body).inject(vn).inject(yn).inject(xn,[gn,cn]).record(Mn),e=>d(void 0,void 0,void 0,(function*(){yield e.waitTimers(xn);const t=e.get(pn),n=e.get(yn),o=e.get(ln),r=e.get(bn),i=r?(e=>{const t=document.createElement("div");return t.className="milkdown",e.appendChild(t),t})(r):void 0,a=new b(i,Object.assign({state:t,nodeViews:o},n));var s;(s=a.dom).classList.add("editor"),s.setAttribute("role","textbox"),e.set(vn,a),e.done(Mn)})));var Cn,_n,Nn,Tn,Sn,An,Pn;class Ln{constructor(){Cn.set(this,(()=>{const e=new Map;return{getCtx:t=>{const n=e.get(t.id);if(!n)throw new Error;return n},contextMap:e}})()),_n.set(this,(()=>{const e=new Map;return{store:e,get:t=>{const n=e.get(t.id);if(!n)throw new Error;return n}}})()),Nn.set(this,{use:p(this,Cn,"f").getCtx,get:e=>p(this,Cn,"f").getCtx(e).get(),set:(e,t)=>p(this,Cn,"f").getCtx(e).set(t),update:(e,t)=>p(this,Cn,"f").getCtx(e).update(t),wait:e=>p(this,_n,"f").get(e)(),done:e=>p(this,_n,"f").get(e).done(),waitTimers:e=>d(this,void 0,void 0,(function*(){yield Promise.all(p(this,Nn,"f").get(e).map((e=>p(this,Nn,"f").wait(e))))}))}),Tn.set(this,new Set),this.inject=(e,t)=>(e(p(this,Cn,"f").contextMap,t),p(this,Sn,"f")),this.record=e=>(e(p(this,_n,"f").store),p(this,Sn,"f")),Sn.set(this,{inject:this.inject,record:this.record}),this.use=e=>([e].flat().forEach((e=>{p(this,Tn,"f").add(e(p(this,Sn,"f")))})),this),An.set(this,(()=>{const e=[it,St,Zt,mn,nn,sn,kn,En],t=(n=e=>d(this,void 0,void 0,(function*(){yield Promise.all(p(this,Pn,"f").map((t=>t(e))))})),e=>(e.record(Ke),e=>d(void 0,void 0,void 0,(function*(){yield n(e),e.done(Ke)}))));var n,o;this.use(e.concat((o=this,e=>(e.inject(Ze,o).inject(qe).inject(Ue).inject(Qe,c()).inject(Xe,[Ke]).record(Je),e=>d(void 0,void 0,void 0,(function*(){yield e.waitTimers(Xe);const t=e.get(Qe),n=e.get(Ue).reduce(((e,t)=>e.use(t)),t);e.set(Qe,n),e.done(Je)}))))).concat(t))})),this.create=()=>d(this,void 0,void 0,(function*(){return p(this,An,"f").call(this),yield Promise.all([...p(this,Tn,"f")].map((e=>e(p(this,Nn,"f"))))),this})),Pn.set(this,[]),this.config=e=>(p(this,Pn,"f").push(e),this),this.action=e=>e(p(this,Nn,"f"))}}Cn=new WeakMap,_n=new WeakMap,Nn=new WeakMap,Tn=new WeakMap,Sn=new WeakMap,An=new WeakMap,Pn=new WeakMap;const On=e=>(t,n)=>((e,t=!0)=>{const n=[];return e.descendants(((e,o)=>{if(n.push({node:e,pos:o}),!t)return!1})),n})(t,n).filter((t=>e(t.node))),Rn=e=>t=>{const{$from:n}=t;for(let o=n.depth;o>0;o--){const t=n.node(o);if(e(t))return{pos:o>0?n.before(o):0,start:n.start(o),depth:o,node:t}}},jn=e=>(t,n)=>{let o;const{from:r,to:i}=t;return n.nodesBetween(r,i,((t,n)=>{if(o)return!1;e(t)&&(o={node:t,pos:n})})),o},Dn=e=>Object.assign(Object.create(e),e).setTime(Date.now()),In=(e,t,n)=>{const o=e.state,{from:r}=o.selection,i=e.domAtPos(r).node;if(!(i instanceof HTMLElement))throw new Error;const a=i.getBoundingClientRect(),s=t.getBoundingClientRect(),[l,d]=n(a,s);t.style.top=l+"px",t.style.left=d+"px"},Wn=(e,t,n)=>{const o=e.state,{from:r,to:i}=o.selection,a=e.coordsAtPos(r),s=e.coordsAtPos(i),l=t.getBoundingClientRect(),[d,c]=n(a,s,l);t.style.top=d+"px",t.style.left=c+"px"},zn=e=>Object.entries(e).filter((e=>!!e)),$n=(e,t,n)=>{var o;return null!==(o=null==n?void 0:n[e])&&void 0!==o?o:t},Hn=(e,t)=>e.flatMap((e=>([t,{defaultKey:n,command:o}])=>[$n(t,n,e)].flat().map((e=>[e,o])))(t)),Vn=(e,t)=>e?x(e,zn,M(Hn)(t),Object.fromEntries):()=>({}),Fn=e=>{const t=n=>{const o=e(n,{getClassName:(e,t)=>{var o,r;return null!==(r=null===(o=null==n?void 0:n.className)||void 0===o?void 0:o.call(n,e))&&void 0!==r?r:t}}),r=Vn(o.commands,null==n?void 0:n.keymap),i=(a=Object.assign(Object.assign({},o),{keymap:r,view:null==n?void 0:n.view}),()=>e=>{e.update(ot,(e=>e.concat(a)))});var a;return i.origin=t,i};return t},Bn=e=>{const t=n=>{const o=e(n,{getClassName:(e,t)=>{var o,r;return null!==(r=null===(o=null==n?void 0:n.className)||void 0===o?void 0:o.call(n,e))&&void 0!==r?r:t}}),r=Vn(o.commands,null==n?void 0:n.keymap),i=(e=>()=>t=>{t.update(nt,(t=>t.concat(e)))})(Object.assign(Object.assign({view:null==n?void 0:n.view},o),{keymap:r}));return i.origin=t,i};return t};class Kn extends Array{configure(e,t){const n=this.findIndex((t=>t.origin===e));return n<0||this.splice(n,1,e(t)),this}static create(e){return new Kn(...e)}}function qn(e,t){return new E(e,((e,n,o,r)=>{const{tr:i}=e,a=n.length;let s=o,l=r;if(n[a-1]){const d=n[0],c=n[a-1],m=n[a-2],u=o+d.indexOf(m),p=u+m.length-1,h=u+m.lastIndexOf(c),f=h+c.length;if(function(e,t,n){let o=[];return n.doc.nodesBetween(e,t,((e,t)=>{o=[...o,...e.marks.map((n=>({start:t,end:t+e.nodeSize,mark:n})))]})),o}(o,r,e).filter((e=>e.mark.type.excludes(t))).filter((e=>e.end>u)).length)return null;f<p&&i.delete(f,p),h>u&&i.delete(u,h),s=u,l=s+c.length}return i.addMark(s,l,t.create()),i.removeStoredMark(t),i}))}const Yn=a.createContext({editor:void 0,node:void 0,view:void 0,getPos:void 0,decorations:void 0}),Un=({editor:e,node:t,view:n,getPos:o,decorations:r,children:i})=>a.createElement(Yn.Provider,{value:{editor:e,node:t,view:n,getPos:o,decorations:r}},i),Gn=({dom:e})=>{const t=a.useRef(null);return a.useEffect((()=>{const{current:n}=t;n&&e&&n.appendChild(e)}),[e]),a.createElement("div",{ref:t})};class Jn{constructor(e,t,n,o,r,i,a,s){this.component=e,this.addPortal=t,this.removePortalByKey=n,this.editor=o,this.node=r,this.view=i,this.getPos=a,this.decorations=s;const l=document.createElement("div"),d=r.isLeaf?null:document.createElement(r.isInline?"span":"div");d&&l.appendChild(d),this.dom=l,this.contentDOM=d,this.key=[1e7,-1e3,-4e3,-8e3,-1e11].map((e=>e.toString())).join("").replace(/[018]/g,(e=>(Number(e)^crypto.getRandomValues(new Uint8Array(1))[0]&15>>Number(e)/4).toString(16))),this.renderPortal()}renderPortal(){if(!this.dom)return;const e=this.component,t=C.exports.createPortal(a.createElement(Un,{editor:this.editor,node:this.node,view:this.view,getPos:this.getPos,decorations:this.decorations},a.createElement(e,null,a.createElement(Gn,{dom:this.contentDOM}))),this.dom,this.key);this.addPortal(t)}destroy(){this.dom=void 0,this.contentDOM=void 0,this.removePortalByKey(this.key)}ignoreMutation(e){return!this.contentDOM||!this.contentDOM.contains(e.target)}}const Xn=a.createContext((()=>()=>{throw new Error})),Zn=e=>e.map((e=>e.key)).join(","),Qn=a.memo((({portals:e})=>a.createElement(a.Fragment,null,e)),((e,t)=>Zn(e.portals)===Zn(t.portals))),eo=_.exports.forwardRef((({editor:e},t)=>{const n=(e=>{const t=a.useContext(Xn),n=a.useRef(null),o=a.useRef();return a.useEffect((()=>{if(n.current)return e(n.current,t).create().then((e=>{o.current=e})).catch(console.error),()=>{var e,t;const n=null===(e=o.current)||void 0===e?void 0:e.action((e=>e.get(vn)));n&&(null===(t=n.dom.parentElement)||void 0===t||t.remove(),n.destroy())}}),[e,t]),{div:n,editorRef:o}})(e);return _.exports.useImperativeHandle(t,(()=>({get:()=>n.editorRef.current}))),a.createElement("div",{ref:n.div})})),to=_.exports.forwardRef((({editor:e},t)=>{const[n,o]=a.useState([]),r=a.useCallback((e=>{o((t=>[...t,e]))}),[]),i=a.useCallback((e=>{o((t=>{const n=t.findIndex((t=>t.key===e));return[...t.slice(0,n),...t.slice(n+1)]}))}),[]),s=a.useCallback((e=>((e,t)=>n=>(o,r,i,a,s,l)=>new Jn(n,e,t,o,i,a,s,l))(r,i)(e)),[r,i]);return a.createElement(Xn.Provider,{value:s},a.createElement(Qn,{portals:n}),a.createElement(eo,{ref:t,editor:e}))})),no=Fe({}),oo=e=>(e.inject(no),e=>d(void 0,void 0,void 0,(function*(){yield e.wait(Xt);const t=e.get(no),n=e.get(Gt),o=new N({state:{init:()=>{},apply:e=>{var o,r;e.docChanged&&(null===(o=t.markdown)||void 0===o||o.forEach((t=>{t((()=>n(e.doc)))})),null===(r=t.doc)||void 0===r||r.forEach((t=>{t(e.doc)})))}}});e.update(qe,(e=>e.concat(o)))}))),ro=e=>Rn((e=>"table"===e.type.spec.tableRole))(e),io=(e,t=3,n=3)=>{const{cell:o,header_cell:r,row:i,table:a}=A(e),s=Array(n).fill(0).map((()=>o.createAndFill(null))),l=Array(n).fill(0).map((()=>r.createAndFill(null))),d=Array(t).fill(0).map(((e,t)=>i.create(null,0===t?l:s)));return a.create(null,d)},ao=e=>t=>n=>{const o=ro(n.selection),r="row"===e;if(o){const e=P.get(o.node);if(t>=0&&t<(r?e.height:e.width)){const i=e.positionAt(r?t:e.height-1,r?e.width-1:t,o.node),a=n.doc.resolve(o.start+i),s=r?L.rowSelection:L.colSelection,l=e.positionAt(r?t:0,r?0:t,o.node),d=n.doc.resolve(o.start+l);return Dn(n.setSelection(s(a,d)))}}return n},so=e=>{const t=(e=>{const t=ro(e);if(!t)return;const n=P.get(t.node);return n.cellsInRect({left:0,right:n.width,top:0,bottom:n.height}).map((e=>{const n=t.node.nodeAt(e),o=e+t.start;return{pos:o,start:o+1,node:n}}))})(e.selection);if(t){const n=e.doc.resolve(t[0].pos),o=e.doc.resolve(t[t.length-1].pos);return Dn(e.setSelection(new L(o,n)))}return e};function lo(e,{map:t,tableStart:n,table:o},r){const i=Array(r).fill(0).reduce(((e,t,n)=>e+o.child(n).nodeSize),n),{cell:a,row:s}=A(o.type.schema),l=Array(t.width).fill(0).map(((e,n)=>{const r=o.nodeAt(t.map[n]);return a.createAndFill({alignment:null==r?void 0:r.attrs.alignment})}));return e.insert(i,s.create(null,l)),e}const co=O({tableGroup:"block",cellContent:"paragraph",cellAttributes:{alignment:{default:"left",getFromDOM:e=>e.style.textAlign||"left",setDOMAttr:(e,t)=>{t.style=`text-align: ${e||"left"}`}}}}),mo={NextCell:"NextCell",PrevCell:"PrevCell",ExitTable:"ExitTable"},uo=Bn((()=>{const e="table";return{id:e,schema:co.table,parser:{match:e=>"table"===e.type,runner:(e,t,n)=>{const o=t.align,r=t.children.map(((e,t)=>Object.assign(Object.assign({},e),{align:o,isHeader:0===t})));e.openNode(n),e.next(r),e.closeNode()}},serializer:{match:t=>t.type.name===e,runner:(e,t)=>{var n;const o=null===(n=t.content.firstChild)||void 0===n?void 0:n.content;if(!o)return;const r=[];o.forEach((e=>{r.push(e.attrs.alignment)})),e.openNode("table",void 0,{align:r}),e.next(t.content),e.closeNode()}},inputRules:(e,t)=>[new E(/^\|\|\s$/,((n,o,r,i)=>{const a=n.doc.resolve(r);if(!a.node(-1).canReplaceWith(a.index(-1),a.indexAfter(-1),e))return null;const s=io(t),l=n.tr.replaceRangeWith(r,i,s).scrollIntoView();return l.setSelection(R.create(l.doc,r+3))}))],commands:(e,t)=>{return{[mo.NextCell]:{defaultKey:"Mod-]",command:j(1)},[mo.PrevCell]:{defaultKey:"Mod-[",command:j(-1)},[mo.ExitTable]:{defaultKey:"Mod-Enter",command:(n=t.nodes.paragraph,(e,t)=>{if(!T(e))return!1;const{$head:o}=e.selection,r=o.after(),i=e.tr.replaceWith(r,r,n.createAndFill());return i.setSelection(S.near(i.doc.resolve(r),1)),null==t||t(i.scrollIntoView()),!0})}};var n}}})),po=Bn((()=>{const e="table_row";return{id:e,schema:co.table_row,parser:{match:e=>"tableRow"===e.type,runner:(e,t,n)=>{const o=t.align,r=t.children.map(((e,n)=>Object.assign(Object.assign({},e),{align:o[n],isHeader:t.isHeader})));e.openNode(n),e.next(r),e.closeNode()}},serializer:{match:t=>t.type.name===e,runner:(e,t)=>{e.openNode("tableRow"),e.next(t.content),e.closeNode()}}}})),ho=Bn((()=>{const e="table_cell";return{id:e,schema:co.table_cell,parser:{match:e=>"tableCell"===e.type&&!e.isHeader,runner:(e,t,n)=>{const o=t.align;e.openNode(n,{alignment:o}).openNode(e.schema.nodes.paragraph).next(t.children).closeNode().closeNode()}},serializer:{match:t=>t.type.name===e,runner:(e,t)=>{e.openNode("tableCell").next(t.content).closeNode()}}}})),fo=Bn((()=>{const e="table_header";return{id:e,schema:co.table_header,parser:{match:e=>"tableCell"===e.type&&!!e.isHeader,runner:(e,t,n)=>{const o=t.align;e.openNode(n,{alignment:o}),e.openNode(e.schema.nodes.paragraph),e.next(t.children),e.closeNode(),e.closeNode()}},serializer:{match:t=>t.type.name===e,runner:(e,t)=>{e.openNode("tableCell"),e.next(t.content),e.closeNode()}}}})),go=Kn.create([uo(),po(),ho(),fo()]);var wo,ko,vo,yo,bo,xo,Mo,Eo;function Co(e){const t=document.createElement("span");return t.textContent=e,t.className="icon material-icons material-icons-outlined",t}(xo=bo||(bo={})).Left="Left",xo.Top="Top",xo.Point="Point",(Eo=Mo||(Mo={}))[Eo.AddColLeft=0]="AddColLeft",Eo[Eo.AddColRight=1]="AddColRight",Eo[Eo.AddRowTop=2]="AddRowTop",Eo[Eo.AddRowBottom=3]="AddRowBottom",Eo[Eo.AlignLeft=4]="AlignLeft",Eo[Eo.AlignCenter=5]="AlignCenter",Eo[Eo.AlignRight=6]="AlignRight",Eo[Eo.Delete=7]="Delete";const _o=e=>e.state.selection;class No{constructor(){wo.set(this,[]),ko.set(this,void 0),vo.set(this,void 0),yo.set(this,{[Mo.AddColLeft]:{$:Co("chevron_left"),command:()=>D,disable:e=>!_o(e).isColSelection()},[Mo.AddColRight]:{$:Co("chevron_right"),command:()=>I,disable:e=>!_o(e).isColSelection()},[Mo.AddRowTop]:{$:Co("expand_less"),command:()=>(e,t)=>{if(!T(e))return!1;if(t){const n=W(e);t(lo(e.tr,n,n.top))}return!0},disable:e=>!_o(e).isRowSelection()||"table_header"===_o(e).$head.parent.type.name},[Mo.AddRowBottom]:{$:Co("expand_more"),command:()=>(e,t)=>{if(!T(e))return!1;if(t){const n=W(e);t(lo(e.tr,n,n.bottom))}return!0},disable:e=>!_o(e).isRowSelection()},[Mo.AlignLeft]:{$:Co("format_align_left"),command:()=>z("alignment","left"),disable:e=>!_o(e).isColSelection()},[Mo.AlignCenter]:{$:Co("format_align_center"),command:()=>z("alignment","center"),disable:e=>!_o(e).isColSelection()},[Mo.AlignRight]:{$:Co("format_align_right"),command:()=>z("alignment","right"),disable:e=>!_o(e).isColSelection()},[Mo.Delete]:{$:Co("delete"),command:(e,t)=>{const n=_o(t),o=n.isColSelection(),r=n.isRowSelection();return o&&r?$:o?H:V},disable:e=>{const t=_o(e);return!!t.isRowSelection()&&(!t.isColSelection()&&(e=>{const t=P.get(e.$anchorCell.node(-1)),n=e.$anchorCell.start(-1),o=t.cellsInRect({left:0,right:t.width,top:0,bottom:1}),r=t.cellsInRect(t.rectBetween(e.$anchorCell.pos-n,e.$headCell.pos-n));for(let i=0,a=o.length;i<a;i++)if(-1===r.indexOf(o[i]))return!1;return!0})(t))}}}),this.key=new F("TABLE_OP"),this.decorations=e=>{const t=(n=0,e=>{const t=ro(e);if(!t)return;const o=P.get(t.node);return n<0||n>=o.width?void 0:o.cellsInRect({left:n,right:n+1,top:0,bottom:o.height}).map((e=>{const n=t.node.nodeAt(e);if(!n)throw new Error;const o=e+t.start;return{pos:o,start:o+1,node:n}}))})(e.selection);var n;if(!t)return null;const o=(r=0,e=>{const t=ro(e);if(!t)return;const n=P.get(t.node);return r<0||r>=n.height?void 0:n.cellsInRect({left:0,right:n.width,top:r,bottom:r+1}).map((e=>{const n=t.node.nodeAt(e);if(!n)throw new Error;const o=e+t.start;return{pos:o,start:o+1,node:n}}))})(e.selection);var r;if(!o)return null;const[i]=t;return this.createWidget(i,bo.Point),t.forEach(((e,t)=>{this.createWidget(e,bo.Left,t)})),o.forEach(((e,t)=>{this.createWidget(e,bo.Top,t)})),B.create(e.doc,p(this,wo,"f"))},this.update=(e,t)=>{const n=e.state;if((null==t?void 0:t.doc.eq(n.doc))&&t.selection.eq(n.selection))return;n.selection instanceof L&&e.editable?(this.calculateItem(e),Object.values(p(this,yo,"f")).every((({$:e})=>e.classList.contains("hide")))?this.hide():(p(this,ko,"f").classList.remove("hide"),this.calculatePosition(e))):this.hide()},this.props={decorations:this.decorations},this.view=e=>{var t;return K(this,vo,e,"f"),Object.values(p(this,yo,"f")).forEach((({$:e})=>p(this,ko,"f").appendChild(e))),null===(t=e.dom.parentNode)||void 0===t||t.appendChild(p(this,ko,"f")),this.update(e),p(this,ko,"f").addEventListener("mousedown",this.listener),{update:this.update,destroy:()=>{p(this,ko,"f").removeEventListener("mousedown",this.listener),p(this,ko,"f").remove()}}},this.listener=e=>{const t=p(this,vo,"f");t&&(e.stopPropagation(),e.preventDefault(),Object.values(p(this,yo,"f")).forEach((({$:n,command:o})=>{n.contains(e.target)&&o(e,t)(t.state,t.dispatch)})))},K(this,ko,document.createElement("div"),"f"),p(this,ko,"f").classList.add("table-tooltip")}createWidget(e,t,n=0){const o=q.widget(e.pos+1,(()=>{const e=document.createElement("div");return e.classList.add(this.calculateClassName(t)),e.addEventListener("mousedown",(e=>{if(p(this,vo,"f"))switch(e.preventDefault(),t){case bo.Point:return void p(this,vo,"f").dispatch(so(p(this,vo,"f").state.tr));case bo.Left:return void p(this,vo,"f").dispatch(ao("row")(n)(p(this,vo,"f").state.tr));case bo.Top:return void p(this,vo,"f").dispatch(ao("col")(n)(p(this,vo,"f").state.tr))}})),e}));p(this,wo,"f").push(o)}calculateClassName(e){switch(e){case bo.Left:return"milkdown-cell-left";case bo.Top:return"milkdown-cell-top";case bo.Point:return"milkdown-cell-point";default:throw new Error}}calculatePosition(e){const{selection:t}=e.state,n=t.isColSelection(),o=t.isRowSelection();In(e,p(this,ko,"f"),((e,t)=>{let r=o?e.left-t.width/2-8:e.left+(e.width-t.width)/2,i=e.top-t.height-(n?18:4);return r<0&&(r=0),i<t.height&&(i=e.top),[i,r]}))}calculateItem(e){Object.values(p(this,yo,"f")).forEach((t=>{var n;(null===(n=t.disable)||void 0===n?void 0:n.call(t,e))?t.$.classList.add("hide"):t.$.classList.remove("hide")}))}hide(){p(this,ko,"f").classList.add("hide")}}wo=new WeakMap,ko=new WeakMap,vo=new WeakMap,yo=new WeakMap;const To=[Ge(G),Ye([Y({}),new N(new No),U()])],So={HardBreak:"HardBreak",Blockquote:"Blockquote",BulletList:"BulletList",OrderedList:"OrderedList",CodeFence:"CodeFence",H1:"H1",H2:"H2",H3:"H3",H4:"H4",H5:"H5",H6:"H6",Text:"Text",CodeInline:"CodeInline",Em:"Em",Bold:"Bold",NextListItem:"NextListItem",SinkListItem:"SinkListItem",LiftListItem:"LiftListItem"},Ao=Fn(((e,t)=>({id:"code_inline",schema:{excludes:"_",parseDOM:[{tag:"code"}],toDOM:e=>["code",{class:t.getClassName(e.attrs,"code-inline")}]},parser:{match:e=>"inlineCode"===e.type,runner:(e,t,n)=>{e.openMark(n),e.addText(t.value),e.closeMark(n)}},serializer:{match:e=>"code_inline"===e.type.name,runner:(e,t,n)=>(e.addNode("inlineCode",void 0,n.text||""),!0)},inputRules:e=>[qn(/(?:^|[^`])(`([^`]+)`)$/,e)],commands:e=>({[So.CodeInline]:{defaultKey:"Mod-e",command:J(e)}})}))),Po=Fn(((e,t)=>({id:"em",schema:{parseDOM:[{tag:"i"},{tag:"em"},{style:"font-style",getAttrs:e=>"italic"===e}],toDOM:e=>["em",{class:t.getClassName(e.attrs,"em")}]},parser:{match:e=>"emphasis"===e.type,runner:(e,t,n)=>{e.openMark(n),e.next(t.children),e.closeMark(n)}},serializer:{match:e=>"em"===e.type.name,runner:(e,t)=>{e.withMark(t,"emphasis")}},inputRules:e=>[qn(/(?:^|[^_])(_([^_]+)_)$/,e),qn(/(?:^|[^*])(\*([^*]+)\*)$/,e)],commands:e=>({[So.Em]:{defaultKey:"Mod-i",command:J(e)}})}))),Lo=Fn(((e,t)=>({id:"link",schema:{attrs:{href:{},title:{default:null}},inclusive:!1,parseDOM:[{tag:"a[href]",getAttrs:e=>{if(!(e instanceof HTMLElement))throw new Error;return{href:e.getAttribute("href"),title:e.getAttribute("title")}}}],toDOM:e=>["a",Object.assign(Object.assign({},e.attrs),{class:t.getClassName(e.attrs,"link")})]},parser:{match:e=>"link"===e.type,runner:(e,t,n)=>{const o=t.url,r=t.title;e.openMark(n,{href:o,title:r}),e.next(t.children),e.closeMark(n)}},serializer:{match:e=>"link"===e.type.name,runner:(e,t)=>{e.withMark(t,"link",void 0,{title:t.attrs.title,url:t.attrs.href})}},inputRules:(e,t)=>[new E(/\[(?<text>.+?)]\((?<href>.*?)(?=“|\))"?(?<title>[^"]+)?"?\)/,((n,o,r,i)=>{const[a,s="",l,d]=o,{tr:c}=n;return a&&c.replaceWith(r,i,t.text(s)).addMark(r,s.length+r,e.create({title:d,href:l})),c}))]}))),Oo=Fn(((e,t)=>({id:"strong",schema:{parseDOM:[{tag:"b"},{tag:"strong"},{style:"font-style",getAttrs:e=>"bold"===e}],toDOM:e=>["strong",{class:t.getClassName(e.attrs,"strong")}]},parser:{match:e=>"strong"===e.type,runner:(e,t,n)=>{e.openMark(n),e.next(t.children),e.closeMark(n)}},serializer:{match:e=>"strong"===e.type.name,runner:(e,t)=>{e.withMark(t,"strong")}},inputRules:e=>[qn(/(?:__)([^_]+)(?:__)$/,e),qn(/(?:\*\*)([^*]+)(?:\*\*)$/,e)],commands:e=>({[So.Bold]:{defaultKey:"Mod-b",command:J(e)}})}))),Ro=[Ao(),Po(),Oo(),Lo()],jo="blockquote",Do=Bn(((e,t)=>({id:jo,schema:{content:"block+",group:"block",defining:!0,parseDOM:[{tag:"blockquote"}],toDOM:e=>["blockquote",{class:t.getClassName(e.attrs,jo)},0]},parser:{match:({type:e})=>e===jo,runner:(e,t,n)=>{e.openNode(n).next(t.children).closeNode()}},serializer:{match:e=>e.type.name===jo,runner:(e,t)=>{e.openNode("blockquote").next(t.content).closeNode()}},inputRules:e=>[X(/^\s*>\s$/,e)],commands:e=>({[So.Blockquote]:{defaultKey:"Mod-Shift-b",command:Z(e)}})}))),Io=Bn(((e,t)=>({id:"bullet_list",schema:{content:"listItem+",group:"block",parseDOM:[{tag:"ul"}],toDOM:e=>["ul",{class:t.getClassName(e.attrs,"bullet-list")},0]},parser:{match:({type:e,ordered:t})=>"list"===e&&!t,runner:(e,t,n)=>{e.openNode(n).next(t.children).closeNode()}},serializer:{match:e=>"bullet_list"===e.type.name,runner:(e,t)=>{e.openNode("list",void 0,{ordered:!1}).next(t.content).closeNode()}},inputRules:e=>[X(/^\s*([-+*])\s$/,e)],commands:e=>({[So.BulletList]:{defaultKey:"Mod-Shift-8",command:Z(e)}})}))),Wo=["","javascript","typescript","bash","sql","json","html","css","c","cpp","java","ruby","python","go","rust","markdown"],zo=/^```(?<language>[a-z]*)? $/,$o=Bn(((e,t)=>({id:"fence",schema:{content:"text*",group:"block",marks:"",defining:!0,code:!0,attrs:{language:{default:""}},parseDOM:[{tag:"pre",preserveWhitespace:"full",getAttrs:e=>{if(!(e instanceof HTMLElement))throw new Error("Parse DOM error.");return{language:e.dataset.language}}}],toDOM:e=>["div",{"data-language":e.attrs.language,class:t.getClassName(e.attrs,"code-fence")},["pre",["code",{spellCheck:"false"},0]]]},parser:{match:({type:e})=>"code"===e,runner:(e,t,n)=>{const o=t.lang,r=t.value;e.openNode(n,{language:o}),e.addText(r),e.closeNode()}},serializer:{match:e=>"fence"===e.type.name,runner:(e,t)=>{var n;e.addNode("code",void 0,(null===(n=t.content.firstChild)||void 0===n?void 0:n.text)||"",{lang:t.attrs.language})}},inputRules:e=>[Q(zo,e,(([e,t])=>{if(e)return{language:t}}))],commands:e=>({[So.CodeFence]:{defaultKey:"Mod-Alt-c",command:ee(e)}}),view:(n,o,r,i,a,s)=>{if(null==e?void 0:e.view)return e.view(n,o,r,i,a,s);const l=document.createElement("div"),d=document.createElement("div"),c=document.createElement("select"),m=document.createElement("pre"),u=document.createElement("code");return c.className="code-fence_select",c.addEventListener("mousedown",(e=>{i.editable||e.preventDefault()})),c.addEventListener("change",(e=>{const t=e.target;if(!t)return;const{tr:n}=i.state;i.dispatch(n.setNodeMarkup(a(),void 0,{language:t.value}))})),Wo.concat((null==e?void 0:e.languageList)||[]).forEach((e=>{const t=document.createElement("option");t.className="code-fence_select-option",t.value=e,t.innerText=e||"--",t.selected=r.attrs.language===e,c.appendChild(t)})),u.spellcheck=!1,d.contentEditable="false",d.append(c),m.append(u),l.append(d,m),l.setAttribute("class",t.getClassName(r.attrs,"code-fence")),l.setAttribute("data-language",r.attrs.language),{dom:l,contentDOM:u,update:e=>"fence"===e.type.name&&(l.dataset.language=e.attrs.language,!0)}}}))),Ho=Bn((()=>({id:"doc",schema:{content:"block+"},parser:{match:({type:e})=>"root"===e,runner:(e,t,n)=>{e.injectRoot(t,n)}},serializer:{match:e=>"doc"===e.type.name,runner:(e,t)=>{e.openNode("root"),e.next(t.content)}}}))),Vo="hardbreak",Fo=Bn(((e,t)=>({id:Vo,schema:{inline:!0,group:"inline",selectable:!1,parseDOM:[{tag:"br"}],toDOM:e=>["br",{class:t.getClassName(e.attrs,Vo)}]},parser:{match:({type:e})=>"break"===e,runner:(e,t,n)=>{e.addNode(n)}},serializer:{match:e=>e.type.name===Vo,runner:e=>{e.addNode("break")}},commands:e=>({[So.HardBreak]:{defaultKey:"Shift-Enter",command:(t,n)=>(null==n||n(t.tr.replaceSelectionWith(e.create()).scrollIntoView()),!0)}})}))),Bo=Array(5).fill(0).map(((e,t)=>t+1)),Ko=Bn(((e,t)=>({id:"heading",schema:{content:"text*",group:"block",attrs:{level:{default:1}},parseDOM:Bo.map((e=>({tag:`h${e}`,attrs:{level:e}}))),toDOM:e=>[`h${e.attrs.level}`,{class:t.getClassName(e.attrs,`heading h${e.attrs.level}`)},0]},parser:{match:({type:e})=>"heading"===e,runner:(e,t,n)=>{const o=t.depth;e.openNode(n,{level:o}),e.next(t.children),e.closeNode()}},serializer:{match:e=>"heading"===e.type.name,runner:(e,t)=>{e.openNode("heading",void 0,{depth:t.attrs.level}),e.next(t.content),e.closeNode()}},inputRules:e=>Bo.map((t=>Q(new RegExp(`^(#{1,${t}})\\s$`),e,(()=>({level:t}))))),commands:e=>({[So.H1]:{defaultKey:"Mod-Alt-1",command:ee(e,{level:1})},[So.H2]:{defaultKey:"Mod-Alt-2",command:ee(e,{level:2})},[So.H3]:{defaultKey:"Mod-Alt-3",command:ee(e,{level:3})},[So.H4]:{defaultKey:"Mod-Alt-4",command:ee(e,{level:4})},[So.H5]:{defaultKey:"Mod-Alt-5",command:ee(e,{level:5})},[So.H6]:{defaultKey:"Mod-Alt-6",command:ee(e,{level:6})}})}))),qo=Bn(((e,t)=>({id:"hr",schema:{group:"block",parseDOM:[{tag:"hr"}],toDOM:e=>["hr",{class:t.getClassName(e.attrs,"hr")}]},parser:{match:({type:e})=>"thematicBreak"===e,runner:(e,t,n)=>{e.addNode(n)}},serializer:{match:e=>"hr"===e.type.name,runner:e=>{e.addNode("thematicBreak")}},inputRules:e=>[new E(/^(?:---|___\s|\*\*\*\s)$/,((t,n,o,r)=>{const{tr:i}=t;return n[0]&&i.replaceWith(o,r,e.create({})),i}))]}))),Yo=Bn(((e,t)=>({id:"image",schema:{inline:!0,group:"inline",draggable:!0,selectable:!0,marks:"",attrs:{src:{default:""},alt:{default:null},title:{default:null}},parseDOM:[{tag:"img[src]",getAttrs:e=>{if(!(e instanceof HTMLElement))throw new Error;return{src:e.getAttribute("src")||"",alt:e.getAttribute("alt"),title:e.getAttribute("title")}}}],toDOM:e=>{var n;return(null===(n=e.attrs.src)||void 0===n?void 0:n.length)>0?["img",Object.assign(Object.assign({},e.attrs),{class:t.getClassName(e.attrs,"image")})]:["div",Object.assign(Object.assign({},e.attrs),{class:t.getClassName(e.attrs,"image empty")}),["span",{contentEditable:"false",class:"icon"}],["span",{contentEditable:"false",class:"placeholder"}]]}},parser:{match:({type:e})=>"image"===e,runner:(e,t,n)=>{const o=t.url,r=t.alt,i=t.title;e.openNode(n,{src:o,alt:r,title:i}),e.next(t.children),e.closeNode()}},serializer:{match:e=>"image"===e.type.name,runner:(e,t)=>{e.addNode("image",void 0,void 0,{title:t.attrs.title,url:t.attrs.src,alt:t.attrs.alt})}},inputRules:e=>[new E(/!\[(?<alt>.*?)]\((?<filename>.*?)(?=“|\))"?(?<title>[^"]+)?"?\)/,((t,n,o,r)=>{const[i,a,s="",l]=n,{tr:d}=t;return i&&d.replaceWith(o,r,e.create({src:s,alt:a,title:l})),d}))]}))),Uo=Bn(((e,t)=>({id:"list_item",schema:{group:"listItem",content:"paragraph block*",defining:!0,parseDOM:[{tag:"li"}],toDOM:e=>["li",{class:t.getClassName(e.attrs,"list-item")},0]},parser:{match:({type:e,checked:t})=>"listItem"===e&&null===t,runner:(e,t,n)=>{e.openNode(n),e.next(t.children),e.closeNode()}},serializer:{match:e=>"list_item"===e.type.name,runner:(e,t)=>{e.openNode("listItem"),e.next(t.content),e.closeNode()}},inputRules:e=>[X(/^\s*([-+*])\s$/,e)],commands:e=>({[So.NextListItem]:{defaultKey:"Enter",command:te(e)},[So.SinkListItem]:{defaultKey:"Mod-]",command:ne(e)},[So.LiftListItem]:{defaultKey:"Mod-[",command:oe(e)}})}))),Go=Bn(((e,t)=>({id:"ordered_list",schema:{content:"listItem+",group:"block",attrs:{order:{default:1}},parseDOM:[{tag:"ol",getAttrs:e=>{if(!(e instanceof HTMLElement))throw new Error;return{order:e.hasAttribute("start")?Number(e.getAttribute("start")):1}}}],toDOM:e=>["ol",Object.assign(Object.assign({},1===e.attrs.order?{}:e.attrs.order),{class:t.getClassName(e.attrs,"ordered-list")}),0]},parser:{match:({type:e,ordered:t})=>"list"===e&&!!t,runner:(e,t,n)=>{e.openNode(n).next(t.children).closeNode()}},serializer:{match:e=>"ordered_list"===e.type.name,runner:(e,t)=>{e.openNode("list",void 0,{ordered:!0,start:1}),e.next(t.content),e.closeNode()}},inputRules:e=>[X(/^(\d+)\.\s$/,e,(e=>({order:Number(e[1])})),((e,t)=>t.childCount+t.attrs.order===Number(e[1])))],commands:e=>({[So.OrderedList]:{defaultKey:"Mod-Shift-7",command:Z(e)}})}))),Jo="paragraph",Xo=Bn(((e,t)=>({id:Jo,schema:{content:"inline*",group:"block",parseDOM:[{tag:"p"}],toDOM:e=>["p",{class:t.getClassName(e.attrs,Jo)},0]},parser:{match:e=>"paragraph"===e.type,runner:(e,t,n)=>{e.openNode(n),t.children?e.next(t.children):e.addText(t.value),e.closeNode()}},serializer:{match:e=>"paragraph"===e.type.name,runner:(e,t)=>{e.openNode("paragraph"),e.next(t.content),e.closeNode()}},commands:e=>({[So.Text]:{defaultKey:"Mod-Alt-0",command:ee(e)}})}))),Zo=Bn((()=>({id:"text",schema:{group:"inline"},parser:{match:({type:e})=>"text"===e,runner:(e,t)=>{e.addText(t.value)}},serializer:{match:e=>"text"===e.type.name,runner:(e,t)=>{e.addNode("text",void 0,t.text)}}}))),Qo=[Ho(),Xo(),Fo(),Do(),$o(),Io(),Go(),Uo(),Ko(),qo(),Yo(),Zo()],er=Kn.create([...Qo,...Ro]),tr=Ye(k({rules:[new E(/(https?:\/\/)?www\.[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z]{2,}\b(?:[-a-zA-Z0-9@:%._+~#=?!&/]*)(?:[-a-zA-Z0-9@:%._+~#=?!&/]*)$/,((e,t,n,o)=>{const{schema:r}=e,[i]=t;return i?e.tr.replaceWith(n,o,r.text(i)).addMark(n,i.length+n,r.marks.link.create({href:i.startsWith("www")?`https://${i}`:i})):null}))]})),nr=Fn(((e,t)=>{const n="strike_through";return{id:n,schema:{parseDOM:[{tag:"del"},{style:"text-decoration",getAttrs:e=>"line-through"===e}],toDOM:e=>["del",{class:t.getClassName(e.attrs,"strike-through")}]},parser:{match:e=>"delete"===e.type,runner:(e,t,n)=>{e.openMark(n),e.next(t.children),e.closeMark(n)}},serializer:{match:e=>e.type.name===n,runner:(e,t)=>{e.withMark(t,"delete")}},inputRules:e=>[qn(/(?:~~)([^~]+)(?:~~)$/,e),qn(/(?:^|[^~])(~([^~]+)~)$/,e)],commands:e=>({[rr.StrikeThrough]:{defaultKey:"Mod-Alt-x",command:J(e)}})}})),or=Bn(((e,t)=>{const n="task_list_item";return{id:n,schema:{group:"listItem",content:"paragraph block*",defining:!0,attrs:{checked:{default:!1}},parseDOM:[{tag:'li[data-type="task-list-item"]',getAttrs:e=>{if(!(e instanceof HTMLElement))throw new Error;return{checked:"true"===e.dataset.checked}}}],toDOM:e=>["li",{"data-type":"task-item","data-checked":e.attrs.checked?"true":"false",class:t.getClassName(e.attrs,"task-list-item")},0]},parser:{match:({type:e,checked:t})=>"listItem"===e&&null!==t,runner:(e,t,n)=>{e.openNode(n,{checked:t.checked}),e.next(t.children),e.closeNode()}},serializer:{match:e=>e.type.name===n,runner:(e,t)=>{e.openNode("listItem",void 0,{checked:t.attrs.checked}),e.next(t.content),e.closeNode()}},inputRules:e=>[X(/^\s*(\[([ |x])\])\s$/,e,(e=>({checked:"x"===e[e.length-1]})))],commands:e=>({[rr.NextListItem]:{defaultKey:"Enter",command:te(e)},[rr.SinkListItem]:{defaultKey:"Mod-]",command:ne(e)},[rr.LiftListItem]:{defaultKey:"Mod-[",command:oe(e)},[rr.TaskList]:{defaultKey:"Mod-Alt-9",command:Z(e)}}),view:(o,r,i,a,s,l)=>{if(null==e?void 0:e.view)return e.view(o,r,i,a,s,l);const d=document.createElement("li"),c=document.createElement("label"),m=document.createElement("span"),u=document.createElement("input"),p=document.createElement("div");c.contentEditable="false",u.type="checkbox";const h=e=>{const t=e.target;if(!(t instanceof HTMLInputElement))return;if(!a.editable)return void(u.checked=!u.checked);const{tr:n}=a.state;a.dispatch(n.setNodeMarkup(s(),void 0,{checked:t.checked}))};u.addEventListener("change",h),d.dataset.checked=i.attrs.checked,i.attrs.checked&&u.setAttribute("checked","checked"),c.append(u,m),d.append(c,p);const f={"data-type":"task-item","data-checked":i.attrs.checked?"true":"false",class:t.getClassName(i.attrs,"task-list-item")};return Object.entries(f).forEach((([e,t])=>{d.setAttribute(e,t)})),{dom:d,contentDOM:p,update:e=>e.type.name===n&&(d.dataset.checked=e.attrs.checked,e.attrs.checked?u.setAttribute("checked","checked"):u.removeAttribute("checked"),!0),destroy:()=>{u.removeEventListener("change",h)}}}}})),rr=Object.assign(Object.assign(Object.assign({},So),mo),{StrikeThrough:"StrikeThrough",TaskList:"TaskList"}),ir=[...Kn.create([...er,...go,nr(),or()]),...[...To,tr]],ar=Ye([re(),f({"Mod-z":ie,"Mod-y":ae,"Shift-Mod-z":ae})]),sr=()=>e=>d(void 0,void 0,void 0,(function*(){yield Promise.all([e.wait(Tt),e.wait(Xt)]);const t=((e,t,n)=>new N({props:{handlePaste:(e,n)=>{var o,r;const i=null===(r=(o=e.props).editable)||void 0===r?void 0:r.call(o,e.state),{clipboardData:a}=n;if(!i||!a)return!1;const s=a.getData("text/plain");if(a.getData("text/html").length>0)return!1;const l=t(s);if(!l||"string"==typeof l)return!1;const{$from:d}=e.state.selection,c=l.content.childCount>1?0:d.depth;return e.dispatch(e.state.tr.replaceSelection(new se(l.content,c,c))),!0},clipboardTextSerializer:t=>{const o=e.topNodeType.createAndFill(void 0,t.content);return o?n(o):""}}}))(e.get(tt),e.get(_t),e.get(Gt));e.update(qe,(e=>e.concat(t)))})),lr=(e,t=[])=>e.flatMap((e=>"element"===e.type?lr(e.children,[...t,...e.properties.className||[]]):[{text:e.value,className:t}]));function dr(e,t){const n=[];return On((e=>e.type.name===t))(e).forEach((e=>{let t=e.pos+1;const{language:o}=e.node.attrs;if(!o)return;const r=le.highlight(e.node.textContent,o);lr(r).forEach((e=>{const o=t+e.text.length;if(e.className.length){const r=q.inline(t,o,{class:e.className.join(" ")});n.push(r)}t=o}))})),B.create(e,n)}const cr=Ye((mr="fence",new N({key:new F("MILKDOWN_PLUGIN_PRISM"),state:{init:(e,{doc:t})=>dr(t,mr),apply:(e,t,n,o)=>{var r,i;const a=o.selection.$head.parent.type.name===mr,s=n.selection.$head.parent.type.name===mr,l=On((e=>e.type.name===mr))(n.doc),d=On((e=>e.type.name===mr))(o.doc);return e.docChanged&&(a||s||l.length!==d.length||(null===(r=l[0])||void 0===r?void 0:r.node.attrs.language)!==(null===(i=d[0])||void 0===i?void 0:i.node.attrs.language))?dr(e.doc,mr):t.map(e.mapping,e.doc)}},props:{decorations(e){return this.getState(e)}}})));var mr;const ur=(e,t)=>e.tagName===t.toUpperCase(),pr=e=>{const t=document.createElement("span");return t.textContent=e,t.className="icon material-icons",t},hr=(e,t)=>{const{from:n,to:o}=e.selection;return e.doc.rangeHasMark(n,o,t)},fr=(e,t)=>{var n;return null===(n=jn((e=>Boolean(t.isInSet(e.marks))))(e.selection,e.doc))||void 0===n?void 0:n.node},gr=(e,t)=>!(e=>e.selection instanceof R)(e)||(e=>Boolean(Rn((e=>"fence"===e.type.name))(e.selection)))(e)||hr(e,t),wr=(e,t,n)=>(o,r)=>{if(!r)return!1;const{start:i,end:a}=((e,t)=>{let n={start:-1,end:-1};const o=jn((e=>Boolean(t.isInSet(e.marks))))(e.selection,e.doc);return o&&(n={start:o.pos,end:o.pos+Math.max(o.node.textContent.length,1)}),n})(o,e),{tr:s}=o,l=t.create(Object.assign(Object.assign({},e.attrs),{href:n}));return s.removeMark(i,a).addMark(i,a,l).setSelection(new R(s.selection.$anchor)),r(s.scrollIntoView()),!0},kr=e=>(t,n)=>{var o;const{target:r}=t,{marks:i}=e,{link:a}=i;if(!(r instanceof HTMLElement))return()=>!0;if(ur(r,"input"))return r.focus(),()=>!1;const s=fr(n.state,a);if(!s)return()=>!1;const l=s.marks.find((({type:e})=>e===a));if(!l)return()=>!1;const d=null===(o=r.parentNode)||void 0===o?void 0:o.firstChild;return d instanceof HTMLInputElement?wr(l,i.link,d.value):()=>!1},vr=(e,t)=>(n,o)=>{const{target:r}=n,{nodes:i}=e,{image:a}=i;if(!(r instanceof HTMLElement))return()=>!0;if(ur(r,"input"))return r.focus(),()=>!1;const s=yr(o.state.selection,a);if(!s)return()=>!1;const l=r.parentNode;if(!l)return()=>!1;const d=Array.from(l.children).find((e=>"INPUT"===e.tagName));return d instanceof HTMLInputElement?(e,n)=>{if(!n)return!1;const{tr:o}=e;return o.setNodeMarkup(s.pos,void 0,Object.assign(Object.assign({},s.node.attrs),{[t]:d.value})),n(o.scrollIntoView()),!0}:()=>!1},yr=(e,t)=>{if(!(e instanceof de))return;const{node:n,$from:o}=e;return((e,t)=>Array.isArray(e)&&e.indexOf(t.type)>-1||t.type===e)(t,n)?{node:n,pos:o.pos,depth:o.depth}:void 0},br=(e,t,n,o)=>({$:pr(e),command:()=>J(t,o),active:e=>hr(e.state,t),disable:e=>gr(e.state,n),enable:e=>!!t&&!!e.state.schema.marks[t.name]});var xr,Mr,Er,Cr;(Mr=xr||(xr={}))[Mr.ToggleBold=0]="ToggleBold",Mr[Mr.ToggleItalic=1]="ToggleItalic",Mr[Mr.ToggleStrike=2]="ToggleStrike",Mr[Mr.ToggleCode=3]="ToggleCode",Mr[Mr.ToggleLink=4]="ToggleLink",(Cr=Er||(Er={}))[Cr.ModifyLink=0]="ModifyLink",Cr[Cr.ModifyImage=1]="ModifyImage";var _r,Nr,Tr,Sr,Ar,Pr,Lr,Or;class Rr{constructor(e,t){this.view=t,_r.set(this,void 0),Nr.set(this,void 0),Tr.set(this,(e=>{const{view:t}=this;if(!t)return;const n=Object.values(p(this,Nr,"f")).find((({$:t})=>e.target instanceof Element&&t.contains(e.target)));n&&(e.stopPropagation(),e.preventDefault(),n.command(e,t)(t.state,t.dispatch))})),K(this,Nr,e,"f"),K(this,_r,this.createTooltip(),"f"),p(this,_r,"f").addEventListener("mousedown",p(this,Tr,"f"))}destroy(){p(this,_r,"f").removeEventListener("mousedown",p(this,Tr,"f")),p(this,_r,"f").remove()}hide(){p(this,_r,"f").classList.add("hide")}update(e){this.filterButton(e)?this.hide():this.calcPos(e)}get noActive(){return Object.values(p(this,Nr,"f")).filter((e=>e.enable(this.view))).every((({$:e})=>e.classList.contains("hide")))}filterButton(e){return Object.values(p(this,Nr,"f")).filter((e=>e.enable(this.view))).forEach((t=>{var n;if(null===(n=t.disable)||void 0===n?void 0:n.call(t,e))return void t.$.classList.add("hide");t.$.classList.remove("hide");t.active(e)?t.$.classList.add("active"):t.$.classList.remove("active")})),this.noActive}calcPos(e){p(this,_r,"f").classList.remove("hide"),Wn(e,p(this,_r,"f"),((e,t,n)=>{const o=t.left-e.left;let r=e.left-(n.width-o)/2;return r<0&&(r=0),[e.top-n.height-4,r]}))}createTooltip(){var e;const t=document.createElement("div");return t.className="tooltip",Object.values(p(this,Nr,"f")).filter((e=>e.enable(this.view))).forEach((({$:e})=>t.appendChild(e))),null===(e=this.view.dom.parentNode)||void 0===e||e.appendChild(t),t}}_r=new WeakMap,Nr=new WeakMap,Tr=new WeakMap;class jr{constructor(e,t){this.view=t,Sr.set(this,void 0),Ar.set(this,void 0),Pr.set(this,void 0),this.listener=e=>{const{view:t}=this,n=p(this,Pr,"f");t&&n&&(e.stopPropagation(),n(e,t)(t.state,t.dispatch))},K(this,Ar,e,"f"),K(this,Sr,this.createInput(),"f"),p(this,Sr,"f").addEventListener("mousedown",this.listener)}destroy(){p(this,Sr,"f").removeEventListener("mousedown",this.listener),p(this,Sr,"f").remove()}hide(){p(this,Sr,"f").classList.add("hide"),K(this,Pr,void 0,"f")}update(e){this.filterInput(e)&&this.calcPos(e)}calcPos(e){Wn(e,p(this,Sr,"f"),((e,t,n)=>{const o=t.left-e.left;let r=e.left-(n.width-o)/2;return r<0&&(r=0),[e.bottom+4,r]}))}createInput(){var e;const t=document.createElement("div");t.className="tooltip-input";const n=document.createElement("input");t.appendChild(n);const o=document.createElement("button");return o.textContent="APPLY",t.appendChild(o),null===(e=this.view.dom.parentNode)||void 0===e||e.appendChild(t),t}filterInput(e){var t;const n=Object.values(p(this,Ar,"f")).find((t=>t.display(e)));return n?(p(this,Sr,"f").classList.remove("hide"),K(this,Pr,n.command,"f"),null===(t=p(this,Sr,"f").firstElementChild)||void 0===t||t.setAttribute("placeholder",n.placeholder),n.update(e,p(this,Sr,"f")),!0):(p(this,Sr,"f").classList.add("hide"),!1)}}Sr=new WeakMap,Ar=new WeakMap,Pr=new WeakMap;class Dr{constructor(e,t,n){Lr.set(this,void 0),Or.set(this,void 0),K(this,Lr,new Rr(e,n),"f"),K(this,Or,new jr(t,n),"f"),this.update(n)}update(e,t){if(!e.editable)return void this.hide();const n=e.state;if(n.selection.empty)return void this.hide();(null==t?void 0:t.doc.eq(n.doc))&&t.selection.eq(n.selection)||(p(this,Lr,"f").update(e),p(this,Or,"f").update(e))}destroy(){p(this,Lr,"f").destroy(),p(this,Or,"f").destroy()}hide(){p(this,Lr,"f").hide(),p(this,Or,"f").hide()}}Lr=new WeakMap,Or=new WeakMap;const Ir=Ye(new N({key:new F("MILKDOWN_PLUGIN_TOOLTIP"),view:e=>new Dr((e=>{const{marks:t}=e;return{[xr.ToggleBold]:br("format_bold",t.strong,t.code_inline),[xr.ToggleItalic]:br("format_italic",t.em,t.code_inline),[xr.ToggleStrike]:br("strikethrough_s",t.strike_through,t.code_inline),[xr.ToggleCode]:br("code",t.code_inline,t.link),[xr.ToggleLink]:br("link",t.link,t.code_inline,{href:""})}})(e.state.schema),(e=>{const{marks:t,nodes:n}=e;return{[Er.ModifyLink]:{display:e=>hr(e.state,t.link),command:kr(e),placeholder:"Input Web Link",update:(e,n)=>{const{firstChild:o}=n;if(!(o instanceof HTMLInputElement))return;const r=fr(e.state,t.link);if(!r)return;const i=r.marks.find((e=>e.type===t.link));i&&(o.value=i.attrs.href)}},[Er.ModifyImage]:{display:e=>Boolean(yr(e.state.selection,n.image)),command:vr(e,"src"),placeholder:"Input Image Link",update:(e,t)=>{const{firstChild:o}=t;if(!(o instanceof HTMLInputElement))return;const r=yr(e.state.selection,n.image);r&&(o.value=r.node.attrs.src)}}}})(e.state.schema),e)})),Wr=Bn((()=>{const e="math_inline";return{id:e,schema:{group:"inline math",content:"text*",inline:!0,atom:!0,parseDOM:[{tag:"math-inline"}],toDOM:()=>["math-inline",{class:"math-node"},0]},parser:{match:e=>"inlineMath"===e.type,runner:(e,t,n)=>{e.openNode(n),e.addText(t.value),e.closeNode()}},serializer:{match:t=>t.type.name===e,runner:(e,t)=>{let n="";t.forEach((e=>{n+=e.text})),e.addNode("inlineMath",void 0,n)}},inputRules:e=>[ce(ue,e)]}})),zr=Bn((()=>{const e="math_display";return{id:e,schema:{group:"block math",content:"text*",atom:!0,code:!0,parseDOM:[{tag:"math-display"}],toDOM:()=>["math-display",{class:"math-node"},0]},parser:{match:e=>"math"===e.type,runner:(e,t,n)=>{e.openNode(n),e.addText(t.value),e.closeNode()}},serializer:{match:t=>t.type.name===e,runner:(e,t)=>{let n="";t.forEach((e=>{n+=e.text})),e.addNode("math",void 0,n)}},inputRules:e=>[me(pe,e)]}})),$r=Kn.create([Wr(),zr()]),Hr=f({Backspace:he(ge,we,ke,ve)}),Vr=[Ge(ye),Ye([fe,Hr]),...$r],Fr=(e,t)=>{const n=document.createElement("div");n.setAttribute("role","option"),n.classList.add("slash-dropdown-item");const o=document.createElement("span");o.textContent=t,o.className="icon material-icons material-icons-outlined";const r=document.createElement("span");return r.textContent=e,r.className="text",n.appendChild(o),n.appendChild(r),n};var Br,Kr;(Kr=Br||(Br={}))[Kr.Divider=0]="Divider",Kr[Kr.H1=1]="H1",Kr[Kr.H2=2]="H2",Kr[Kr.H3=3]="H3",Kr[Kr.BulletList=4]="BulletList",Kr[Kr.OrderedList=5]="OrderedList",Kr[Kr.TaskList=6]="TaskList",Kr[Kr.Quote=7]="Quote",Kr[Kr.CodeFence=8]="CodeFence",Kr[Kr.Table=9]="Table",Kr[Kr.DivideLine=10]="DivideLine",Kr[Kr.Image=11]="Image";const qr=(e,t=1)=>n=>(o,r)=>{if(!r)return!1;const{selection:i}=o,{$head:a}=i,s=a.pos-1-a.parent.content.size,l=o.tr.replaceWith(s,a.pos,e(n)),d=s+t,c=R.create(l.doc,d);return r(l.setSelection(c)),!0},Yr=e=>t=>Boolean(t.nodes[e]),Ur=[{type:Br.H1,$:Fr("Large Heading","looks_one"),command:qr((e=>e.nodes.heading.create({level:1}))),keyword:["h1","large heading"],enable:Yr("heading")},{type:Br.H2,$:Fr("Medium Heading","looks_two"),command:qr((e=>e.nodes.heading.create({level:2}))),keyword:["h2","medium heading"],enable:Yr("heading")},{type:Br.H3,$:Fr("Small Heading","looks_3"),command:qr((e=>e.nodes.heading.create({level:3}))),keyword:["h3","small heading"],enable:Yr("heading")},{type:Br.BulletList,$:Fr("Bullet List","format_list_bulleted"),command:qr((e=>e.nodes.bullet_list.createAndFill(null)),3),keyword:["bullet list","ul"],enable:Yr("bullet_list")},{type:Br.OrderedList,$:Fr("Ordered List","format_list_numbered"),command:qr((e=>e.nodes.ordered_list.createAndFill(null)),3),keyword:["ordered list","ol"],enable:Yr("ordered_list")},{type:Br.TaskList,$:Fr("Task List","checklist"),command:qr((e=>e.nodes.task_list_item.createAndFill(null)),3),keyword:["task list","task"],enable:Yr("task_list_item")},{type:Br.Image,$:Fr("Image","image"),command:qr((e=>e.nodes.image.createAndFill({src:""})),3),keyword:["image"],enable:Yr("image")},{type:Br.Quote,$:Fr("Quote","format_quote"),command:qr((e=>e.nodes.blockquote.createAndFill(null)),2),keyword:["quote","blockquote"],enable:Yr("blockquote")},{type:Br.Table,$:Fr("Table","table_chart"),command:qr((e=>io(e)),4),keyword:["table"],enable:Yr("table")},{type:Br.CodeFence,$:Fr("Code Fence","code"),command:qr((e=>e.nodes.fence.createAndFill(null))),keyword:["code"],enable:Yr("fence")},{type:Br.DivideLine,$:Fr("Divide Line","horizontal_rule"),command:qr((e=>e.nodes.hr.create())),keyword:["divider","hr"],enable:Yr("hr")}];var Gr,Jr,Xr,Zr,Qr,ei,ti,ni,oi,ri,ii,ai,si,li;(li=si||(si={}))[li.Empty=0]="Empty",li[li.Slash=1]="Slash";class di{constructor(){Gr.set(this,si.Empty),Jr.set(this,""),this.activeActions=Ur}clearStatus(){K(this,Gr,si.Empty,"f"),K(this,Jr,"","f")}setSlash(e=""){K(this,Gr,si.Slash,"f"),K(this,Jr,e,"f")}get cursorStatus(){return p(this,Gr,"f")}get filter(){return p(this,Jr,"f")}}Gr=new WeakMap,Jr=new WeakMap;class ci{constructor(e){this.status=e,this.handleKeyDown=(e,t)=>{const{cursorStatus:n,activeActions:o}=this.status;return n===si.Slash&&0!==o.length&&(t instanceof KeyboardEvent&&!!["ArrowUp","ArrowDown","Enter"].includes(t.key))},this.decorations=e=>{const{status:t}=this,n=Rn((({type:e})=>"paragraph"===e.name))(e.selection),o=1===e.selection.$from.depth;if(!n||!o)return void t.clearStatus();const r=n.pos,i=0===n.node.content.size,a="/"===n.node.textContent,s=n.node.textContent.startsWith("/");if(i){t.clearStatus();const o="Type / to use the slash commands...";return B.create(e.doc,[q.node(r,r+n.node.nodeSize,{class:"empty-node","data-text":o})])}if(a){t.setSlash();const o="Type to filter...";return B.create(e.doc,[q.node(r,r+n.node.nodeSize,{class:"empty-node is-slash","data-text":o})])}return s?(t.setSlash(n.node.textContent.slice(1)),null):(t.clearStatus(),null)}}}class mi{constructor(e,t){Xr.set(this,void 0),Zr.set(this,void 0),Qr.set(this,void 0),ei.set(this,void 0),ti.set(this,void 0),ni.set(this,(e=>{const{target:t}=e;if(!(t instanceof HTMLElement))return;const n=p(this,ei,"f");if(!n)return;const o=Object.values(Ur).find((({$:e})=>e.contains(t)));o&&(e.stopPropagation(),e.preventDefault(),o.command(n.state.schema)(n.state,n.dispatch))})),oi.set(this,(e=>{p(this,ti,"f")||K(this,ti,!0,"f");const{key:t}=e;if(p(this,Qr,"f").cursorStatus!==si.Slash)return;if(!["ArrowDown","ArrowUp","Enter"].includes(t))return;let n=p(this,Qr,"f").activeActions.findIndex((e=>e.$.classList.contains("active")));if(n<0&&(n=0),"ArrowDown"===t){const e=n===p(this,Qr,"f").activeActions.length-1?0:n+1;return p(this,Qr,"f").activeActions[n].$.classList.remove("active"),p(this,Qr,"f").activeActions[e].$.classList.add("active"),void be(p(this,Qr,"f").activeActions[e].$,{scrollMode:"if-needed",block:"nearest",inline:"nearest"})}if("ArrowUp"===t){const e=0===n?p(this,Qr,"f").activeActions.length-1:n-1;return p(this,Qr,"f").activeActions[n].$.classList.remove("active"),p(this,Qr,"f").activeActions[e].$.classList.add("active"),void be(p(this,Qr,"f").activeActions[e].$,{scrollMode:"if-needed",block:"nearest",inline:"nearest"})}p(this,Qr,"f").activeActions[n].command(p(this,ei,"f").state.schema)(p(this,ei,"f").state,p(this,ei,"f").dispatch),p(this,Qr,"f").activeActions[n].$.classList.remove("active")})),ri.set(this,(e=>{if(p(this,ti,"f"))return;const t=p(this,Qr,"f").activeActions.findIndex((e=>e.$.classList.contains("active")));t>=0&&p(this,Qr,"f").activeActions[t].$.classList.remove("active");const{target:n}=e;n instanceof HTMLElement&&n.classList.add("active")})),ii.set(this,(e=>{const{target:t}=e;t instanceof HTMLElement&&t.classList.remove("active")})),ai.set(this,(()=>{p(this,ti,"f")&&K(this,ti,!1,"f")})),K(this,Qr,e,"f"),K(this,Xr,(()=>{const e=document.createElement("div");return e.setAttribute("role","listbox"),e.setAttribute("tabindex","-1"),e.classList.add("slash-dropdown"),e.classList.add("hide"),e})(),"f"),K(this,ei,t,"f"),K(this,ti,!1,"f");const{parentNode:n}=t.dom;if(!n)throw new Error;K(this,Zr,n,"f"),n.appendChild(p(this,Xr,"f")),p(this,Zr,"f").addEventListener("mousemove",p(this,ai,"f")),Ur.filter((e=>e.enable(p(this,ei,"f").state.schema))).forEach((({$:e})=>{e.addEventListener("mouseenter",p(this,ri,"f")),e.addEventListener("mouseleave",p(this,ii,"f")),p(this,Xr,"f").appendChild(e)})),p(this,Zr,"f").addEventListener("mousedown",p(this,ni,"f")),p(this,Zr,"f").addEventListener("keydown",p(this,oi,"f"))}update(e){this.renderDropdown()&&this.calculatePosition(e)}destroy(){p(this,Zr,"f").removeEventListener("mousedown",p(this,ni,"f")),p(this,Zr,"f").removeEventListener("keydown",p(this,oi,"f")),p(this,Xr,"f").remove()}renderDropdown(){const{cursorStatus:e,filter:t}=p(this,Qr,"f");if(e!==si.Slash)return p(this,Xr,"f").classList.add("hide"),!1;const n=Ur.filter((e=>{e.$.classList.remove("active");return!!e.keyword.some((e=>e.includes(t.toLocaleLowerCase())))||(e.$.classList.add("hide"),!1)})).map((e=>(e.$.classList.remove("hide"),e)));return p(this,Qr,"f").activeActions=n,0===n.length?(p(this,Xr,"f").classList.add("hide"),!1):(n[0].$.classList.add("active"),p(this,Xr,"f").classList.remove("hide"),!0)}calculatePosition(e){In(e,p(this,Xr,"f"),((e,t)=>{let n=e.left,o=e.bottom;return n<0&&(n=0),window.innerHeight-e.bottom<t.height&&(o=e.top-t.height),[o,n]}))}}Xr=new WeakMap,Zr=new WeakMap,Qr=new WeakMap,ei=new WeakMap,ti=new WeakMap,ni=new WeakMap,oi=new WeakMap,ri=new WeakMap,ii=new WeakMap,ai=new WeakMap;const ui=new N(new class{constructor(){this.key=new F("milkdown-prosemirror-slash-plugin"),this.status=new di,this.props=new ci(this.status),this.view=e=>new mi(this.status,e)}}),pi=Ye(ui);var hi="_editor_1ktt5_1";const fi=({content:e,readOnly:t,onChange:n})=>{const o=((e,t=[])=>a.useCallback(((...t)=>e(...t)),t))((o=>{const r=(new Ln).config((r=>{r.set(bn,o),r.set(un,e),r.set(yn,{editable:()=>!t}),r.set(no,{markdown:n?[n]:[]})})).use(sr).use(ir).use(oo).use(ar).use(Ye([xe(),Me(null==i?void 0:i.drop)])).use(cr).use(Ir).use(Vr);var i;return t||r.use(pi),r}),[t,e]);return a.createElement("div",{className:hi},a.createElement(to,{editor:o}))},gi="https://unpkg.com/prism-themes/themes/prism-material-light.css",wi="https://unpkg.com/prism-themes/themes/prism-nord.css",ki=(e,t)=>{_.exports.useEffect((()=>{var e;const n=Boolean(null==(e=window.matchMedia)?void 0:e.call(window,"(prefers-color-scheme: dark)").matches);t(n)}),[t]),_.exports.useEffect((()=>{document.documentElement.setAttribute("data-theme",e?"dark":"light");(()=>{const e=document.querySelector("#prism-theme");if(e)return e;const t=document.createElement("link");return t.id="prism-theme",t.setAttribute("rel","stylesheet"),document.head.appendChild(t),t})().setAttribute("href",e?wi:gi)}),[e])};var vi,yi;(yi=vi||(vi={}))[yi.Home=0]="Home",yi[yi.Demo=1]="Demo",yi[yi.Page=2]="Page";const bi=e=>"/"===e.pathname?0:"/online-demo"===e.pathname?1:2;function xi(){const e=Ee();return[bi(e),e]}var Mi,Ei,Ci={container:"_container_zaut6_1",code:"_code_zaut6_8",milk:"_milk_zaut6_36",twoSide:"_twoSide_zaut6_42"};(Ei=Mi||(Mi={}))[Ei.Default=0]="Default",Ei[Ei.TwoSide=1]="TwoSide";const _i=({value:e,onChange:t,lock:n,dark:o})=>{const r=a.useRef(null);return a.useEffect((()=>{if(!r.current)return;const i=function(e,t,n,o,r){return new Ce({state:_e.create({doc:r,extensions:[Ne,Te(),Ce.updateListener.of((e=>{e.focusChanged&&(n.current=e.view.hasFocus),e.docChanged&&t((()=>e.state.doc.toString()))})),Ce.theme({"&.cm-focused":{outline:"none"}},{dark:o})]}),parent:e})}(r.current,t,n,o,e);return()=>{i.destroy()}}),[t,e,n,o]),a.createElement("div",{className:Ci.code},a.createElement("div",{ref:r}))},Ni=({content:e,mode:t,isDarkMode:n})=>{const o=a.useRef(e),r=a.useRef(e),[i,s]=a.useState(0),[l,d]=a.useState(0),c=a.useCallback((()=>s((e=>e+1))),[]),m=a.useCallback((()=>d((e=>e+1))),[]),u=a.useRef(!1),p=a.useCallback((e=>{if(u.current)return;const t=e();t!==o.current&&(o.current=t,m())}),[m]),h=a.useCallback((e=>{const t=e();t!==r.current&&(r.current=t,c())}),[c]),f=[Ci.container,1===t?Ci.twoSide:""].join(" ");return a.createElement("div",{className:f},a.createElement("div",{className:Ci.milk},a.createElement(fi,{key:"milkdown"+i.toString(),content:r.current,onChange:p})),a.createElement(_i,{key:"code"+l.toString(),value:o.current,onChange:h,dark:n,lock:u}))};var Ti={container:"_container_1thr1_1",header:"_header_1thr1_11",homepage:"_homepage_1thr1_31",part:"_part_1thr1_35",icon:"_icon_1thr1_39",logo:"_logo_1thr1_52",mode:"_mode_1thr1_86"};const Si=`${Ti.icon} material-icons-outlined`,Ai=({onToggle:e,scrolled:t,editorMode:n,onEditorModeToggle:o,isDarkMode:r,setIsDarkMode:i})=>{const[l,d]=a.useState(!0),[c,m]=a.useState(!1),[u]=xi();a.useEffect((()=>{u!==vi.Page?(d(!1),u!==vi.Demo?m(!1):m(!0)):d(!0)}),[u]),ki(r,i);const p=[Ti.container,u!==vi.Home&&t?"":Ti.homepage].join(" ");return a.createElement("div",{className:p},a.createElement("header",{className:Ti.header},a.createElement("div",{className:Ti.part},l&&a.createElement("span",{className:Si,onClick:t=>{null==e||e(),t.stopPropagation()}},"menu"),a.createElement(s,{to:"/",className:Ti.logo},a.createElement("img",{src:"/milkdown/milkdown-mini.svg"}),a.createElement("span",{style:{opacity:t?0:1,transition:"all 0.2s ease-in"}},"Milkdown"))),a.createElement("div",{className:Ti.part},c&&a.createElement("span",{onClick:()=>o(),className:[Si,Ti.mode].join(" ")},n===Mi.Default?"chrome_reader_mode":"wysiwyg"),a.createElement("span",{onClick:()=>i(!r),className:Si},r?"light_mode":"dark_mode"),a.createElement("a",{href:"https://github.com/Saul-Mirone/milkdown",target:"_blank",className:Ti.github},a.createElement("span",{className:Si},"open_in_new")))))};var Pi={sidebar:"_sidebar_k490v_1",fold:"_fold_k490v_13",hr:"_hr_k490v_28",sectionTitle:"_sectionTitle_k490v_35",link:"_link_k490v_44",active:"_active_k490v_56"};const Li=({title:e,link:t})=>a.createElement(Se,{className:Pi.link,activeClassName:Pi.active,to:t},e),Oi=({title:e,items:t})=>a.createElement("section",{className:Pi.section},a.createElement("section",{className:Pi.sectionTitle},e),t.map(((e,t)=>a.createElement(Li,i({key:t.toString()},e))))),Ri=({sections:e,setDisplay:t,display:n})=>{const[o,r]=xi();a.useEffect((()=>{o===vi.Page?document.documentElement.clientWidth<1080?t(!1):t(!0):t(!1)}),[o,t,r]);const s=a.useMemo((()=>`${Pi.sidebar} ${n?"":Pi.fold}`),[n]);return a.createElement("nav",{className:s},e.map(((t,n)=>a.createElement("section",{key:n.toString()},a.createElement(Oi,i({key:n.toString()},t)),n<e.length-1&&a.createElement("hr",{className:Pi.hr})))))};const ji=[{title:"Guide",items:[{title:"Why Milkdown",link:"/why-milkdown",content:"# Why Milkdown\n\nThere are kinds of different markdown editors, such as [Typora](https://typora.io/), [tui](https://github.com/nhn/tui.editor) and [Bear](https://bear.app/).\nThey work pretty well for writing notes in markdown on different platforms. So why bother making Milkdown?\n\nMilkdown aims to provide a **open source solution** for developers to make their editors more powerful, attractive, and can be used everywhere.\n\n---\n\n## Open Source & Easy to Integration\n\nDifferent from industry apps such as [Notion](https://notion.so) and [Typora](https://typora.io/),\nMilkdown is open source and fully free. You can integrate it everywhere legally.\n\n> If you like milkdown, please consider to fund me to help the maintenance.\n\n## Plugin Driven\n\nMilkdown treats every features as plugins.\nWith this pattern, developers can choose what they need in an editor instead of bundle all features even they won't need.\nDevelopers can extends the plugin to satisfy their habit such as define a vim keymap plugin.\n\n## Reliable\n\nMilkdown is powered by [Prosemirror](https://prosemirror.net/) and [Remark](https://github.com/remarkjs/remark), which has large community and stands the test of industry.\nWhat's more, plugins in prosemirror and remark community can be easily reused to build a Milkdown plugin.\n\n## Themable & Hackable\n\nThemes and plugins for Milkdown can be shared and installed using npm packages.\n"},{title:"Getting Started",link:"/getting-started",content:"# Getting Started\n\n## Overview\n\nMilkdown is a lightweight but powerful WYSIWYG markdown editor. It's made up by two parts:\n\n-   A tiny core which provide markdown parser, serializer and kinds of plugin loader.\n-   Lots of plugins provide syntax, commands and components.\n\nWith this pattern you can enable or disable any custom syntax you like, such as table, latex and slash commands.\nYou can even create your own plugin to support your awesome idea.\n\n> 🐄 _Fun fact: The Milkdown documentation is rendered by milkdown._\n\n---\n\n## Features\n\n-   [x] 📝 **WYSIWYG Markdown** - Write markdown in an elegant way\n-   [x] 🎨 **Themable** - Theme can be shared and used with npm packages\n-   [x] 🎮 **Hackable** - Support your awesome idea by plugin\n-   [x] 🦾 **Reliable** - Built on top of [prosemirror](https://prosemirror.net/) and [remark](https://github.com/remarkjs/remark)\n-   [x] ⚡️ **Slash & Tooltip** - Write fast for everyone, driven by plugin\n-   [x] 🧮 **Math** - LaTeX math equations support, driven by plugin\n-   [x] 📊 **Table** - Table support with fluent ui, driven by plugin\n\n## Tech Stack\n\nMilkdown is built on top of these tools:\n\n-   [Prosemirror](https://prosemirror.net/) and it's community - A toolkit for building rich-text editors on the web\n-   [Remark](https://github.com/remarkjs/remark) and it's community - Markdown parser done right\n-   [Postcss](https://postcss.org/) - Powerful css tool to build theme\n-   [TypeScript](https://www.typescriptlang.org/) - Developed by typescript\n-   [Prism](https://prismjs.com/) - Code snippets support\n-   [Katex](https://katex.org/) - LaTex math rendering\n\n---\n\n## First editor\n\nWe have some pieces for you to create a very minimal editor:\n\n> **We use [material icon](https://fonts.google.com/icons) and [Roboto Font](https://fonts.google.com/specimen/Roboto) in our theme**.\n> Make sure to include them for having the best experience.\n\n```typescript\nimport { Editor } from '@milkdown/core';\nimport { commonmark } from '@milkdown/preset-commonmark';\n\n// import theme and plugin style\nimport '@milkdown/theme-nord/lib/theme.css';\nimport '@milkdown/preset-commonmark/lib/style.css';\n\nnew Editor().use(commonmark).create();\n```\n\n## Taste the plugin\n\nNow let's add an **undo & redo** support for our editor:\n\n```typescript\nimport { Editor } from '@milkdown/core';\nimport { commonmark } from '@milkdown/preset-commonmark';\nimport { history } from '@milkdown/plugin-history';\n\n// import theme and plugin style\nimport '@milkdown/theme-nord/lib/theme.css';\nimport '@milkdown/preset-commonmark/lib/style.css';\n\nnew Editor().use(commonmark).use(history).create();\n```\n\n> `Mod` is `Cmd` for mac and `Ctrl` for other platforms.\n\nNow we can undo a editor by using `Mod-z` and redo it by using `Mod-y` or `Shift-Mod-Z`.\n"},{title:"Interacting with Editor",link:"/interacting-with-editor",content:"# Interacting with Editor\n\n## Register to DOM\n\nBy default, milkdown will create editor on `document.body`. You can also point out which dom you want it to load on:\n\n```typescript\nimport { rootCtx } from '@milkdown/core';\n\nnew Editor().config((ctx) => {\n    ctx.set(rootCtx, document.querySelector('#editor'));\n});\n```\n\n## Setting Default Value\n\n### Markdown\n\nYou can set a markdown string as the default value of the editor.\n\n```typescript\nimport { defaultValueCtx } from '@milkdown/core';\n\nconst defaultValue = '# Hello milkdown';\nnew Editor().config((ctx) => {\n    ctx.set(defaultValueCtx, defaultValue);\n});\n```\n\nAnd then the editor will be rendered with default value.\n\n### Dom\n\nYou can also use HTML as default value.\n\nLet's assume that we have following html snippets:\n\n```html\n<div id=\"pre\">\n    <h1>Hello milkdown!</h1>\n</div>\n```\n\nThen we can use it as defaultValue with a `type` specification:\n\n```typescript\nimport { defaultValueCtx } from '@milkdown/core';\n\nconst defaultValue = {\n    type: 'html',\n    dom: document.querySelector('#pre'),\n};\nnew Editor().config((ctx) => {\n    ctx.set(defaultValueCtx, defaultValue);\n});\n```\n\n### JSON\n\nWe can also use JSON object as default value.\n\nThis JSON object can be get by listener through [lister-plugin](), for example:\n\n```typescript\nimport { listener, listenerCtx } from '@milkdown/plugin-listener';\n\nlet jsonOutput;\nconst listener = {\n    docs: [\n        (node) => {\n            jsonOutput = node.toJSON();\n        },\n    ],\n};\n\nnew Editor()\n    .config((ctx) => {\n        ctx.set(listenerCtx, listener);\n    })\n    .use(listener);\n```\n\nThen we can use this `jsonOutput` as default Value:\n\n```typescript\nimport { defaultValueCtx } from '@milkdown/core';\n\nconst defaultValue = {\n    type: 'json',\n    value: jsonOutput,\n};\nnew Editor().config((ctx) => {\n    ctx.set(defaultValueCtx, defaultValue);\n});\n```\n\n---\n\n## Adding Listener\n\nAs mentioned above, you can add listener to the editor, get values when needed.\n\n### Markdown Listener\n\nYou can add markdown listener to get the markdown string output when needed.\n\nYou can add as many listeners as you want, all the listener will be triggered in one change.\n\n```typescript\nimport { listener, listenerCtx } from '@milkdown/plugin-listener';\n\nlet output = '';\nconst listener = {\n    markdown: [\n        (getMarkdown) => {\n            if (needGetOutput) {\n                output = getMarkdown();\n            }\n        },\n        (getMarkdown) => {\n            if (needLog) {\n                console.log(getMarkdown());\n            }\n        },\n    ],\n};\n\nnew Editor()\n    .config((ctx) => {\n        ctx.set(listenerCtx, listener);\n    })\n    .use(listener);\n```\n\n### Doc Listener\n\nYou can also listen to the [raw prosemirror document node](https://prosemirror.net/docs/ref/#model.Node), and do things you want.\n\n```typescript\nimport { listener, listenerCtx } from '@milkdown/plugin-listener';\n\nlet jsonOutput;\n\nconst listener = {\n    docs: [\n        (node) => {\n            jsonOutput = node.toJSON();\n        },\n    ],\n};\n\nnew Editor()\n    .config((ctx) => {\n        ctx.set(listenerCtx, listener);\n    })\n    .use(listener);\n```\n\n---\n\n## Readonly Mode\n\nYou can set the editor to readonly mode by set the `editable` property.\n\n```typescript\nimport { editorViewOptionsCtx } from '@milkdown/core';\n\nlet readonly = false;\n\nconst editable: () => !readonly;\n\nnew Editor().config((ctx) => {\n    ctx.set(editorViewOptionsCtx, { editable });\n});\n\n// set to readonly after 5 secs.\nsetTimeout(() => {\n    readonly = true;\n}, 5000);\n```\n\n---\n\n## Using Action\n\nYou can use action to get the context value in a running editor on demand.\n\nFor example, get the markdown string by action:\n\n```typescript\nimport { Editor, editorViewCtx, serializerCtx } from '@milkdown/core';\n\nasync function playWithEditor() {\n    const editor = await new Editor().use(commonmark).create();\n\n    const getMarkdown = () =>\n        editor.action((ctx) => {\n            const editorView = ctx.get(editorViewCtx);\n            const serializer = ctx.get(serializerCtx);\n            return serializer(editorView.state.doc);\n        });\n\n    // get markdown string:\n    getMarkdown();\n}\n```\n"},{title:"Styling",link:"/styling",content:"# Styling\n\nMilkdown is headless, there is no style is provided by default.\nThat means you can import themes or even create your own themes to control the style of your editor.\n\n## Option 1: Style the plain HTML\n\nThe whole editor is rendered inside of a container with the class `.milkdown`.\nAnd the editable part is wrapped in the container with the class `editor`.\nYou can use that to scope your styling to the editor content:\n\n```css\n.milkdown .editor p {\n    margin: 1rem 0;\n}\n```\n\nFor every node/mark, milkdown provides a default className,\nfor example, `paragraph` for every p node:\n\n```css\n.milkdown .editor .paragraph {\n    margin: 1rem 0;\n}\n```\n\n## Option 2: Add custom class name\n\nYou can also use `configure` method to add class to node/mark.\nIn this way, you can use css tools like `tailwind` css.\n\n```typescript\nimport { commonmark, Paragraph, Heading } from '@milkdown/commonmark';\n\nconst nodes = commonmark\n    .configure(Paragraph, {\n        className: () =>\n            'my-custom-paragraph'\n    })\n    .configure(Heading, {\n        className: (attrs) =>\n            `my-custom-heading my-h${attrs.level}`\n    })\n\nnew Editor({ ...  }).use(nodes);\n```\n"},{title:"Keyboard Shortcuts",link:"/keyboard-shortcuts",content:"# Keyboard Shortcuts\n\nKeyboard shortcuts are provided by default from both presets and plugins.\nDepending on your behavior, you might want to change them to what you like.\n\n---\n\n## Default Shortcuts Table\n\n> `Mod` is `Cmd` on macOS and `Ctrl` for windows/linux.\n\n### Essentials\n\n| Action    | Key       |\n| --------- | --------- |\n| Copy      | Mod-c     |\n| Cut       | Mod-x     |\n| Paste     | Mod-v     |\n| New Line  | Enter     |\n| Exit Code | Mod-Enter |\n\n### History\n\n| Action | Key         |\n| ------ | ----------- |\n| Undo   | Mod-z       |\n| Redo   | Mod-Shift-z |\n\n### Mark\n\n| Action         | Key       |\n| -------------- | --------- |\n| Bold           | Mod-b     |\n| Italic         | Mod-i     |\n| Inline Code    | Mod-e     |\n| Strike Through | Mod-Alt-x |\n\n### Paragraph\n\n| Action      | Key         |\n| ----------- | ----------- |\n| Normal Text | Mod-Alt-0   |\n| H1          | Mod-Alt-1   |\n| H2          | Mod-Alt-2   |\n| H3          | Mod-Alt-3   |\n| H4          | Mod-Alt-4   |\n| H5          | Mod-Alt-5   |\n| H6          | Mod-Alt-6   |\n| Code Fence  | Mod-Alt-c   |\n| Line Break  | Shift-Enter |\n\n### List\n\n| Action         | Key       |\n| -------------- | --------- |\n| Ordered List   | Mod-Alt-7 |\n| Bullet List    | Mod-Alt-8 |\n| Task List      | Mod-Alt-9 |\n| Sink List Item | Mod-]     |\n| Lift List Item | Mod-[     |\n\n### Table\n\n| Action               | Key       |\n| -------------------- | --------- |\n| Next Cell            | Mod-]     |\n| Prev Cell            | Mod-[     |\n| Exit Table and Break | Mod-Enter |\n\n---\n\n## Configure Shortcuts\n\nYou can configure shortcuts just like configure their styles:\n\n```typescript\nimport { commonmark, blockquote, SupportedKeys } from '@milkdown/preset-commonmark';\n\nconst nodes = commonmark.configure(blockquote, {\n    keymap: {\n        [SupportedKeys.Blockquote]: 'Mod-Shift-b',\n        // or you may want to bind multiple keys:\n        [SupportedKeys.Blockquote]: ['Mod-Shift-b', 'Mod-b'],\n    },\n});\n\nnew Editor().use(nodes);\n```\n\nYou can inspect the `SupportedKeys` enum to find out the supported commands that can be configured.\n\nIf there is no supported commands for the behavior you expect, you can write a [prosemirror keymap plugin](https://github.com/ProseMirror/prosemirror-keymap) to do this.\nYou can read the [building plugins](/#/building-plugins) section to get further information.\n"}]},{title:"Integrations",items:[{title:"React",link:"/react",content:"# React\n\nWe provide react support out of box.\n\n## Install the Dependencies\n\nExcept the `@milkdown/core`, preset and theme.\nWe need to install the `@milkdown/react`,\nwhich provide lots of abilities for react in milkdown.\n\n```bash\n# install with npm\nnpm install @milkdown/react @milkdown/core\n\n# optional\nnpm install @milkdown/preset-commonmark @milkdown/theme-nord\n```\n\n## Create a Component\n\nCreate a component is pretty easy.\n\n```typescript\nimport React from 'react';\nimport { Editor, rootCtx } from '@milkdown/core';\nimport { ReactEditor, useEditor } from '@milkdown/react';\nimport { commonmark } from '@milkdown/preset-commonmark';\n\nimport '@milkdown/theme-nord/lib/theme.css';\nimport '@milkdown/preset-commonmark/lib/style.css';\n\nexport const MilkdownEditor: React.FC = () => {\n    const editor = useEditor((root) =>\n        new Editor()\n            .config((ctx) => {\n                ctx.set(rootCtx, root);\n            })\n            .use(commonmark),\n    );\n\n    return <ReactEditor editor={editor} />;\n};\n```\n\n## Custom Component for Node\n\nWe provide custom node support out of box.\n\n```typescript\nimport React from 'react';\nimport { Editor, rootCtx } from '@milkdown/core';\nimport { ReactEditor, useEditor, useNodeCtx } from '@milkdown/react';\nimport { commonmark, paragraph, image } from '@milkdown/preset-commonmark';\n\nconst CustomParagraph: React.FC = ({ children }) => <div className=\"react-paragraph\">{children}</div>;\n\nconst CustomImage: React.FC = ({ children }) => {\n    const { node } = useNodeCtx();\n\n    return (\n        <img\n            className=\"react-image\"\n            src={node.attrs.src}\n            alt={node.attrs.alt}\n            title={node.attrs.tittle}\n        />;\n    )\n};\n\nexport const MilkdownEditor: React.FC = () => {\n    const editor = useEditor((root, renderReact) => {\n        const nodes = commonmark\n            .configure(paragraph, { view: renderReact(CustomParagraph) })\n            .configure(image, { view: renderReact(CustomImage) });\n\n        return new Editor()\n            .config((ctx) => {\n                ctx.set(rootCtx, root);\n            })\n            .use(nodes);\n    });\n\n    return <ReactEditor editor={editor} />;\n};\n```\n\nValues can be get by `useNodeCtx`:\n\n-   _editor_:\n\n    Instance of current milkdown editor.\n\n-   _node_:\n\n    Current prosemirror node need to be rendered.\n    Equal to [node parameter in nodeViews](https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews).\n\n-   _view_:\n\n    Current prosemirror editor view.\n    Equal to [view parameter in nodeViews](https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews).\n\n-   _getPos_:\n\n    Method to get position of current prosemirror node.\n    Equal to [getPos parameter in nodeViews](https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews).\n\n-   _decorations_:\n\n    Decorations of current prosemirror node.\n    Equal to [decorations parameter in nodeViews](https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews).\n"},{title:"Vue",link:"/vue",content:"# Vue\n\nWe provide vue support out of box.\n\n> Vue version should be 3.x\n\n## Install the Dependencies\n\nExcept the `@milkdown/core`, preset and theme.\nWe need to install the `@milkdown/vue`,\nwhich provide lots of abilities for vue in milkdown.\n\n```bash\n# install with npm\nnpm install @milkdown/vue @milkdown/core\n\n# optional\nnpm install @milkdown/preset-commonmark @milkdown/theme-nord\n```\n\n## Create a Component\n\nCreate a component is pretty easy.\n\n```typescript\nimport { defineComponent } from 'vue';\nimport { Editor, rootCtx } from '@milkdown/core';\nimport { VueEditor, useEditor } from '@milkdown/vue';\nimport { commonmark } from '@milkdown/preset-commonmark';\n\nimport '@milkdown/theme-nord/lib/theme.css';\nimport '@milkdown/preset-commonmark/lib/style.css';\n\nexport const MilkdownEditor = defineComponent(() => {\n    const editor = useEditor((root) =>\n        new Editor()\n            .config((ctx) => {\n                ctx.set(rootCtx, root);\n            })\n            .use(commonmark),\n    );\n\n    return () => <VueEditor editor={editor} />;\n});\n```\n\n## Custom Component for Node\n\nWe provide custom node support out of box.\n\n```typescript\nimport { inject, defineComponent, DefineComponent } from 'vue';\nimport { Editor, rootCtx } from '@milkdown/core';\nimport { VueEditor, useEditor } from '@milkdown/vue';\nimport { commonmark, paragraph, image } from '@milkdown/preset-commonmark';\nimport { Node } from 'prosemirror-model';\n\nconst CustomParagraph: DefineComponent = defineComponent({\n    name: 'my-paragraph',\n    setup(_, { slots }) {\n        return () => <div class=\"vue-paragraph\">{slots.default?.()}</div>;\n    },\n});\n\nconst CustomImage: DefineComponent = defineComponent({\n    name: 'my-image',\n    setup() {\n        const node: Node = inject('node', {} as Node);\n\n        return () => <img class=\"vue-image\" src={node.attrs.src} alt={node.attrs.alt} />;\n    },\n});\n\nexport const MyEditor = defineComponent(() => {\n    const editor = useEditor((root, renderVue) => {\n        const nodes = commonmark\n            .configure(paragraph, {\n                view: renderVue(CustomParagraph),\n            })\n            .configure(image, {\n                view: renderVue(CustomImage),\n            });\n        return new Editor()\n            .config((ctx) => {\n                ctx.set(rootCtx, root);\n            })\n            .use(nodes);\n    });\n\n    return () => <VueEditor editor={editor} />;\n});\n```\n\nValues can be inject in custom component:\n\n-   _editor_:\n\n    Instance of current milkdown editor.\n\n-   _node_:\n\n    Current prosemirror node need to be rendered.\n    Equal to [node parameter in nodeViews](https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews).\n\n-   _view_:\n\n    Current prosemirror editor view.\n    Equal to [view parameter in nodeViews](https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews).\n\n-   _getPos_:\n\n    Method to get position of current prosemirror node.\n    Equal to [getPos parameter in nodeViews](https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews).\n\n-   _decorations_:\n\n    Decorations of current prosemirror node.\n    Equal to [decorations parameter in nodeViews](https://prosemirror.net/docs/ref/#view.EditorProps.nodeViews).\n"}]},{title:"Plugins",items:[{title:"Using Plugins",link:"/using-plugins",content:"# Using Plugins\n\n## Tasting a Plugin\n\nIn fact, all features in milkdown are supported by plugin.\nThe `commonmark` we use is a plugin. Now we can try more plugins:\n\n```typescript\nimport { Editor } from '@milkdown/core';\n\nimport '@milkdown/theme-nord/lib/theme.css';\n\nimport { commonmark } from '@milkdown/preset-commonmark';\nimport '@milkdown/preset-commonmark/lib/style.css';\n\nimport { tooltip } from '@milkdown/plugin-tooltip';\nimport '@milkdown/plugin-tooltip/lib/style.css';\n\nnew Editor().use(commonmark).use(tooltip).create();\n```\n\n---\n\n## Finding Plugins\n\n### Official Plugins\n\nMilkdown provides the following official plugins:\n\n-   [@milkdown/preset-commonmark](https://www.npmjs.com/package/@milkdown/preset-commonmark)\n\n    Add [commonmark](https://commonmark.org/) syntax support.\n\n-   [@milkdown/preset-gfm](https://www.npmjs.com/package/@milkdown/preset-gfm)\n\n    Add [gfm](https://github.github.com/gfm/) syntax support.\n\n-   [@milkdown/plugin-history](https://www.npmjs.com/package/@milkdown/plugin-history)\n\n    Add undo & redo support.\n\n-   [@milkdown/plugin-clipboard](https://www.npmjs.com/package/@milkdown/plugin-clipboard)\n\n    Add markdown copy & paste support.\n\n-   [@milkdown/plugin-cursor](https://www.npmjs.com/package/@milkdown/plugin-cursor)\n\n    Add drop & gap cursor.\n\n-   [@milkdown/plugin-listener](https://www.npmjs.com/package/@milkdown/plugin-listener)\n\n    Add listener support.\n\n-   [@milkdown/plugin-table](https://www.npmjs.com/package/@milkdown/plugin-table)\n\n    Add table syntax support.\n\n-   [@milkdown/plugin-prism](https://www.npmjs.com/package/@milkdown/plugin-prism)\n\n    Add [prism](https://prismjs.com/) support for code block highlight.\n\n-   [@milkdown/plugin-math](https://www.npmjs.com/package/@milkdown/plugin-math)\n\n    Add [LaTeX](https://en.wikipedia.org/wiki/LaTeX) support for math.\n\n-   [@milkdown/plugin-tooltip](https://www.npmjs.com/package/@milkdown/plugin-tooltip)\n\n    Add selected tooltip for text.\n\n-   [@milkdown/plugin-slash](https://www.npmjs.com/package/@milkdown/plugin-slash)\n\n    Add slash commands support.\n\n### Community plugins\n\nCheck out [awesome-milkdown](https://github.com/Saul-Mirone/awesome-milkdown) to find community plugins - you can also submit a PR to list your plugins there.\n"},{title:"Integrating Plugins",link:"/integrating-plugins",content:"# Integrating Plugins\n\nWe provide some methods for users to integrate exists plugins of remark and prosemirror.\n\n---\n\n## Remark Plugin\n\nUsed to enable remark plugin.\n\n```typescript\nimport { remarkPluginFactory } from '@milkdown/core';\n\n// equal to\n// remark.use(someRemarkPlugin);\nconst remarkPlugin = remarkPluginFactory(someRemarkPlugin);\n\n// multiple\nconst remarkPlugin = remarkPluginFactory([someRemarkPlugin, someOtherRemarkPlugin]);\n\n// use\nmilkdown.use(remarkPlugin);\n```\n\n---\n\n## Prosemirror Plugin\n\nUsed to enable prosemirror plugin.\n\n```typescript\nimport { prosePluginFactory } from '@milkdown/core';\n\n// equal to\nconst prosePlugin = prosePluginFactory(someProsemirrorPlugin);\n\n// multiple\nconst prosePlugin = prosePluginFactory([someProsePlugin, someOtherProsePlugin]);\n\n// use\nmilkdown.use(prosePlugin);\n```\n"},{title:"Node & Mark",link:"/node-and-mark",content:"# Node & Mark\n\nNode and Mark are two special atoms that used to define prosemirror [Node](https://prosemirror.net/docs/ref/#model.Node) and [Mark](https://prosemirror.net/docs/ref/#model.Mark).\n\n## Overview\n\nUsers can easily define a node by the following code:\n\n```typescript\nimport { nodeFactory } from '@milkdown/core';\n\nconst id = 'paragraph';\nconst paragraph = nodeFactory({\n    id,\n    schema: {\n        content: 'inline*',\n        group: 'block',\n        parseDOM: [{ tag: 'p' }],\n        toDOM: () => ['p', { class: 'paragraph' }, 0],\n    },\n    parser: {\n        match: (node) => node.type === id,\n        runner: (state, node, type) => {\n            state.openNode(type).next(node.children).closeNode();\n        },\n    },\n    serializer: {\n        match: (node) => node.type.name === id,\n        runner: (state, node) => {\n            state.openNode('paragraph').next(node.content).closeNode();\n        },\n    },\n});\n```\n\n---\n\n## Properties\n\n**Required.** There are 4 required properties and 3 optional properties need to be implemented by every node/mark.\n\n### id\n\n**Required.** The identifier of the node/mark, will be used as key of prosemirror schema.\n\n### schema\n\n**Required.** The prosemirror [schema](https://prosemirror.net/docs/ref/#model.Schema) specification of this node/mark.\n\n### parser\n\n**Required.** The parser specification, used to register the node/mark in parser.\n\n### serializer\n\n**Required.** The serializer specification, used to serialize the node/mark into string in serializer.\n\n### inputRules?\n\n**Optional.** The prosemirror [input rules](https://prosemirror.net/docs/ref/#inputrules.InputRule) this node/mark creates.\n\n### keymap?\n\n**Optional.** The prosemirror [key map](https://prosemirror.net/docs/ref/#keymap) this node/mark creates.\n\n### view?\n\n**Optional.** The prosemirror [node view](https://prosemirror.net/docs/ref/#view.NodeView) of this node/mark.\n\n---\n\n> You can find more examples in the official repositories like [preset-commonmark](https://github.com/Saul-Mirone/milkdown/tree/main/packages/preset-commonmark) and [preset-gfm](https://github.com/Saul-Mirone/milkdown/tree/main/packages/preset-gfm).\n"},{title:"Parser",link:"/parser",content:"# Parser\n\nParser is used to transform from markdown string to UI elements.\n\n## Transform Steps\n\nThe transformation will have following steps:\n\n1. The markdown string will be given to [remark-parse](https://github.com/remarkjs/remark/tree/main/packages/remark-parse) to compile into AST.\n2. The remark AST will be traversed by milkdown parser. The milkdown parser is generated by the parser property of nodes and marks and generate a prosemirror node tree as the result.\n3. The prosemirror node will rendered by prosemirror and generate the UI elements.\n\n## Example\n\nFor every node, there will be a parser specification which has the following structure:\n\n```typescript\nimport { nodeFactory } from '@milkdown/core';\n\nconst myNode = nodeFactory({\n    // other props...\n    parser: {\n        match: (node) => node.type === 'my-node',\n        runner: (state, node, type) => {\n            state.openNode(type).next(node.children).closeNode();\n        },\n    },\n});\n```\n\n## Parser Specification\n\nThe parser specification has 2 props:\n\n-   _match_: match the target remark node that need to be handled by this runner.\n\n-   _runner_: the function that transform the remark into prosemirror node, it has 3 parameters:\n\n    -   _state_: tools used to generate the prosemirror node.\n    -   _node_: the remark node that need to be handled.\n    -   _type_: the prosemirror _[nodeType](https://prosemirror.net/docs/ref/#model.NodeType)_ of current node,\n        defined by `schema` property of current node.\n\n## Parser State\n\nThe parser state is used to generate the prosemirror node,\nit provides several useful methods to make the transformation pretty simple.\n\nFirst of all, we should keep in mind that the tree we need to handle has following structure:\n\n```typescript\ninterface NodeTree {\n    type: string;\n    children: NodeTree[];\n    [x: string]: unknown;\n}\n```\n\nThen, it's easy to understand our state API.\n\n### openNode & closeNode\n\n`openNode` method will open a node, and all nodes created after this method will be set as the children of the node until a `closeNode` been called.\n\nYou can imagine `openNode` as the left half of parenthesis and `closeNode` as the right half. For nodes have children, your runner should just take care of the node itself and let other runners to handle the children.\n\nYou can pass the node's attributes as the second parameter for `openNode`.\n\n### addNode\n\n`addNode` means just add a node without open or close it. It's useful for nodes which don't have children.\n\nYou can pass the node's attributes as the second parameter.\n\n### next\n\n`next` give the node or node list back to the state and the state will find a proper runner (by `match` method) to handle it.\n\n### openMark & closeMark\n\nThese two APIs are pretty like `openNode` and `closeNode`, but just for marks.\n\nYou can pass the marks's attributes as the second parameter for `openMark`.\n"},{title:"Serializer",link:"/serializer",content:"# Serializer\n\nSerializer is used to transform from UI elements to markdown string.\n\n## Transform Steps\n\nThe transformation steps are almost opposite to the steps in parser.\n\n1. For the current UI status, there will be a prosemirror node tree to represent it.\n2. The prosemirror node tree will be traversed by milkdown serializer. The milkdown serializer is generated by the serializer property of nodes and marks and generate a remark AST as the result.\n3. The remark AST will by transformed into markdown string through [remark-stringify](https://github.com/remarkjs/remark/tree/main/packages/remark-stringify).\n\n## Example\n\nFor every node, there will be a serializer specification which has the following structure:\n\n```typescript\nimport { nodeFactory } from '@milkdown/core';\n\nconst MyNode = nodeFactory({\n    // other props...\n    serializer = {\n        match: (node) => node.type.name === 'my-node',\n        runner: (state, node) => {\n            state.openNode('my-node').next(node.content).closeNode();\n        },\n    },\n});\n```\n\n## Serializer Specification\n\nThe serializer specification has 2 props:\n\n-   _match_: match the target prosemirror node that need to be handled by this runner.\n\n-   _runner_: the function that transform the prosemirror node into remark AST, it has 2 parameters:\n\n    -   _state_: tools used to generate the remark AST.\n    -   _node_: the prosemirror node that need to be handled.\n\n## Serializer State\n\nThe serializer state is used to generate the remark AST,\nit provides several useful methods to make the transformation pretty simple.\n\n### openNode & closeNode\n\n`openNode` method will open a node, and all nodes created after this method will be set as the children of the node until a `closeNode` been called.\n\nYou can imagine `openNode` as the left half of parenthesis and `closeNode` as the right half. For nodes have children, your runner should just take care of the node itself and let other runners to handle the children.\n\nParameters:\n\n-   _type_: the type of the AST.\n-   _value_: the value of the remark AST.\n-   _props_: the properties of the AST.\n\nThe props will be spread, for example:\n\n```typescript\nopenNode('my-node', undefined, { foo: true, bar: 0 });\n// will generate:\nconst generatedCode = {\n    type: 'my-node',\n    foo: true,\n    bar: 0,\n    children: [\n        /* some children */\n    ],\n};\n```\n\n### addNode\n\n`addNode` means just add a node without open or close it. It's useful for nodes which don't have content.\n\nParameters:\n\n-   _type_: the type of the AST.\n-   _children_: a markdown node list as the children of the AST.\n-   _value_: the value of the remark AST.\n-   _props_: the properties of the AST.\n\n### next\n\n`next` give the node or node list back to the state and the state will find a proper runner (by `match` method) to handle it.\n\n### withMark\n\n`withMark` is used when current node has marks, the serializer will auto combine marks nearby.\n\nParameters:\n\n-   _mark_: the mark of current node.\n-   _type_: the type of the AST.\n-   _value_: the value of the remark AST.\n-   _props_: the properties of the AST.\n"},{title:"Example: Custom Syntax",link:"/example-custom-syntax",content:"# Example: Custom Syntax\n\nGenerally, if we want to add a custom syntax, there are 5 things need to be done:\n\n1. Add a remark plugin to make sure the syntax can be parsed and serialized correctly.\n2. Define the prosemirror schema for your custom node.\n3. Write a parser specification to transform the remark AST into prosemirror node.\n4. Write a serializer specification to transform the prosemirror node into remark AST.\n5. Write prosemirror input rules to make sure user input can be handled correctly.\n\n---\n\nIn this section, we will add a **custom iframe syntax** to insert iframe as node in milkdown.\n\n## Remark Plugin\n\nFirst, we need a remark plugin to support our custom syntax.\nLuckily, remark provides a powerful [remark directive plugin](https://github.com/remarkjs/remark-directive) to support custom syntax. With this plugin, we can easily define a iframe using following text:\n\n```markdown\n# My Iframe\n\n:iframe{src=\"https://saul-mirone.github.io\"}\n```\n\nSo, what we needs to do is just install it and transform it into a milkdown plugin:\n\n```typescript\nimport { remarkPluginFactory } from '@milkdown/core';\nimport directive from 'remark-directive';\n\nconst directiveRemarkPlugin = remarkPluginFactory(directive);\n```\n\n## Define Schema\n\nNext, we need to define the schema of an iframe node,\nour iframe should be an inline node because it doesn't have and children,\nand have a `src` attribute to connect to the source.\n\n```typescript\nimport { nodeFactory } from '@milkdown/core';\n\nconst id = 'iframe';\nconst iframe = nodeFactory({\n    id,\n    schema: {\n        inline: true,\n        attrs: {\n            src: { default: null },\n        },\n        group: 'inline',\n        marks: '',\n        parseDOM: [\n            {\n                tag: 'iframe',\n                getAttrs: (dom) => {\n                    if (!(dom instanceof HTMLElement)) {\n                        throw new Error();\n                    }\n                    return {\n                        src: dom.getAttribute('src'),\n                    };\n                },\n            },\n        ],\n        toDOM: (node) => ['iframe', { ...node.attrs, class: 'iframe' }, 0],\n    },\n});\n```\n\n## Parser\n\nThen, we need to add a parser specification to transform remark AST to prosemirror node.\nYou can use some inspect tools to find out the remark AST structure,\nwe noticed that the iframe node have following structure:\n\n```typescript\nconst AST = {\n    name: 'iframe',\n    attributes: { src: 'https://saul-mirone.github.io' },\n    type: 'textDirective',\n};\n```\n\nSo we can easily write our parser specification for it:\n\n```typescript\nconst iframe = nodeFactory({\n    // ...\n    parser: {\n        match: (node) => node.type === 'textDirective' && node.name === 'iframe',\n        runner: (state, node, type) => {\n            state.addNode(type, { src: (node.attributes as { src: string }).src });\n        },\n    },\n});\n```\n\nNow, text in `defaultValue` can be parsed to iframe elements correctly.\n\n## Serializer\n\nThen, we need to add a serializer specification to transform prosemirror node to remark AST:\n\n```typescript\nconst iframe = nodeFactory({\n    // ...\n    serializer: {\n        match: (node) => node.type.name === id,\n        runner: (state, node) => {\n            state.addNode('textDirective', undefined, undefined, {\n                name: 'iframe',\n                attributes: {\n                    src: node.attrs.src,\n                },\n            });\n        },\n    },\n});\n```\n\nNow, iframe elements can be serialized into string correctly.\n\n## Input Rule\n\nFor user input texts that should be transformed into iframe, we also should make it work.\nWe can use `inputRules` to define [prosemirror input rules](https://prosemirror.net/docs/ref/#inputrules) to implement this:\n\n```typescript\nimport { Node } from '@milkdown/core';\nimport { InputRule } from 'prosemirror-inputrules';\n\nconst iframe = nodeFactory({\n    // ...\n    inputRules: (nodeType) => [\n        new InputRule(/:iframe\\{src\\=\"(?<src>[^\"]+)?\"?\\}/, (state, match, start, end) => {\n            const [okay, src = ''] = match;\n            const { tr } = state;\n            if (okay) {\n                tr.replaceWith(start, end, nodeType.create({ src }));\n            }\n\n            return tr;\n        }),\n    ],\n});\n```\n\n## Use Plugins\n\nThen, we can just `use` the plugins we write:\n\n```typescript\nimport { Editor } from '@milkdown/core';\nimport { commonmark } from '@milkdown/preset-commonmark';\n\nnew Editor().use([directiveRemarkPlugin, iframe]).use(commonmark).create();\n```\n\n---\n\n## Full Code\n\n```typescript\nimport { remarkPluginFactory, Editor, nodeFactory, defaultValueCtx } from '@milkdown/core';\nimport { commonmark } from '@milkdown/preset-commonmark';\nimport { InputRule } from 'prosemirror-inputrules';\n\nimport directive from 'remark-directive';\n\nconst directiveRemarkPlugin = remarkPluginFactory(directive);\n\nconst id = 'iframe';\nconst iframe = nodeFactory({\n    id,\n    schema: {\n        inline: true,\n        attrs: {\n            src: { default: null },\n        },\n        group: 'inline',\n        marks: '',\n        atom: true,\n        parseDOM: [\n            {\n                tag: 'iframe',\n                getAttrs: (dom) => {\n                    if (!(dom instanceof HTMLElement)) {\n                        throw new Error();\n                    }\n                    return {\n                        src: dom.getAttribute('src'),\n                    };\n                },\n            },\n        ],\n        toDOM: (node) => ['iframe', { ...node.attrs, class: 'iframe' }, 0],\n    },\n    parser: {\n        match: (node) => {\n            return node.type === 'textDirective' && node.name === 'iframe';\n        },\n        runner: (state, node, type) => {\n            console.log(node);\n            state.addNode(type, { src: (node.attributes as { src: string }).src });\n        },\n    },\n    serializer: {\n        match: (node) => node.type.name === id,\n        runner: (state, node) => {\n            state.addNode('textDirective', undefined, undefined, {\n                name: 'iframe',\n                attributes: {\n                    src: node.attrs.src,\n                },\n            });\n        },\n    },\n    inputRules: (nodeType) => [\n        new InputRule(/:iframe\\{src\\=\"(?<src>[^\"]+)?\"?\\}/, (state, match, start, end) => {\n            const [okay, src = ''] = match;\n            const { tr } = state;\n            if (okay) {\n                tr.replaceWith(start, end, nodeType.create({ src }));\n            }\n\n            return tr;\n        }),\n    ],\n});\n\nconst defaultValue = `\n# Custom Syntax\n\n:iframe{src=\"https://saul-mirone.github.io/milkdown/\"}\n`;\n\nnew Editor()\n    .config((ctx) => {\n        ctx.set(defaultValueCtx, defaultValue);\n    })\n    .use([directiveRemarkPlugin, iframe])\n    .use(commonmark)\n    .create();\n```\n"},{title:"Writing Plugins",link:"/writing-plugins",content:"# Writing Plugins\n\nInstead of using provided utils to create plugin, you can also write plugin yourself.\nYou will get more access to the plugin detail in this way. And this could help you to write yourself a powerful plugin.\n\n## Structure Overview\n\nGenerally, a plugin will have following structure:\n\n```typescript\nimport { MilkdownPlugin } from '@milkdown/core';\n\nconst myPlugin: MilkdownPlugin = (pre) => {\n    // #1 prepare plugin\n    return async (ctx) => {\n        // #2 run plugin\n    };\n};\n```\n\nEach plugin has two parts:\n\n1. _Prepare_: this part will be executed when plugin is registered in milkdown by `.use` method.\n2. _Run_: this part will be executed when plugin is actually loaded.\n\n## Timer\n\nTimer can be used to decide when to load the current plugin and how current plugin can influence other plugin's load.\n\nYou can use `ctx.wait` to wait a timer finish.\n\n```typescript\nimport { MilkdownPlugin, Complete } from '@milkdown/core';\n\nconst myPlugin: MilkdownPlugin = () => {\n    return async (ctx) => {\n        const start = Date.now();\n\n        await ctx.wait(Complete);\n\n        const end = Date.now();\n\n        console.log('Milkdown load duration: ', end - start);\n    };\n};\n```\n\nYou can also create your own timer and influence other plugin's load time.\nFor example, let's create a plugin that will fetch markdown content from remote server as editor's default value.\n\n```typescript\nimport { MilkdownPlugin, editorStateTimerCtx, defaultValueCtx, createTimer } from '@milkdown/core';\n\nconst RemoteTimer = createTimer('RemoteTimer');\n\nconst remotePlugin: MilkdownPlugin = (pre) => {\n    pre.record(RemoteTimer);\n\n    return async (ctx) => {\n        ctx.update(editorStateTimerCtx, (timers) => timers.concat(RemoteTimer));\n\n        const defaultMarkdown = await fetchMarkdownAPI();\n        ctx.set(defaultValueCtx, defaultMarkdown);\n\n        ctx.done(RemoteTimer);\n    };\n};\n```\n\nIt has following steps:\n\n1. We use `createTimer` to create a timer, and use `pre.record` to register it into the plugin.\n2. We update `editorStateTimerCtx` to tell the internal `editorState` plugin that before initialize editor state, it should wait our remote fetch process finished.\n3. After we get value from API, we set it as defaultValue and use `ctx.done` to mark a timer as complete.\n\n## Ctx\n\nWe have used `ctx` several times in the above example, now we can understand what it is.\nCtx is a piece of data that can be shared in the entire editor instance.\n\n```typescript\nimport { MilkdownPlugin, createCtx } from '@milkdown/core';\n\nconst counterCtx = createCtx(0);\n\nconst counterPlugin: MilkdownPlugin = (pre) => {\n    pre.inject(counterCtx);\n\n    return (ctx) => {\n        // count is 0\n        const count0 = ctx.get(counterCtx);\n\n        // set count to 1\n        ctx.get(counterCtx, 1);\n\n        // now count is 1\n        const count1 = ctx.get(counterCtx);\n\n        // set count to n + 2\n        ctx.update(counterCtx, (prev) => prev + 2);\n\n        // now count is 3\n        const count2 = ctx.get(counterCtx);\n    };\n};\n```\n\nWe can use `createCtx` to create a ctx, and use `pre.inject` to inject the ctx into the editor.\n\nAnd when plugin processing, `ctx.get` can get the value of a ctx, `ctx.set` can set the value of a ctx, and `ctx.update` can update a ctx using callback function.\n\nSo, we can use `ctx` combine with `timer` to decide when should a plugin be processed.\n\n```typescript\nimport { MilkdownPlugin, SchemaReady, Timer, createCtx } from '@milkdown/core';\n\nconst examplePluginTimersCtx = createCtx<Timer[]>([]);\n\nconst examplePlugin: MilkdownPlugin = (pre) => {\n    pre.inject(counterCtx, [SchemaReady]);\n    return async (ctx) => {\n        await Promise.all(ctx.get(examplePluginTimersCtx).map((timer) => ctx.wait(timer)));\n        // or we can use a simplified syntax sugar\n        await ctx.waitTimers(examplePluginTimersCtx);\n\n        // do something\n    };\n};\n```\n\nWith this pattern, if other plugins want to delay the process of `examplePlugin`, all they need to do is just add a timer into `examplePluginTimersCtx` with `ctx.update`.\n"},{title:"Internal Plugins",link:"/internal-plugins",content:"# Internal Plugins\n\nMilkdown has some internal plugins that control the entire editor's load status.\nHere is a list of them and their timer and ctx.\n\n---\n\n## Prepare\n\nIn this status, milkdown will collect nodes and marks and all the user configs.\n\n### Config\n\n-   name: **config**\n-   timer:\n    -   **Config**: Plugin process finish.\n\n### Init\n\n-   name: **init**\n-   ctx:\n    -   **initTimerCtx**: Decide the timing that load this plugin.\n        default:\n        -   **Config**\n    -   **editorCtx**: Save the editor instance.\n    -   **remarkCtx**: Save the remark instance.\n-   timer:\n    -   **Initialize**: Plugin process finish.\n\n---\n\n## Load Schema and Data\n\nDuring this status, milkdown will generate data by nodes and marks, such as schema and keymap.\n\n### Schema\n\n-   name: **schema**\n-   ctx:\n    -   **schemaTimerCtx**: Decide the timing that load this plugin.\n        default:\n        -   **Initialize**\n    -   **schemaCtx**: Save the prosemirror schema.\n    -   **nodesCtx**: Save the editor's node list.\n    -   **marksCtx**: Save the editor's mark list.\n-   timer:\n    -   **SchemaReady**: Plugin process finish.\n\n### Parser\n\n-   name: **parser**\n-   ctx:\n    -   **parserTimerCtx**: Decide the timing that load this plugin.\n        default:\n        -   **SchemaRead**\n    -   **parserCtx**: Save the markdown parser.\n-   timer:\n    -   **ParserReady**: Plugin process finish.\n\n### Serializer\n\n-   name: **serializer**\n-   ctx:\n    -   **serializerTimerCtx**: Decide the timing that load this plugin.\n        default:\n        -   **SchemaRead**\n    -   **serializerCtx**: Save the markdown parser.\n-   timer:\n    -   **SerializerReady**: Plugin process finish.\n\n### Node View\n\n-   name: **nodeView**\n-   ctx:\n    -   **nodeViewTimerCtx**: Decide the timing that load this plugin.\n        default:\n        -   **SchemaRead**\n    -   **nodeViewCtx**: Save the prosemirror node view mapping.\n-   timer:\n    -   **NodeViewReady**: Plugin process finish.\n\n### Keymap\n\n-   name: **keymap**\n-   ctx:\n    -   **keymapTimerCtx**: Decide the timing that load this plugin.\n        default:\n        -   **SchemaRead**\n    -   **keymapCtx**: Save the prosemirror keymap list.\n-   timer:\n    -   **KeymapReady**: Plugin process finish.\n\n### Input Rules\n\n-   name: **inputRules**\n-   ctx:\n    -   **inputRulesTimerCtx**: Decide the timing that load this plugin.\n        default:\n        -   **SchemaRead**\n    -   **inputRulesCtx**: Save the prosemirror input rules list.\n-   timer:\n    -   **InputRulesReady**: Plugin process finish.\n\n---\n\n## Create Editor\n\nDuring this status, milkdown will create prosemirror editor state and editor view.\n\n### Editor State\n\n-   name: **editorState**\n-   ctx:\n    -   **editorStateTimerCtx**: Decide the timing that load this plugin.\n        default:\n        -   **KeymapReady**\n        -   **InputRulesReady**\n        -   **ParserReady**\n        -   **SerializerReady**\n    -   **editorStateCtx**: Save the prosemirror editor state.\n    -   **editorStateOptionsCtx**: Save the config that can be used to override the internal editor state options.\n    -   **defaultValueCtx**: Save the editor default value, can be json, node or string.\n-   timer:\n    -   **EditorStateReady**: Plugin process finish.\n\n### Editor View\n\n-   name: **editorView**\n-   ctx:\n    -   **editorViewTimerCtx**: Decide the timing that load this plugin.\n        default:\n        -   **NodeViewReady**\n        -   **EditorStateReady**\n    -   **editorViewCtx**: Save the prosemirror editor view.\n    -   **editorViewOptionsCtx**: Save the config that can be used to override the internal editor view options.\n    -   **rootCtx**: Save the root dom that milkdown should load on.\n-   timer:\n    -   **Complete**: Plugin process finish.\n"}]}];var Di={body:"_body_6vezy_1",right:"_right_6vezy_7",fold:"_fold_6vezy_28",main:"_main_6vezy_36",container:"_container_6vezy_40",homepage:"_homepage_6vezy_64"};var Ii={footer:"_footer_7hn2r_1",homepage:"_homepage_7hn2r_11"};const Wi=()=>{const[e]=xi(),t=[Ii.footer,e===vi.Home?Ii.homepage:""].join(" ");return a.createElement("footer",{className:t},"MIT Licensed | Copyright © 2021-present Mirone ♡ Meo")},zi=ji.flatMap((e=>e.items)),$i=({setScrolled:e,isDarkMode:t,editorMode:n})=>{const o=a.useRef(null),[r]=xi(),i=[Di.container,r===vi.Home?Di.homepage:""].join(" ");return a.useEffect((()=>{if(!o.current)return;const{current:t}=o,n=t=>{const{target:n}=t;if(!(n instanceof HTMLDivElement))return;const{scrollTop:o}=n;e(o>0)};return t.addEventListener("scroll",n),()=>{t.removeEventListener("scroll",n)}}),[e]),a.createElement("div",{ref:o,className:i},a.createElement("article",null,a.createElement(Pe,null,a.createElement(Le,{exact:!0,path:"/"},a.createElement(Ve,null)),a.createElement(Le,{exact:!0,path:"/online-demo"},a.createElement(Ni,{mode:n,content:"# Milkdown\n\n![logo](https://preview.redd.it/us7w1x2zx8461.jpg?auto=webp&s=077a73d5c08aec0bc0fb48c5e5be40c928467bb6)\n\n> Milkdown is a WYSIWYG markdown editor.\n>\n> Here is the [repo](https://github.com/Saul-Mirone/milkdown) (_right click to open link_).\n> We ~~only support commonmark~~. GFM is also supported!.\n\nYou can check the output markdown text in **developer tool**.\n\n-   Features\n    -   [x] 📝 **WYSIWYG Markdown** - Write markdown in an elegant way\n    -   [x] 🎨 **Themable** - Theme can be shared and used with npm packages\n    -   [x] 🎮 **Hackable** - Support your awesome idea by plugin\n    -   [x] 🦾 **Reliable** - Built on top of [prosemirror](https://prosemirror.net/) and [remark](https://github.com/remarkjs/remark)\n    -   [x] ⚡️ **Slash & Tooltip** - Write fast for everyone, driven by plugin\n    -   [x] 🧮 **Math** - LaTeX math equations support, driven by plugin\n    -   [x] 📊 **Table** - Table support with fluent ui, driven by plugin\n-   Made by\n    -   Programmer: [Mirone](https://github.com/Saul-Mirone)\n    -   Designer: [Meo](https://github.com/Saul-Meo)\n\n---\n\nYou can add `inline code` and code block:\n\n```javascript\nfunction main() {\n    console.log('Hello milkdown!');\n}\n```\n\n---\n\nYou can type `||` and a `space` to create a table:\n\n| First Header   |   Second Header    |\n| -------------- | :----------------: |\n| Content Cell 1 |  `Content` Cell 1  |\n| Content Cell 2 | **Content** Cell 2 |\n\n---\n\nMath is supported by [TeX expression](https://en.wikipedia.org/wiki/TeX).\n\nNow we have some inline math: $V \\times W \\stackrel{\\otimes}{\\rightarrow} V \\otimes W$. You can click to edit it.\n\nMath block is also supported.\n\n$$\n\\begin{aligned}\nT( (v_1 + v_2) \\otimes w) &= T(v_1 \\otimes w) + T(v_2 \\otimes w) \\\\\nT( v \\otimes (w_1 + w_2)) &= T(v \\otimes w_1) + T(v \\otimes w_2) \\\\\nT( (\\alpha v) \\otimes w ) &= T( \\alpha ( v \\otimes w) ) \\\\\nT( v \\otimes (\\alpha w) ) &= T( \\alpha ( v \\otimes w) ) \\\\\n\\end{aligned}\n$$\n\nYou can type `$$` and a `space` to create a math block.\n\n---\n\nHave fun!\n",isDarkMode:t})),zi.map(((e,t)=>a.createElement(Le,{key:t.toString(),path:e.link},a.createElement(fi,{content:e.content,readOnly:!0})))))),a.createElement(Wi,null))},Hi=()=>{const[e,t]=a.useState(!1),[n,o]=a.useState(!1),[r,i]=a.useState(Mi.Default),[s,l]=a.useState(!1);return a.createElement(Ae,null,a.createElement("div",{className:Di.body},a.createElement(Ri,{display:e,setDisplay:t,sections:ji}),a.createElement("div",{onClick:()=>{document.documentElement.clientWidth<1080&&t(!1)},className:e?Di.right:[Di.right,Di.fold].join(" ")},a.createElement(Ai,{isDarkMode:s,setIsDarkMode:l,onEditorModeToggle:()=>i(r===Mi.Default?Mi.TwoSide:Mi.Default),onToggle:()=>t(!e),scrolled:n,editorMode:r}),a.createElement("main",{className:Di.main},a.createElement($i,{isDarkMode:s,setScrolled:o,editorMode:r})))))};const Vi=document.getElementById("app");C.exports.render(a.createElement(Hi,null),Vi);
